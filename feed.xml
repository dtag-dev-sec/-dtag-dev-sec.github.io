<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DTAG Community Honeypot Project</title>
    <description></description>
    <link>http://dtag-dev-sec.github.io//</link>
    <atom:link href="http://dtag-dev-sec.github.io//feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Tue, 29 Sep 2020 10:13:18 +0200</pubDate>
    <lastBuildDate>Tue, 29 Sep 2020 10:13:18 +0200</lastBuildDate>
    <generator>Jekyll v4.1.1</generator>
    
      <item>
        <title>Release T-Pot 20.06</title>
        <description>&lt;p&gt;On June, 30th 2020 we finally released T-Pot 20.06 after an extensive period of testing to ensure the update process (which is still in beta) is not likely to break things. With T-Pot 20.06 released we are proud to see that T-Pot is now growing faster than before.
T-Pot 20.06 comes with new honeypots, such as Dicompot, a new Elasticpot and HoneySAP. All of which have Kibana dashboards readily available to get you covered…&lt;/p&gt;

&lt;h2 id=&quot;upgrade-from-1903x&quot;&gt;Upgrade from 19.03.x&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;If you are running T-Pot 19.x you can upgrade to T-Pot 20.06.0 by running &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/opt/tpot/update.sh&lt;/code&gt;. Please be aware upgrades can break things, so please backup all of your data or take snapshot of your machine &lt;strong&gt;before&lt;/strong&gt; you run the update procedure.&lt;/li&gt;
  &lt;li&gt;To protect possible changes of your Kibana objects you need to manually &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce/wiki/Import---Export-Kibana-Objects&quot;&gt;export&lt;/a&gt; (backup) your objects and manually &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce/wiki/Import---Export-Kibana-Objects&quot;&gt;import&lt;/a&gt; (overwrite) the provided T-Pot Kibana Objects after upgrading.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;changelog&quot;&gt;Changelog&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Release T-Pot 20.06.0&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;After 4 months of public testing with the NextGen edition T-Pot 20.06 can finally be released.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Debian Buster&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;With the release of Debian Buster T-Pot now has access to all packages required right out of the box.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Add new honeypots&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/nsmfoo/dicompot&quot;&gt;Dicompot&lt;/a&gt; by @nsmfoo is a low interaction honeypot for the Dicom protocol which is the international standard to process medical imaging information. Together with Medpot which supports the HL7 protocol T-Pot is now offering a Medical Installation type.&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/SecureAuthCorp/HoneySAP&quot;&gt;Honeysap&lt;/a&gt; by SecureAuthCorp is a low interaction honeypot for the SAP services, in case of T-Pot configured for the SAP router.&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://gitlab.com/bontchev/elasticpot&quot;&gt;Elasticpot&lt;/a&gt; by Vesselin Bontchev replaces ElasticpotPY as a low interaction honeypot for Elasticsearch with more features, plugins and scripted responses.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Rebuild Images&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;All docker images were rebuilt based on the latest (and stable running) versions of the tools and honeypots. Mostly the images now run on Alpine 3.12 / Debian Buster. However some honeypots / tools still reuire Alpine 3.11 / 3.10 to run properly.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Install Types&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;All docker-compose files (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/opt/tpot/etc/compose&lt;/code&gt;) were remixed and most of the NextGen honeypots are now available in Standard.&lt;/li&gt;
      &lt;li&gt;There is now a &lt;strong&gt;Medical&lt;/strong&gt; Installation Type with Dicompot and Medpot which will be of most interest for medical institutions to get started with T-Pot.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Update Tools&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Connecting to T-Pot via &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://&amp;lt;ip&amp;gt;:64297&lt;/code&gt; brings you to the T-Pot Landing Page now which is based on Heimdall and the latest NGINX enforcing TLS 1.3.&lt;/li&gt;
      &lt;li&gt;The ELK stack was updated to 7.8.0 and stripped down to the necessary core functions (where possible) for T-Pot while keeping ELK RAM requirements to a minimum (8GB of RAM is recommended now). The number of index pattern fields was reduced to &lt;strong&gt;697&lt;/strong&gt; which increases performance significantly. There are &lt;strong&gt;22&lt;/strong&gt; Kibana Dashboards, &lt;strong&gt;397&lt;/strong&gt; Kibana Visualizations and &lt;strong&gt;24&lt;/strong&gt; Kibana Searches readily available to cover all your needs to get started and familiar with T-Pot.&lt;/li&gt;
      &lt;li&gt;Cyberchef was updated to 9.21.0.&lt;/li&gt;
      &lt;li&gt;Elasticsearch Head was updated to the latest version available on GitHub.&lt;/li&gt;
      &lt;li&gt;Spiderfoot was updated to latest 3.1 dev.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Landing Page&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;After logging into T-Pot via web you are now greeted with a beautifully designed landing page.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Countless Tweaks and improvements&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Under the hood lots of tiny tweaks, improvements and a few bugfixes will increase your overall experience with T-Pot.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;T-Pot 20.06 runs on Debian (Stable), is based heavily on&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.docker.com/&quot;&gt;docker&lt;/a&gt;, &lt;a href=&quot;https://docs.docker.com/compose/&quot;&gt;docker-compose&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and includes dockerized versions of the following honeypots&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/huuck/ADBHoney&quot;&gt;adbhoney&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/Cymmetria/ciscoasa_honeypot&quot;&gt;ciscoasa&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/MalwareTech/CitrixHoneypot&quot;&gt;citrixhoneypot&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://conpot.org/&quot;&gt;conpot&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/cowrie/cowrie&quot;&gt;cowrie&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/nsmfoo/dicompot&quot;&gt;dicompot&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/DinoTools/dionaea&quot;&gt;dionaea&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/bontchev/elasticpot&quot;&gt;elasticpot&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mushorg/glutton&quot;&gt;glutton&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/johnnykv/heralding&quot;&gt;heralding&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/foospidy/HoneyPy&quot;&gt;honeypy&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/SecureAuthCorp/HoneySAP&quot;&gt;honeysap&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/armedpot/honeytrap/&quot;&gt;honeytrap&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/awhitehatter/mailoney&quot;&gt;mailoney&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/schmalle/medpot&quot;&gt;medpot&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/citronneur/rdpy&quot;&gt;rdpy&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://mushmush.org/&quot;&gt;snare&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://mushmush.org/&quot;&gt;tanner&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Furthermore T-Pot includes the following tools&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://cockpit-project.org/running&quot;&gt;Cockpit&lt;/a&gt; for a lightweight, webui for docker, os, real-time performance monitoring and web terminal.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gchq.github.io/CyberChef/&quot;&gt;Cyberchef&lt;/a&gt; a web app for encryption, encoding, compression and data analysis.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/videos&quot;&gt;ELK stack&lt;/a&gt; to beautifully visualize all the events captured by T-Pot.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mobz.github.io/elasticsearch-head/&quot;&gt;Elasticsearch Head&lt;/a&gt; a web front end for browsing and interacting with an Elastic Search cluster.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/0x4D31/fatt&quot;&gt;Fatt&lt;/a&gt; a pyshark based script for extracting network metadata and fingerprints from pcap files and live network traffic.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/smicallef/spiderfoot&quot;&gt;Spiderfoot&lt;/a&gt; a open source intelligence automation tool.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://suricata-ids.org/&quot;&gt;Suricata&lt;/a&gt; a Network Security Monitoring engine.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;tldr&quot;&gt;TL;DR&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;Meet the &lt;a href=&quot;#requirements&quot;&gt;system requirements&lt;/a&gt;. The T-Pot installation needs at least 8 GB RAM and 128 GB free disk space as well as a working (outgoing non-filtered) internet connection.&lt;/li&gt;
  &lt;li&gt;Download the T-Pot ISO from &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce/releases&quot;&gt;GitHub&lt;/a&gt; or &lt;a href=&quot;#createiso&quot;&gt;create it yourself&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Install the system in a &lt;a href=&quot;#vm&quot;&gt;VM&lt;/a&gt; or on &lt;a href=&quot;#hw&quot;&gt;physical hardware&lt;/a&gt; with &lt;a href=&quot;#placement&quot;&gt;internet access&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Enjoy your favorite beverage - &lt;a href=&quot;https://sicherheitstacho.eu&quot;&gt;watch&lt;/a&gt; and &lt;a href=&quot;#kibana&quot;&gt;analyze&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;table-of-contents&quot;&gt;Table of Contents&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#concept&quot;&gt;Technical Concept&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#requirements&quot;&gt;System Requirements&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#types&quot;&gt;Installation Types&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#installation&quot;&gt;Installation&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#prebuilt&quot;&gt;Prebuilt ISO Image&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#createiso&quot;&gt;Create your own ISO Image&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#vm&quot;&gt;Running in a VM&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#hardware&quot;&gt;Running on Hardware&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#postinstall&quot;&gt;Post Install User&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#postinstallauto&quot;&gt;Post Install Auto&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#cloud&quot;&gt;Cloud Deployments&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#ansible&quot;&gt;Ansible&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#terraform&quot;&gt;Terraform&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#firstrun&quot;&gt;First Run&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#placement&quot;&gt;System Placement&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#updates&quot;&gt;Updates&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#options&quot;&gt;Options&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#ssh&quot;&gt;SSH and web access&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#heimdall&quot;&gt;T-Pot Landing Page&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#kibana&quot;&gt;Kibana Dashboard&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#tools&quot;&gt;Tools&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#maintenance&quot;&gt;Maintenance&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#submission&quot;&gt;Community Data Submission&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#hpfeeds-optin&quot;&gt;Opt-In HPFEEDS Data Submission&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#roadmap&quot;&gt;Roadmap&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#disclaimer&quot;&gt;Disclaimer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#faq&quot;&gt;FAQ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#contact&quot;&gt;Contact&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#licenses&quot;&gt;Licenses&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#credits&quot;&gt;Credits&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#staytuned&quot;&gt;Stay tuned&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#testimonial&quot;&gt;Testimonial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;concept&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;technical-concept&quot;&gt;Technical Concept&lt;/h1&gt;

&lt;p&gt;T-Pot is based on the Debian (Stable) network installer.
The honeypot daemons as well as other support components are &lt;a href=&quot;http://docker.io&quot;&gt;dockered&lt;/a&gt;.
This allows T-Pot to run multiple honeypot daemons and tools on the same network interface while maintaining a small footprint and constrain each honeypot within its own environment.&lt;/p&gt;

&lt;p&gt;In T-Pot we combine the dockerized honeypots …&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/huuck/ADBHoney&quot;&gt;adbhoney&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/Cymmetria/ciscoasa_honeypot&quot;&gt;ciscoasa&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/MalwareTech/CitrixHoneypot&quot;&gt;citrixhoneypot&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://conpot.org/&quot;&gt;conpot&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.micheloosterhof.com/cowrie/&quot;&gt;cowrie&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/nsmfoo/dicompot&quot;&gt;dicompot&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/DinoTools/dionaea&quot;&gt;dionaea&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/bontchev/elasticpot&quot;&gt;elasticpot&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mushorg/glutton&quot;&gt;glutton&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/johnnykv/heralding&quot;&gt;heralding&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/foospidy/HoneyPy&quot;&gt;honeypy&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/SecureAuthCorp/HoneySAP&quot;&gt;honeysap&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/armedpot/honeytrap/&quot;&gt;honeytrap&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/awhitehatter/mailoney&quot;&gt;mailoney&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/schmalle/medpot&quot;&gt;medpot&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/citronneur/rdpy&quot;&gt;rdpy&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://mushmush.org/&quot;&gt;snare&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://mushmush.org/&quot;&gt;tanner&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;… with the following tools …&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://cockpit-project.org/running&quot;&gt;Cockpit&lt;/a&gt; for a lightweight, webui for docker, os, real-time performance monitoring and web terminal.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gchq.github.io/CyberChef/&quot;&gt;Cyberchef&lt;/a&gt; a web app for encryption, encoding, compression and data analysis.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/videos&quot;&gt;ELK stack&lt;/a&gt; to beautifully visualize all the events captured by T-Pot.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mobz.github.io/elasticsearch-head/&quot;&gt;Elasticsearch Head&lt;/a&gt; a web front end for browsing and interacting with an Elastic Search cluster.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/0x4D31/fatt&quot;&gt;Fatt&lt;/a&gt; a pyshark based script for extracting network metadata and fingerprints from pcap files and live network traffic.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/smicallef/spiderfoot&quot;&gt;Spiderfoot&lt;/a&gt; a open source intelligence automation tool.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://suricata-ids.org/&quot;&gt;Suricata&lt;/a&gt; a Network Security Monitoring engine.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;… to give you the best out-of-the-box experience possible and an easy-to-use multi-honeypot appliance.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;doc/architecture.png&quot; alt=&quot;Architecture&quot; /&gt;&lt;/p&gt;

&lt;p&gt;While data within docker containers is volatile T-Pot ensures a default 30 day persistence of all relevant honeypot and tool data in the well known &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/data&lt;/code&gt; folder and sub-folders. The persistence configuration may be adjusted in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/opt/tpot/etc/logrotate/logrotate.conf&lt;/code&gt;. Once a docker container crashes, all other data produced within its environment is erased and a fresh instance is started from the corresponding docker image.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Basically, what happens when the system is booted up is the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;start host system&lt;/li&gt;
  &lt;li&gt;start all the necessary services (i.e. cockpit, docker, etc.)&lt;/li&gt;
  &lt;li&gt;start all docker containers via docker-compose (honeypots, nms, elk, etc.)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The T-Pot project provides all the tools and documentation necessary to build your own honeypot system and contribute to our &lt;a href=&quot;https://sicherheitstacho.eu&quot;&gt;Sicherheitstacho&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The source code and configuration files are fully stored in the T-Pot GitHub repository. The docker images are preconfigured for the T-Pot environment. If you want to run the docker images separately, make sure you study the docker-compose configuration (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/opt/tpot/etc/tpot.yml&lt;/code&gt;) and the T-Pot systemd script (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/systemd/system/tpot.service&lt;/code&gt;), as they provide a good starting point for implementing changes.&lt;/p&gt;

&lt;p&gt;The individual docker configurations are located in the &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce/tree/master/docker&quot;&gt;docker folder&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;requirements&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;system-requirements&quot;&gt;System Requirements&lt;/h1&gt;
&lt;p&gt;Depending on the installation type, whether installing on &lt;a href=&quot;#hardware&quot;&gt;real hardware&lt;/a&gt; or in a &lt;a href=&quot;#vm&quot;&gt;virtual machine&lt;/a&gt;, make sure the designated system meets the following requirements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;8 GB RAM (less RAM is possible but might introduce swapping / instabilities)&lt;/li&gt;
  &lt;li&gt;128 GB SSD (smaller is possible but limits the capacity of storing events)&lt;/li&gt;
  &lt;li&gt;Network via DHCP&lt;/li&gt;
  &lt;li&gt;A working, non-proxied, internet connection&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;types&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;installation-types&quot;&gt;Installation Types&lt;/h1&gt;
&lt;p&gt;There are prebuilt installation types available each focussing on different aspects to get you started right out of the box. The docker-compose files are located in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/opt/tpot/etc/compose&lt;/code&gt;. If you want to build your own compose file just create a new one (based on the layout and settings of the prebuilds) in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/opt/tpot/etc/compose&lt;/code&gt; and run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tped.sh&lt;/code&gt; afterwards to point T-Pot to the new compose file and run you personalized edition.&lt;/p&gt;

&lt;h5 id=&quot;standard&quot;&gt;Standard&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;Honeypots: adbhoney, ciscoasa, citrixhoneypot, conpot, cowrie, dicompot, dionaea, elasticpot, heralding, honeysap, honeytrap, mailoney, medpot, rdpy, snare &amp;amp; tanner&lt;/li&gt;
  &lt;li&gt;Tools: cockpit, cyberchef, ELK, fatt, elasticsearch head, ewsposter, nginx / heimdall, spiderfoot, p0f &amp;amp; suricata&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;sensor&quot;&gt;Sensor&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;Honeypots: adbhoney, ciscoasa, citrixhoneypot, conpot, cowrie, dicompot, dionaea, elasticpot, heralding, honeypy, honeysap, honeytrap, mailoney, medpot, rdpy, snare &amp;amp; tanner&lt;/li&gt;
  &lt;li&gt;Tools: cockpit, ewsposter, fatt, p0f &amp;amp; suricata&lt;/li&gt;
  &lt;li&gt;Since there is no ELK stack provided the Sensor Installation only requires 4 GB of RAM.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;industrial&quot;&gt;Industrial&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;Honeypots: conpot, cowrie, dicompot, heralding, honeysap, honeytrap, medpot &amp;amp; rdpy&lt;/li&gt;
  &lt;li&gt;Tools: cockpit, cyberchef, ELK, fatt, elasticsearch head, ewsposter, nginx / heimdall, spiderfoot, p0f &amp;amp; suricata&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;collector&quot;&gt;Collector&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;Honeypots: heralding &amp;amp; honeytrap&lt;/li&gt;
  &lt;li&gt;Tools: cockpit, cyberchef, fatt, ELK, elasticsearch head, ewsposter, nginx / heimdall, spiderfoot, p0f &amp;amp; suricata&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;nextgen&quot;&gt;NextGen&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;Honeypots: adbhoney, ciscoasa, citrixhoneypot, conpot, cowrie, dicompot, dionaea, glutton, heralding, honeypy, honeysap, mailoney, medpot, rdpy, snare &amp;amp; tanner&lt;/li&gt;
  &lt;li&gt;Tools: cockpit, cyberchef, ELK, fatt, elasticsearch head, ewsposter, nginx / heimdall, spiderfoot, p0f &amp;amp; suricata&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;medical&quot;&gt;Medical&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;Honeypots: dicompot &amp;amp; medpot&lt;/li&gt;
  &lt;li&gt;Tools: cockpit, cyberchef, ELK, fatt, elasticsearch head, ewsposter, nginx / heimdall, spiderfoot, p0f &amp;amp; suricata&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;installation&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;installation&quot;&gt;Installation&lt;/h1&gt;
&lt;p&gt;The installation of T-Pot is straight forward and heavily depends on a working, transparent and non-proxied up and running internet connection. Otherwise the installation &lt;strong&gt;will fail!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Firstly, decide if you want to download the prebuilt installation ISO image from &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce/releases&quot;&gt;GitHub&lt;/a&gt;, &lt;a href=&quot;#createiso&quot;&gt;create it yourself&lt;/a&gt; &lt;strong&gt;&lt;em&gt;or&lt;/em&gt;&lt;/strong&gt; &lt;a href=&quot;#postinstall&quot;&gt;post-install on an existing Debian 10 (Buster)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Secondly, decide where you the system to run: &lt;a href=&quot;#hardware&quot;&gt;real hardware&lt;/a&gt; or in a &lt;a href=&quot;#vm&quot;&gt;virtual machine&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;prebuilt&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;prebuilt-iso-image&quot;&gt;Prebuilt ISO Image&lt;/h2&gt;
&lt;p&gt;An installation ISO image is available for download (~50MB), which is created by the &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce&quot;&gt;ISO Creator&lt;/a&gt; you can use yourself in order to create your own image. It will basically just save you some time downloading components and creating the ISO image.
You can download the prebuilt installation ISO from &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce/releases&quot;&gt;GitHub&lt;/a&gt; and jump to the &lt;a href=&quot;#vm&quot;&gt;installation&lt;/a&gt; section.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;createiso&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;create-your-own-iso-image&quot;&gt;Create your own ISO Image&lt;/h2&gt;
&lt;p&gt;For transparency reasons and to give you the ability to customize your install you use the &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce&quot;&gt;ISO Creator&lt;/a&gt; that enables you to create your own ISO installation image.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Requirements to create the ISO image:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Debian 10 as host system (others &lt;em&gt;may&lt;/em&gt; work, but &lt;em&gt;remain&lt;/em&gt; untested)&lt;/li&gt;
  &lt;li&gt;4GB of free memory&lt;/li&gt;
  &lt;li&gt;32GB of free storage&lt;/li&gt;
  &lt;li&gt;A working internet connection&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;How to create the ISO image:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Clone the repository and enter it.
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/dtag-dev-sec/tpotce
cd tpotce
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Run the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;makeiso.sh&lt;/code&gt; script to build the ISO image.
The script will download and install dependencies necessary to build the image on the invoking machine. It will further download the ubuntu network installer image (~50MB) which T-Pot is based on.
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo ./makeiso.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;After a successful build, you will find the ISO image &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tpot.iso&lt;/code&gt; along with a SHA256 checksum &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tpot.sha256&lt;/code&gt; in your folder.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a name=&quot;vm&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;running-in-vm&quot;&gt;Running in VM&lt;/h2&gt;
&lt;p&gt;You may want to run T-Pot in a virtualized environment. The virtual system configuration depends on your virtualization provider.&lt;/p&gt;

&lt;p&gt;T-Pot is successfully tested with &lt;a href=&quot;https://www.virtualbox.org&quot;&gt;VirtualBox&lt;/a&gt; and &lt;a href=&quot;http://www.vmware.com&quot;&gt;VMWare&lt;/a&gt; with just little modifications to the default machine configurations.&lt;/p&gt;

&lt;p&gt;It is important to make sure you meet the &lt;a href=&quot;#requirements&quot;&gt;system requirements&lt;/a&gt; and assign virtual harddisk and RAM according to the requirements while making sure networking is bridged.&lt;/p&gt;

&lt;p&gt;You need to enable promiscuous mode for the network interface for fatt, suricata and p0f to work properly. Make sure you enable it during configuration.&lt;/p&gt;

&lt;p&gt;If you want to use a wifi card as a primary NIC for T-Pot, please be aware that not all network interface drivers support all wireless cards. In VirtualBox e.g. you have to choose the &lt;em&gt;“MT SERVER”&lt;/em&gt; model of the NIC.&lt;/p&gt;

&lt;p&gt;Lastly, mount the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tpot.iso&lt;/code&gt; ISO to the VM and continue with the installation.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;You can now jump &lt;a href=&quot;#firstrun&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;hardware&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;running-on-hardware&quot;&gt;Running on Hardware&lt;/h2&gt;
&lt;p&gt;If you decide to run T-Pot on dedicated hardware, just follow these steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Burn a CD from the ISO image or make a bootable USB stick using the image. &lt;br /&gt;
Whereas most CD burning tools allow you to burn from ISO images, the procedure to create a bootable USB stick from an ISO image depends on your system. There are various Windows GUI tools available, e.g. &lt;a href=&quot;http://www.ubuntu.com/download/desktop/create-a-usb-stick-on-windows&quot;&gt;this tip&lt;/a&gt; might help you.&lt;br /&gt; On &lt;a href=&quot;http://askubuntu.com/questions/59551/how-to-burn-a-iso-to-a-usb-device&quot;&gt;Linux&lt;/a&gt; or &lt;a href=&quot;http://www.ubuntu.com/download/desktop/create-a-usb-stick-on-mac-osx&quot;&gt;MacOS&lt;/a&gt; you can use the tool &lt;em&gt;dd&lt;/em&gt; or create the USB stick with T-Pot’s &lt;a href=&quot;https://github.com/dtag-dev-sec&quot;&gt;ISO Creator&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Boot from the USB stick and install.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;Please note&lt;/em&gt;: Limited tests are performed for the Intel NUC platform other hardware platforms &lt;strong&gt;remain untested&lt;/strong&gt;. There is no hardware support provided of any kind.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;postinstall&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;post-install-user&quot;&gt;Post-Install User&lt;/h2&gt;
&lt;p&gt;In some cases it is necessary to install Debian 10 (Buster) on your own:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Cloud provider does not offer mounting ISO images.&lt;/li&gt;
  &lt;li&gt;Hardware setup needs special drivers and / or kernels.&lt;/li&gt;
  &lt;li&gt;Within your company you have to setup special policies, software etc.&lt;/li&gt;
  &lt;li&gt;You just like to stay on top of things.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The T-Pot Universal Installer will upgrade the system and install all required T-Pot dependencies.&lt;/p&gt;

&lt;p&gt;Just follow these steps:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/dtag-dev-sec/tpotce
cd tpotce/iso/installer/
./install.sh --type=user
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The installer will now start and guide you through the install process.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;postinstallauto&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;post-install-auto&quot;&gt;Post-Install Auto&lt;/h2&gt;
&lt;p&gt;You can also let the installer run automatically if you provide your own &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tpot.conf&lt;/code&gt;. An example is available in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tpotce/iso/installer/tpot.conf.dist&lt;/code&gt;. This should make things easier in case you want to automate the installation i.e. with &lt;strong&gt;Ansible&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Just follow these steps while adjusting &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tpot.conf&lt;/code&gt; to your needs:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/dtag-dev-sec/tpotce
cd tpotce/iso/installer/
cp tpot.conf.dist tpot.conf
./install.sh --type=auto --conf=tpot.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The installer will start automatically and guide you through the install process.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;cloud&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;cloud-deployments&quot;&gt;Cloud Deployments&lt;/h2&gt;
&lt;p&gt;Located in the &lt;a href=&quot;cloud&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cloud&lt;/code&gt;&lt;/a&gt; folder.&lt;br /&gt;
Currently there are examples with Ansible &amp;amp; Terraform.&lt;br /&gt;
If you would like to contribute, you can add other cloud deployments like Chef or Puppet or extend current methods with other cloud providers.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Please note&lt;/em&gt;: Cloud providers usually offer adjusted Debian OS images, which might not be compatible with T-Pot. There is no cloud provider support provided of any kind.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;ansible&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;ansible-deployment&quot;&gt;Ansible Deployment&lt;/h3&gt;
&lt;p&gt;You can find an &lt;a href=&quot;https://www.ansible.com/&quot;&gt;Ansible&lt;/a&gt; based T-Pot deployment in the &lt;a href=&quot;cloud/ansible&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cloud/ansible&lt;/code&gt;&lt;/a&gt; folder.&lt;br /&gt;
The Playbook in the &lt;a href=&quot;cloud/ansible/openstack&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cloud/ansible/openstack&lt;/code&gt;&lt;/a&gt; folder is reusable for all &lt;strong&gt;OpenStack&lt;/strong&gt; clouds out of the box.&lt;/p&gt;

&lt;p&gt;It first creates all resources (security group, network, subnet, router), deploys a new server and then installs and configures T-Pot.&lt;/p&gt;

&lt;p&gt;You can have a look at the Playbook and easily adapt the deploy role for other &lt;a href=&quot;https://docs.ansible.com/ansible/latest/modules/list_of_cloud_modules.html&quot;&gt;cloud providers&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Please note&lt;/em&gt;: Cloud providers usually offer adjusted Debian OS images, which might not be compatible with T-Pot. There is no cloud provider support provided of any kind.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;terraform&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;terraform-configuration&quot;&gt;Terraform Configuration&lt;/h3&gt;

&lt;p&gt;You can find &lt;a href=&quot;https://www.terraform.io/&quot;&gt;Terraform&lt;/a&gt; configuration in the &lt;a href=&quot;cloud/terraform&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cloud/terraform&lt;/code&gt;&lt;/a&gt; folder.&lt;/p&gt;

&lt;p&gt;This can be used to launch a virtual machine, bootstrap any dependencies and install T-Pot in a single step.&lt;/p&gt;

&lt;p&gt;Configuration for &lt;strong&gt;Amazon Web Services&lt;/strong&gt; (AWS) and &lt;strong&gt;Open Telekom Cloud&lt;/strong&gt; (OTC) is currently included.&lt;br /&gt;
This can easily be extended to support other &lt;a href=&quot;https://www.terraform.io/docs/providers/index.html&quot;&gt;Terraform providers&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Please note&lt;/em&gt;: Cloud providers usually offer adjusted Debian OS images, which might not be compatible with T-Pot. There is no cloud provider support provided of any kind.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;firstrun&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;first-run&quot;&gt;First Run&lt;/h2&gt;
&lt;p&gt;The installation requires very little interaction, only a locale and keyboard setting have to be answered for the basic linux installation. While the system reboots maintain the active internet connection. The T-Pot installer will start and ask you for an installation type, password for the &lt;strong&gt;tsec&lt;/strong&gt; user and credentials for a &lt;strong&gt;web user&lt;/strong&gt;. Everything else will be configured automatically. All docker images and other componenents will be downloaded. Depending on your network connection and the chosen installation type, the installation may take some time. With 250Mbit down / 40Mbit up the installation is usually finished within 15-30 minutes.&lt;/p&gt;

&lt;p&gt;Once the installation is finished, the system will automatically reboot and you will be presented with the T-Pot login screen. On the console you may login with:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;user: &lt;strong&gt;[tsec or user]&lt;/strong&gt; &lt;em&gt;you chose during one of the post install methods&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;pass: &lt;strong&gt;[password]&lt;/strong&gt; &lt;em&gt;you chose during the installation&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All honeypot services are preconfigured and are starting automatically.&lt;/p&gt;

&lt;p&gt;You can login from your browser and access the Admin UI: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://&amp;lt;your.ip&amp;gt;:64294&lt;/code&gt; or via SSH to access the command line: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh -l tsec -p 64295 &amp;lt;your.ip&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;user: &lt;strong&gt;[tsec or user]&lt;/strong&gt; &lt;em&gt;you chose during one of the post install methods&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;pass: &lt;strong&gt;[password]&lt;/strong&gt; &lt;em&gt;you chose during the installation&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can also login from your browser and access the Web UI: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://&amp;lt;your.ip&amp;gt;:64297&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;user: &lt;strong&gt;[user]&lt;/strong&gt; &lt;em&gt;you chose during the installation&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;pass: &lt;strong&gt;[password]&lt;/strong&gt; &lt;em&gt;you chose during the installation&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;placement&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;system-placement&quot;&gt;System Placement&lt;/h1&gt;
&lt;p&gt;Make sure your system is reachable through a network you suspect intruders in / from (i.e. the internet). Otherwise T-Pot will most likely not capture any attacks, other than the ones from your internal network! For starters it is recommended to put T-Pot in an unfiltered zone, where all TCP and UDP traffic is forwarded to T-Pot’s network interface. However to avoid fingerprinting you can put T-Pot behind a firewall and forward all TCP / UDP traffic in the port range of 1-64000 to T-Pot while allowing access to ports &amp;gt; 64000 only from trusted IPs.&lt;/p&gt;

&lt;p&gt;A list of all relevant ports is available as part of the &lt;a href=&quot;#concept&quot;&gt;Technical Concept&lt;/a&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Basically, you can forward as many TCP ports as you want, as glutton &amp;amp; honeytrap dynamically bind any TCP port that is not covered by the other honeypot daemons.&lt;/p&gt;

&lt;p&gt;In case you need external Admin UI access, forward TCP port 64294 to T-Pot, see below.
In case you need external SSH access, forward TCP port 64295 to T-Pot, see below.
In case you need external Web UI access, forward TCP port 64297 to T-Pot, see below.&lt;/p&gt;

&lt;p&gt;T-Pot requires outgoing git, http, https connections for updates (Debian, Docker, GitHub, PyPi), attack submission (ewsposter, hpfeeds) and CVE / IP reputation translation map updates (logstash, listbot). Ports and availability may vary based on your geographical location. Also during first install outgoing ICMP / TRACEROUTE is required additionally to find the closest and fastest mirror to you.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;updates&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;updates&quot;&gt;Updates&lt;/h1&gt;
&lt;p&gt;For the ones of you who want to live on the bleeding edge of T-Pot development we introduced an update feature which will allow you to update all T-Pot relevant files to be up to date with the T-Pot master branch.
&lt;strong&gt;If you made any relevant changes to the T-Pot relevant config files make sure to create a backup first.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Update script will:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;mercilessly&lt;/strong&gt; overwrite local changes to be in sync with the T-Pot master branch&lt;/li&gt;
  &lt;li&gt;upgrade the system to the packages available in Debian (Stable)&lt;/li&gt;
  &lt;li&gt;update all resources to be in-sync with the T-Pot master branch&lt;/li&gt;
  &lt;li&gt;ensure all T-Pot relevant system files will be patched / copied into the original T-Pot state&lt;/li&gt;
  &lt;li&gt;restore your custom ews.cfg and HPFEED settings from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/data/ews/conf&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You simply run the update script:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo su -
cd /opt/tpot/
./update.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Despite all testing efforts please be reminded that updates sometimes may have unforeseen consequences. Please create a backup of the machine or the files with the most value to your work.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;options&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;options&quot;&gt;Options&lt;/h1&gt;
&lt;p&gt;The system is designed to run without any interaction or maintenance and automatically contributes to the community.&lt;br /&gt;
For some this may not be enough. So here some examples to further inspect the system and change configuration parameters.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;ssh&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;ssh-and-web-access&quot;&gt;SSH and web access&lt;/h2&gt;
&lt;p&gt;By default, the SSH daemon allows access on &lt;strong&gt;tcp/64295&lt;/strong&gt; with a user / password combination and prevents credential brute forcing attempts using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fail2ban&lt;/code&gt;. This also counts for Admin UI (&lt;strong&gt;tcp/64294&lt;/strong&gt;) and Web UI (&lt;strong&gt;tcp/64297&lt;/strong&gt;) access.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;If you do not have a SSH client at hand and still want to access the machine via command line you can do so by accessing the Admin UI from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://&amp;lt;your.ip&amp;gt;:64294&lt;/code&gt;, enter&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;user: &lt;strong&gt;[tsec or user]&lt;/strong&gt; &lt;em&gt;you chose during one of the post install methods&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;pass: &lt;strong&gt;[password]&lt;/strong&gt; &lt;em&gt;you chose during the installation&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can also add two factor authentication to Cockpit just by running &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2fa.sh&lt;/code&gt; on the command line.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;doc/cockpit3.png&quot; alt=&quot;Cockpit Terminal&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;heimdall&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;t-pot-landing-page&quot;&gt;T-Pot Landing Page&lt;/h2&gt;
&lt;p&gt;Just open a web browser and connect to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://&amp;lt;your.ip&amp;gt;:64297&lt;/code&gt;, enter&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;user: &lt;strong&gt;[user]&lt;/strong&gt; &lt;em&gt;you chose during the installation&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;pass: &lt;strong&gt;[password]&lt;/strong&gt; &lt;em&gt;you chose during the installation&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and the &lt;strong&gt;Landing Page&lt;/strong&gt; will automagically load. Now just click on the tool / link you want to start.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;doc/heimdall.png&quot; alt=&quot;Dashbaord&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;kibana&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;kibana-dashboard&quot;&gt;Kibana Dashboard&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;doc/kibana.png&quot; alt=&quot;Dashbaord&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;tools&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;tools&quot;&gt;Tools&lt;/h2&gt;
&lt;p&gt;The following web based tools are included to improve and ease up daily tasks.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;doc/cockpit1.png&quot; alt=&quot;Cockpit Overview&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;doc/cockpit2.png&quot; alt=&quot;Cockpit Containers&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;doc/cyberchef.png&quot; alt=&quot;Cyberchef&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;doc/headplugin.png&quot; alt=&quot;ES Head Plugin&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;doc/spiderfoot.png&quot; alt=&quot;Spiderfoot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;maintenance&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;maintenance&quot;&gt;Maintenance&lt;/h2&gt;
&lt;p&gt;T-Pot is designed to be low maintenance. Basically, there is nothing you have to do but let it run.&lt;/p&gt;

&lt;p&gt;If you run into any problems, a reboot may fix it :bowtie:&lt;/p&gt;

&lt;p&gt;If new versions of the components involved appear new docker images will be created and distributed. New images will be available from docker hub and downloaded automatically to T-Pot and activated accordingly.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;submission&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;community-data-submission&quot;&gt;Community Data Submission&lt;/h2&gt;
&lt;p&gt;T-Pot is provided in order to make it accessible to all interested in honeypots. By default, the captured data is submitted to a community backend. This community backend uses the data to feed &lt;a href=&quot;https://sicherheitstacho.eu&quot;&gt;Sicherheitstacho&lt;/a&gt;.
You may opt out of the submission by removing the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;# Ewsposter service&lt;/code&gt; from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/opt/tpot/etc/tpot.yml&lt;/code&gt;:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Stop T-Pot services: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;systemctl stop tpot&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Remove Ewsposter service: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vi /opt/tpot/etc/tpot.yml&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Remove the following lines, save and exit vi (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:x!&lt;/code&gt;):&lt;br /&gt;
```
    &lt;h1 id=&quot;ewsposter-service&quot;&gt;Ewsposter service&lt;/h1&gt;
    &lt;p&gt;ewsposter:
 container_name: ewsposter
 restart: always
 networks:&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;ewsposter_local
 image: “dtagdevsec/ewsposter:2006”
 volumes:&lt;/li&gt;
      &lt;li&gt;/data:/data&lt;/li&gt;
      &lt;li&gt;/data/ews/conf/ews.ip:/opt/ewsposter/ews.ip
```&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Start T-Pot services: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;systemctl start tpot&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Data is submitted in a structured ews-format, a XML stucture. Hence, you can parse out the information that is relevant to you.&lt;/p&gt;

&lt;p&gt;It is encouraged not to disable the data submission as it is the main purpose of the community approach - as you all know &lt;strong&gt;sharing is caring&lt;/strong&gt; 😍&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;hpfeeds-optin&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;opt-in-hpfeeds-data-submission&quot;&gt;Opt-In HPFEEDS Data Submission&lt;/h2&gt;
&lt;p&gt;As an Opt-In it is now possible to also share T-Pot data with 3rd party HPFEEDS brokers.&lt;br /&gt;
If you want to share your T-Pot data you simply have to register an account with a 3rd party broker with its own benefits towards the community. You simply run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hpfeeds_optin.sh&lt;/code&gt; which will ask for your credentials. It will automatically update &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/opt/tpot/etc/tpot.yml&lt;/code&gt; to deliver events to your desired broker.&lt;/p&gt;

&lt;p&gt;The script can accept a config file as an argument, e.g. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./hpfeeds_optin.sh --conf=hpfeeds.cfg&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Your current config will also be stored in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/data/ews/conf/hpfeeds.cfg&lt;/code&gt; where you can review or change it.&lt;br /&gt;
Be sure to apply any changes by running &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./hpfeeds_optin.sh --conf=/data/ews/conf/hpfeeds.cfg&lt;/code&gt;.&lt;br /&gt;
No worries: Your old config gets backed up in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/data/ews/conf/hpfeeds.cfg.old&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Of course you can also rerun the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hpfeeds_optin.sh&lt;/code&gt; script to change and apply your settings interactively.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;roadmap&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;roadmap&quot;&gt;Roadmap&lt;/h1&gt;
&lt;p&gt;As with every development there is always room for improvements …&lt;/p&gt;

&lt;p&gt;Some features may be provided with updated docker images, others may require some hands on from your side.&lt;/p&gt;

&lt;p&gt;You are always invited to participate in development on our &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce&quot;&gt;GitHub&lt;/a&gt; page.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;disclaimer&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;disclaimer&quot;&gt;Disclaimer&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;We don’t have access to your system. So we cannot remote-assist when you break your configuration. But you can simply reinstall.&lt;/li&gt;
  &lt;li&gt;The software was designed with best effort security, not to be in stealth mode. Because then, we probably would not be able to provide those kind of honeypot services.&lt;/li&gt;
  &lt;li&gt;You install and you run within your responsibility. Choose your deployment wisely as a system compromise can never be ruled out.&lt;/li&gt;
  &lt;li&gt;Honeypots - by design - should not host any sensitive data. Make sure you don’t add any.&lt;/li&gt;
  &lt;li&gt;By default, your data is submitted to &lt;a href=&quot;https://www.sicherheitstacho.eu/start/main&quot;&gt;SecurityMeter&lt;/a&gt;. You can disable this in the config. But hey, wouldn’t it be better to contribute to the community?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;faq&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;faq&quot;&gt;FAQ&lt;/h1&gt;
&lt;p&gt;Please report any issues or questions on our &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce/issues&quot;&gt;GitHub issue list&lt;/a&gt;, so the community can participate.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;contact&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;contact&quot;&gt;Contact&lt;/h1&gt;
&lt;p&gt;The software is provided &lt;strong&gt;as is&lt;/strong&gt; in a Community Edition format. T-Pot is designed to run out of the box and with zero maintenance involved. &lt;br /&gt;
We hope you understand that we cannot provide support on an individual basis. We will try to address questions, bugs and problems on our &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce/issues&quot;&gt;GitHub issue list&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;licenses&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;licenses&quot;&gt;Licenses&lt;/h1&gt;
&lt;p&gt;The software that T-Pot is built on uses the following licenses.
&lt;br /&gt;GPLv2: &lt;a href=&quot;https://github.com/mushorg/conpot/blob/master/LICENSE.txt&quot;&gt;conpot&lt;/a&gt;, &lt;a href=&quot;https://github.com/DinoTools/dionaea/blob/master/LICENSE&quot;&gt;dionaea&lt;/a&gt;, &lt;a href=&quot;https://github.com/SecureAuthCorp/HoneySAP/blob/master/COPYING&quot;&gt;honeysap&lt;/a&gt;, &lt;a href=&quot;https://github.com/foospidy/HoneyPy/blob/master/LICENSE&quot;&gt;honeypy&lt;/a&gt;, &lt;a href=&quot;https://github.com/armedpot/honeytrap/blob/master/LICENSE&quot;&gt;honeytrap&lt;/a&gt;, &lt;a href=&quot;http://suricata-ids.org/about/open-source/&quot;&gt;suricata&lt;/a&gt;
&lt;br /&gt;GPLv3: &lt;a href=&quot;https://github.com/huuck/ADBHoney&quot;&gt;adbhoney&lt;/a&gt;, &lt;a href=&quot;https://gitlab.com/bontchev/elasticpot/-/blob/master/LICENSE&quot;&gt;elasticpot&lt;/a&gt;, &lt;a href=&quot;https://github.com/dtag-dev-sec/ews/&quot;&gt;ewsposter&lt;/a&gt;, &lt;a href=&quot;https://github.com/0x4D31/fatt/blob/master/LICENSE&quot;&gt;fatt&lt;/a&gt;, &lt;a href=&quot;https://github.com/citronneur/rdpy/blob/master/LICENSE&quot;&gt;rdpy&lt;/a&gt;, &lt;a href=&quot;https://github.com/johnnykv/heralding/blob/master/LICENSE.txt&quot;&gt;heralding&lt;/a&gt;, &lt;a href=&quot;https://github.com/mushorg/snare/blob/master/LICENSE&quot;&gt;snare&lt;/a&gt;, &lt;a href=&quot;https://github.com/mushorg/snare/blob/master/LICENSE&quot;&gt;tanner&lt;/a&gt;
&lt;br /&gt;Apache 2 License: &lt;a href=&quot;https://github.com/gchq/CyberChef/blob/master/LICENSE&quot;&gt;cyberchef&lt;/a&gt;, &lt;a href=&quot;https://github.com/nsmfoo/dicompot/blob/master/LICENSE&quot;&gt;dicompot&lt;/a&gt;, &lt;a href=&quot;https://github.com/elasticsearch/elasticsearch/blob/master/LICENSE.txt&quot;&gt;elasticsearch&lt;/a&gt;, &lt;a href=&quot;https://github.com/elasticsearch/logstash/blob/master/LICENSE&quot;&gt;logstash&lt;/a&gt;, &lt;a href=&quot;https://github.com/elasticsearch/kibana/blob/master/LICENSE.md&quot;&gt;kibana&lt;/a&gt;, &lt;a href=&quot;https://github.com/docker/docker/blob/master/LICENSE&quot;&gt;docker&lt;/a&gt;, &lt;a href=&quot;https://github.com/mobz/elasticsearch-head/blob/master/LICENCE&quot;&gt;elasticsearch-head&lt;/a&gt;
&lt;br /&gt;MIT license: &lt;a href=&quot;https://github.com/Cymmetria/ciscoasa_honeypot/blob/master/LICENSE&quot;&gt;ciscoasa&lt;/a&gt;, &lt;a href=&quot;https://github.com/mushorg/glutton/blob/master/LICENSE&quot;&gt;glutton&lt;/a&gt;
&lt;br /&gt; Other: &lt;a href=&quot;https://github.com/MalwareTech/CitrixHoneypot#licencing-agreement-malwaretech-public-licence&quot;&gt;citrixhoneypot&lt;/a&gt;, &lt;a href=&quot;https://github.com/micheloosterhof/cowrie/blob/master/LICENSE.md&quot;&gt;cowrie&lt;/a&gt;, &lt;a href=&quot;https://github.com/awhitehatter/mailoney&quot;&gt;mailoney&lt;/a&gt;, &lt;a href=&quot;https://www.debian.org/legal/licenses/&quot;&gt;Debian licensing&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;credits&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;credits&quot;&gt;Credits&lt;/h1&gt;
&lt;p&gt;Without open source and the fruitful development community (we are proud to be a part of), T-Pot would not have been possible! Our thanks are extended but not limited to the following people and organizations:&lt;/p&gt;

&lt;h3 id=&quot;the-developers-and-development-communities-of&quot;&gt;The developers and development communities of&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/huuck/ADBHoney/graphs/contributors&quot;&gt;adbhoney&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ilikenwf/apt-fast/graphs/contributors&quot;&gt;apt-fast&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/Cymmetria/ciscoasa_honeypot/graphs/contributors&quot;&gt;ciscoasa&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/MalwareTech/CitrixHoneypot/graphs/contributors&quot;&gt;citrixhoneypot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/cockpit-project/cockpit/graphs/contributors&quot;&gt;cockpit&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mushorg/conpot/graphs/contributors&quot;&gt;conpot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/micheloosterhof/cowrie/graphs/contributors&quot;&gt;cowrie&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.debian.org/&quot;&gt;debian&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/nsmfoo/dicompot/graphs/contributors&quot;&gt;dicompot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/DinoTools/dionaea/graphs/contributors&quot;&gt;dionaea&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/docker/docker/graphs/contributors&quot;&gt;docker&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.com/bontchev/elasticpot/-/project_members&quot;&gt;elasticpot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/elastic/elasticsearch/graphs/contributors&quot;&gt;elasticsearch&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mobz/elasticsearch-head/graphs/contributors&quot;&gt;elasticsearch-head&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/armedpot/ewsposter/graphs/contributors&quot;&gt;ewsposter&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/0x4D31/fatt/graphs/contributors&quot;&gt;fatt&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mushorg/glutton/graphs/contributors&quot;&gt;glutton&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/johnnykv/heralding/graphs/contributors&quot;&gt;heralding&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/foospidy/HoneyPy/graphs/contributors&quot;&gt;honeypy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/SecureAuthCorp/HoneySAP/graphs/contributors&quot;&gt;honeysap&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/armedpot/honeytrap/graphs/contributors&quot;&gt;honeytrap&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/elastic/kibana/graphs/contributors&quot;&gt;kibana&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/elastic/logstash/graphs/contributors&quot;&gt;logstash&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/awhitehatter/mailoney&quot;&gt;mailoney&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/schmalle/medpot/graphs/contributors&quot;&gt;medpot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://lcamtuf.coredump.cx/p0f3/&quot;&gt;p0f&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/citronneur/rdpy&quot;&gt;rdpy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/smicallef/spiderfoot&quot;&gt;spiderfoot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mushorg/snare/graphs/contributors&quot;&gt;snare&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mushorg/tanner/graphs/contributors&quot;&gt;tanner&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/inliniac/suricata/graphs/contributors&quot;&gt;suricata&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;the-following-companies-and-organizations&quot;&gt;The following companies and organizations&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.debian.org/&quot;&gt;debian&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.docker.com/&quot;&gt;docker&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/&quot;&gt;elastic.io&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.honeynet.org/&quot;&gt;honeynet project&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.intel.com&quot;&gt;intel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;-and-of-course-you-for-joining-the-community&quot;&gt;… and of course &lt;strong&gt;&lt;em&gt;you&lt;/em&gt;&lt;/strong&gt; for joining the community!&lt;/h3&gt;

&lt;p&gt;&lt;a name=&quot;staytuned&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;stay-tuned-&quot;&gt;Stay tuned …&lt;/h1&gt;
&lt;p&gt;A new version of T-Pot is released about every 6-12 months, development has shifted more and more towards rolling releases and the usage of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/opt/tpot/update.sh&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;testimonial&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;testimonials&quot;&gt;Testimonials&lt;/h1&gt;
&lt;p&gt;One of the greatest feedback we have gotten so far is by one of the Conpot developers:&lt;br /&gt;
&lt;strong&gt;&lt;em&gt;“[…] I highly recommend T-Pot which is … it’s not exactly a swiss army knife .. it’s more like a swiss army soldier, equipped with a swiss army knife. Inside a tank. A swiss tank. […]”&lt;/em&gt;&lt;/strong&gt;&lt;br /&gt;
And from @robcowart (creator of &lt;a href=&quot;https://github.com/robcowart/elastiflow&quot;&gt;ElastiFlow&lt;/a&gt;):&lt;br /&gt;
&lt;strong&gt;&lt;em&gt;“#TPot is one of the most well put together turnkey honeypot solutions. It is a must-have for anyone wanting to analyze and understand the behavior of malicious actors and the threat they pose to your organization.”&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 20 Aug 2020 11:37:42 +0200</pubDate>
        <link>http://dtag-dev-sec.github.io//mediator/feature/2020/08/20/tpot-2006.html</link>
        <guid isPermaLink="true">http://dtag-dev-sec.github.io//mediator/feature/2020/08/20/tpot-2006.html</guid>
        
        <category>featured</category>
        
        
        <category>mediator</category>
        
        <category>feature</category>
        
      </item>
    
      <item>
        <title>Release T-Pot 19.03</title>
        <description>&lt;h1 id=&quot;t-pot-1903&quot;&gt;T-Pot 19.03&lt;/h1&gt;

&lt;p&gt;T-Pot 19.03 runs on Debian (Sid), is based heavily on&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.docker.com/&quot;&gt;docker&lt;/a&gt;, &lt;a href=&quot;https://docs.docker.com/compose/&quot;&gt;docker-compose&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and includes dockerized versions of the following honeypots&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/huuck/ADBHoney&quot;&gt;adbhoney&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/Cymmetria/ciscoasa_honeypot&quot;&gt;ciscoasa&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://conpot.org/&quot;&gt;conpot&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/cowrie/cowrie&quot;&gt;cowrie&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/DinoTools/dionaea&quot;&gt;dionaea&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/schmalle/ElasticpotPY&quot;&gt;elasticpot&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://mushmush.org/&quot;&gt;glastopf&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mushorg/glutton&quot;&gt;glutton&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/johnnykv/heralding&quot;&gt;heralding&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/foospidy/HoneyPy&quot;&gt;honeypy&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/armedpot/honeytrap/&quot;&gt;honeytrap&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/awhitehatter/mailoney&quot;&gt;mailoney&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/schmalle/medpot&quot;&gt;medpot&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/citronneur/rdpy&quot;&gt;rdpy&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://mushmush.org/&quot;&gt;snare&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://mushmush.org/&quot;&gt;tanner&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Furthermore we use the following tools&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://cockpit-project.org/running&quot;&gt;Cockpit&lt;/a&gt; for a lightweight, webui for docker, os, real-time performance monitoring and web terminal.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gchq.github.io/CyberChef/&quot;&gt;Cyberchef&lt;/a&gt; a web app for encryption, encoding, compression and data analysis.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/videos&quot;&gt;ELK stack&lt;/a&gt; to beautifully visualize all the events captured by T-Pot.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mobz.github.io/elasticsearch-head/&quot;&gt;Elasticsearch Head&lt;/a&gt; a web front end for browsing and interacting with an Elastic Search cluster.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/smicallef/spiderfoot&quot;&gt;Spiderfoot&lt;/a&gt; a open source intelligence automation tool.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://suricata-ids.org/&quot;&gt;Suricata&lt;/a&gt; a Network Security Monitoring engine.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;tldr&quot;&gt;TL;DR&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;Meet the &lt;a href=&quot;#requirements&quot;&gt;system requirements&lt;/a&gt;. The T-Pot installation needs at least 6-8 GB RAM and 128 GB free disk space as well as a working internet connection.&lt;/li&gt;
  &lt;li&gt;Download the T-Pot ISO from &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce/releases&quot;&gt;GitHub&lt;/a&gt; or &lt;a href=&quot;#createiso&quot;&gt;create it yourself&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Install the system in a &lt;a href=&quot;#vm&quot;&gt;VM&lt;/a&gt; or on &lt;a href=&quot;#hw&quot;&gt;physical hardware&lt;/a&gt; with &lt;a href=&quot;#placement&quot;&gt;internet access&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Enjoy your favorite beverage - &lt;a href=&quot;https://sicherheitstacho.eu&quot;&gt;watch&lt;/a&gt; and &lt;a href=&quot;#kibana&quot;&gt;analyze&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;table-of-contents&quot;&gt;Table of Contents&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#changelog&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#concept&quot;&gt;Technical Concept&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#requirements&quot;&gt;System Requirements&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#installation&quot;&gt;Installation&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#prebuilt&quot;&gt;Prebuilt ISO Image&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#createiso&quot;&gt;Create your own ISO Image&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#vm&quot;&gt;Running in a VM&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#hardware&quot;&gt;Running on Hardware&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#postinstall&quot;&gt;Post Install User&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#postinstallauto&quot;&gt;Post Install Auto&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#firstrun&quot;&gt;First Run&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#placement&quot;&gt;System Placement&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#updates&quot;&gt;Updates&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#options&quot;&gt;Options&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#ssh&quot;&gt;SSH and web access&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#kibana&quot;&gt;Kibana Dashboard&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#tools&quot;&gt;Tools&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#maintenance&quot;&gt;Maintenance&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#submission&quot;&gt;Community Data Submission&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#hpfeeds-optin&quot;&gt;Opt-In HPFEEDS Data Submission&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#roadmap&quot;&gt;Roadmap&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#disclaimer&quot;&gt;Disclaimer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#faq&quot;&gt;FAQ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#contact&quot;&gt;Contact&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#licenses&quot;&gt;Licenses&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#credits&quot;&gt;Credits&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#staytuned&quot;&gt;Stay tuned&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#testimonial&quot;&gt;Testimonial&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#funfact&quot;&gt;Fun Fact&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;changelog&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;release-notes&quot;&gt;Release Notes&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Move from Ubuntu 18.04 to Debian (Sid)&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;For almost 5 years Ubuntu LTS versions were our distributions of choice. Last year we made a design choice for T-Pot to be closer to a rolling release model and thus allowing us to issue smaller changes and releases in a more timely manner. The distribution of choice is Debian (Sid / unstable) which will provide us with the latest advancements in a Debian based distribution.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Include HoneyPy honeypot&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;em&gt;HoneyPy&lt;/em&gt; is now included in the NEXTGEN installation type&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Include Suricata 4.1.3&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Building &lt;em&gt;Suricata 4.1.3&lt;/em&gt; from scratch to enable JA3 and overall better protocol support.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Update tools to the latest versions&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;ELK Stack 6.6.2&lt;/li&gt;
      &lt;li&gt;CyberChef 8.27.0&lt;/li&gt;
      &lt;li&gt;SpiderFoot v3.0&lt;/li&gt;
      &lt;li&gt;Cockpit 188&lt;/li&gt;
      &lt;li&gt;NGINX is now built to enforce TLS 1.3 on the T-Pot WebUI&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Update honeypots&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Where possible / feasible the honeypots have been updated to their latest versions.&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;Cowrie&lt;/em&gt; now supports &lt;em&gt;HASSH&lt;/em&gt; generated hashes which allows for an easier identification of an attacker accross IP adresses.&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;Heralding&lt;/em&gt; now supports &lt;em&gt;SOCKS5&lt;/em&gt; emulation.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Update Dashboards &amp;amp; Visualizations&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;em&gt;Offset Dashboard&lt;/em&gt; added to easily spot changes in attacks on a single dashboard in 24h time window.&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;Cowrie Dashboard&lt;/em&gt; modified to integrate &lt;em&gt;HASSH&lt;/em&gt; support / visualizations.&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;HoneyPy Dashboard&lt;/em&gt; added to support latest honeypot addition.&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;Suricata Dashboard&lt;/em&gt; modified to integrate &lt;em&gt;JA3&lt;/em&gt; support / visualizations.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Debian mirror selection&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;During base install you now have to manually select a mirror.&lt;/li&gt;
      &lt;li&gt;Upon T-Pot install the mirror closest to you will be determined automatically, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;netselect-apt&lt;/code&gt; requires you to allow ICMP outbound.&lt;/li&gt;
      &lt;li&gt;This solves peering problems for most of the users speeding up installation and updates.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Bugs&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Fixed issue #298 where the import and export of objects on the shell did not work.&lt;/li&gt;
      &lt;li&gt;Fixed issue #313 where Spiderfoot raised a KeyError, which was previously fixed in upstream.&lt;/li&gt;
      &lt;li&gt;Fixed error in Suricata where path for reference.config changed.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Release Cycle&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;As far as possible we will integrate changes now faster into the master branch, eliminating the need for monolithic releases. The update feature will be continuously improved on that behalf. However this might not account for all feature changes.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;HPFEEDS Opt-In&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;If you want to share your T-Pot data with a 3rd party HPFEEDS broker such as &lt;a href=&quot;https://sissden.eu&quot;&gt;SISSDEN&lt;/a&gt; you can do so by creating an account at the SISSDEN portal and run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hpfeeds_optin.sh&lt;/code&gt; on T-Pot.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Update Feature&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;For the ones who like to live on the bleeding edge of T-Pot development there is now an update script available in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/opt/tpot/update.sh&lt;/code&gt;.&lt;/li&gt;
      &lt;li&gt;This feature is beta and is mostly intended to provide you with the latest development advances without the need of reinstalling T-Pot.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Deprecated tools&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;em&gt;ctop&lt;/em&gt; will no longer be part of T-Pot.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Fix #332&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;If T-Pot, opposed to the requirements, does not have full internet access netselect-apt fails to determine the fastest mirror as it needs ICMP and UDP outgoing. Should netselect-apt fail the default mirrors will be used.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Improve install speed with apt-fast&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Migrating from a stable base install to Debian (Sid) requires downloading lots of packages. Depending on your geo location the download speed was already improved by introducing netselect-apt to determine the fastest mirror. Wit
h apt-fast the downloads will be even faster by downloading packages not only in parallel but also with multiple connections per package.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;concept&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;technical-concept&quot;&gt;Technical Concept&lt;/h1&gt;

&lt;p&gt;T-Pot is based on the network installer Debian (Stretch). During installation the whole system will be updated to Debian (Sid).
The honeypot daemons as well as other support components being used have been containerized using &lt;a href=&quot;http://docker.io&quot;&gt;docker&lt;/a&gt;.
This allows us to run multiple honeypot daemons on the same network interface while maintaining a small footprint and constrain each honeypot within its own environment.&lt;/p&gt;

&lt;p&gt;In T-Pot we combine the dockerized honeypots …&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/huuck/ADBHoney&quot;&gt;adbhoney&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/Cymmetria/ciscoasa_honeypot&quot;&gt;ciscoasa&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://conpot.org/&quot;&gt;conpot&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.micheloosterhof.com/cowrie/&quot;&gt;cowrie&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/DinoTools/dionaea&quot;&gt;dionaea&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/schmalle/ElasticPot&quot;&gt;elasticpot&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://mushmush.org/&quot;&gt;glastopf&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mushorg/glutton&quot;&gt;glutton&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/johnnykv/heralding&quot;&gt;heralding&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/foospidy/HoneyPy&quot;&gt;honeypy&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/armedpot/honeytrap/&quot;&gt;honeytrap&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/awhitehatter/mailoney&quot;&gt;mailoney&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/schmalle/medpot&quot;&gt;medpot&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/citronneur/rdpy&quot;&gt;rdpy&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://mushmush.org/&quot;&gt;snare&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://mushmush.org/&quot;&gt;tanner&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;… with the following tools …&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://cockpit-project.org/running&quot;&gt;Cockpit&lt;/a&gt; for a lightweight, webui for docker, os, real-time performance monitoring and web terminal.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gchq.github.io/CyberChef/&quot;&gt;Cyberchef&lt;/a&gt; a web app for encryption, encoding, compression and data analysis.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/videos&quot;&gt;ELK stack&lt;/a&gt; to beautifully visualize all the events captured by T-Pot.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mobz.github.io/elasticsearch-head/&quot;&gt;Elasticsearch Head&lt;/a&gt; a web front end for browsing and interacting with an Elastic Search cluster.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/smicallef/spiderfoot&quot;&gt;Spiderfoot&lt;/a&gt; a open source intelligence automation tool.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://suricata-ids.org/&quot;&gt;Suricata&lt;/a&gt; a Network Security Monitoring engine.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;… to give you the best out-of-the-box experience possible and an easy-to-use multi-honeypot appliance.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/architecture.png&quot; alt=&quot;Architecture&quot; /&gt;&lt;/p&gt;

&lt;p&gt;While data within docker containers is volatile we do ensure a default 30 day persistence of all relevant honeypot and tool data in the well known &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/data&lt;/code&gt; folder and sub-folders. The persistence configuration may be adjusted in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/opt/tpot/etc/logrotate/logrotate.conf&lt;/code&gt;. Once a docker container crashes, all other data produced within its environment is erased and a fresh instance is started from the corresponding docker image.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Basically, what happens when the system is booted up is the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;start host system&lt;/li&gt;
  &lt;li&gt;start all the necessary services (i.e. cockpit, docker, etc.)&lt;/li&gt;
  &lt;li&gt;start all docker containers via docker-compose (honeypots, nms, elk, etc.)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Within the T-Pot project, we provide all the tools and documentation necessary to build your own honeypot system and contribute to our &lt;a href=&quot;https://sicherheitstacho.eu&quot;&gt;Sicherheitstacho&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The source code and configuration files are fully stored in the T-Pot GitHub repository. The docker images are pre-configured for the T-Pot environment. If you want to run the docker images separately, make sure you study the docker-compose configuration (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/opt/tpot/etc/tpot.yml&lt;/code&gt;) and the T-Pot systemd script (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/systemd/system/tpot.service&lt;/code&gt;), as they provide a good starting point for implementing changes.&lt;/p&gt;

&lt;p&gt;The individual docker configurations are located in the &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce/tree/master/docker&quot;&gt;docker folder&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;requirements&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;system-requirements&quot;&gt;System Requirements&lt;/h1&gt;
&lt;p&gt;Depending on your installation type, whether you install on &lt;a href=&quot;#hardware&quot;&gt;real hardware&lt;/a&gt; or in a &lt;a href=&quot;#vm&quot;&gt;virtual machine&lt;/a&gt;, make sure your designated T-Pot system meets the following requirements:&lt;/p&gt;

&lt;h5 id=&quot;standard-installation&quot;&gt;Standard Installation&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;Honeypots: adbhoney, ciscoasa, conpot, cowrie, dionaea, elasticpot, heralding, honeytrap, mailoney, medpot, rdpy, snare &amp;amp; tanner&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Tools: cockpit, cyberchef, ELK, elasticsearch head, ewsposter, NGINX, spiderfoot, p0f and suricata&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;6-8 GB RAM (less RAM is possible but might introduce swapping)&lt;/li&gt;
  &lt;li&gt;128 GB SSD (smaller is possible but limits the capacity of storing events)&lt;/li&gt;
  &lt;li&gt;Network via DHCP&lt;/li&gt;
  &lt;li&gt;A working, non-proxied, internet connection&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;sensor-installation&quot;&gt;Sensor Installation&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;Honeypots: adbhoney, ciscoasa, conpot, cowrie, dionaea, elasticpot, heralding, honeytrap, mailoney, medpot, rdpy, snare &amp;amp; tanner&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Tools: cockpit&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;6-8 GB RAM (less RAM is possible but might introduce swapping)&lt;/li&gt;
  &lt;li&gt;128 GB SSD (smaller is possible but limits the capacity of storing events)&lt;/li&gt;
  &lt;li&gt;Network via DHCP&lt;/li&gt;
  &lt;li&gt;A working, non-proxied, internet connection&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;industrial-installation&quot;&gt;Industrial Installation&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;Honeypots: conpot, cowrie, heralding, medpot, rdpy&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Tools: cockpit, cyberchef, ELK, elasticsearch head, ewsposter, NGINX, spiderfoot, p0f and suricata&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;6-8 GB RAM (less RAM is possible but might introduce swapping)&lt;/li&gt;
  &lt;li&gt;128 GB SSD (smaller is possible but limits the capacity of storing events)&lt;/li&gt;
  &lt;li&gt;Network via DHCP&lt;/li&gt;
  &lt;li&gt;A working, non-proxied, internet connection&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;collector-installation-because-sometimes-all-you-want-to-do-is-catching-credentials&quot;&gt;Collector Installation (because sometimes all you want to do is catching credentials)&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;Honeypots: heralding&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Tools: cockpit, cyberchef, ELK, elasticsearch head, ewsposter, NGINX, spiderfoot, p0f and suricata&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;6-8 GB RAM (less RAM is possible but might introduce swapping)&lt;/li&gt;
  &lt;li&gt;128 GB SSD (smaller is possible but limits the capacity of storing events)&lt;/li&gt;
  &lt;li&gt;Network via DHCP&lt;/li&gt;
  &lt;li&gt;A working, non-proxied, internet connection&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;nextgen-installation-glutton-replacing-honeytrap-honeypy-replacing-elasticpot&quot;&gt;NextGen Installation (Glutton replacing Honeytrap, HoneyPy replacing Elasticpot)&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;Honeypots: adbhoney, ciscoasa, conpot, cowrie, dionaea, glutton, heralding, honeypy, mailoney, rdpy, snare &amp;amp; tanner&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Tools: cockpit, cyberchef, ELK, elasticsearch head, ewsposter, NGINX, spiderfoot, p0f and suricata&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;6-8 GB RAM (less RAM is possible but might introduce swapping)&lt;/li&gt;
  &lt;li&gt;128 GB SSD (smaller is possible but limits the capacity of storing events)&lt;/li&gt;
  &lt;li&gt;Network via DHCP&lt;/li&gt;
  &lt;li&gt;A working, non-proxied, internet connection&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;installation&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;installation&quot;&gt;Installation&lt;/h1&gt;
&lt;p&gt;The installation of T-Pot is straight forward and heavily depends on a working, transparent and non-proxied up and running internet connection. Otherwise the installation &lt;strong&gt;will fail!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Firstly, decide if you want to download our prebuilt installation ISO image from &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce/releases&quot;&gt;GitHub&lt;/a&gt;, &lt;a href=&quot;#createiso&quot;&gt;create it yourself&lt;/a&gt; &lt;strong&gt;&lt;em&gt;or&lt;/em&gt;&lt;/strong&gt; &lt;a href=&quot;#postinstall&quot;&gt;post-install on an existing Debian 9.7 (Stretch)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Secondly, decide where you want to let the system run: &lt;a href=&quot;#hardware&quot;&gt;real hardware&lt;/a&gt; or in a &lt;a href=&quot;#vm&quot;&gt;virtual machine&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;prebuilt&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;prebuilt-iso-image&quot;&gt;Prebuilt ISO Image&lt;/h2&gt;
&lt;p&gt;We provide an installation ISO image for download (~50MB), which is created using the same &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce&quot;&gt;tool&lt;/a&gt; you can use yourself in order to create your own image. It will basically just save you some time downloading components and creating the ISO image.
You can download the prebuilt installation image from &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce/releases&quot;&gt;GitHub&lt;/a&gt; and jump to the &lt;a href=&quot;#vm&quot;&gt;installation&lt;/a&gt; section.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;createiso&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;create-your-own-iso-image&quot;&gt;Create your own ISO Image&lt;/h2&gt;
&lt;p&gt;For transparency reasons and to give you the ability to customize your install, we provide you the &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce&quot;&gt;ISO Creator&lt;/a&gt; that enables you to create your own ISO installation image.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Requirements to create the ISO image:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Debian 9.7 or newer as host system (others &lt;em&gt;may&lt;/em&gt; work, but &lt;em&gt;remain&lt;/em&gt; untested)&lt;/li&gt;
  &lt;li&gt;4GB of free memory&lt;/li&gt;
  &lt;li&gt;32GB of free storage&lt;/li&gt;
  &lt;li&gt;A working internet connection&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;How to create the ISO image:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Clone the repository and enter it.
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/dtag-dev-sec/tpotce
cd tpotce
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Invoke the script that builds the ISO image.
The script will download and install dependencies necessary to build the image on the invoking machine. It will further download the ubuntu network installer image (~50MB) which T-Pot is based on.
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo ./makeiso.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;After a successful build, you will find the ISO image &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tpot.iso&lt;/code&gt; along with a SHA256 checksum &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tpot.sha256&lt;/code&gt; in your directory.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a name=&quot;vm&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;running-in-vm&quot;&gt;Running in VM&lt;/h2&gt;
&lt;p&gt;You may want to run T-Pot in a virtualized environment. The virtual system configuration depends on your virtualization provider.&lt;/p&gt;

&lt;p&gt;We successfully tested T-Pot with &lt;a href=&quot;https://www.virtualbox.org&quot;&gt;VirtualBox&lt;/a&gt; and &lt;a href=&quot;http://www.vmware.com&quot;&gt;VMWare&lt;/a&gt; with just little modifications to the default machine configurations.&lt;/p&gt;

&lt;p&gt;It is important to make sure you meet the &lt;a href=&quot;#requirements&quot;&gt;system requirements&lt;/a&gt; and assign a virtual harddisk and RAM according to the requirements while making sure networking is bridged.&lt;/p&gt;

&lt;p&gt;You need to enable promiscuous mode for the network interface for suricata and p0f to work properly. Make sure you enable it during configuration.&lt;/p&gt;

&lt;p&gt;If you want to use a wifi card as a primary NIC for T-Pot, please be aware of the fact that not all network interface drivers support all wireless cards. E.g. in VirtualBox, you then have to choose the &lt;em&gt;“MT SERVER”&lt;/em&gt; model of the NIC.&lt;/p&gt;

&lt;p&gt;Lastly, mount the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tpot.iso&lt;/code&gt; ISO to the VM and continue with the installation.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;You can now jump &lt;a href=&quot;#firstrun&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;hardware&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;running-on-hardware&quot;&gt;Running on Hardware&lt;/h2&gt;
&lt;p&gt;If you decide to run T-Pot on dedicated hardware, just follow these steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Burn a CD from the ISO image or make a bootable USB stick using the image. &lt;br /&gt;
Whereas most CD burning tools allow you to burn from ISO images, the procedure to create a bootable USB stick from an ISO image depends on your system. There are various Windows GUI tools available, e.g. &lt;a href=&quot;http://www.ubuntu.com/download/desktop/create-a-usb-stick-on-windows&quot;&gt;this tip&lt;/a&gt; might help you.&lt;br /&gt; On &lt;a href=&quot;http://askubuntu.com/questions/59551/how-to-burn-a-iso-to-a-usb-device&quot;&gt;Linux&lt;/a&gt; or &lt;a href=&quot;http://www.ubuntu.com/download/desktop/create-a-usb-stick-on-mac-osx&quot;&gt;MacOS&lt;/a&gt; you can use the tool &lt;em&gt;dd&lt;/em&gt; or create the USB stick with T-Pot’s &lt;a href=&quot;https://github.com/dtag-dev-sec&quot;&gt;ISO Creator&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Boot from the USB stick and install.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;Please note&lt;/em&gt;: While we are performing limited tests with the Intel NUC platform other hardware platforms &lt;strong&gt;remain untested&lt;/strong&gt;. We can not provide hardware support of any kind.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;postinstall&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;post-install-user&quot;&gt;Post-Install User&lt;/h2&gt;
&lt;p&gt;In some cases it is necessary to install Debian 9.7 (Stretch) on your own:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Cloud provider does not offer mounting ISO images.&lt;/li&gt;
  &lt;li&gt;Hardware setup needs special drivers and / or kernels.&lt;/li&gt;
  &lt;li&gt;Within your company you have to setup special policies, software etc.&lt;/li&gt;
  &lt;li&gt;You just like to stay on top of things.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The T-Pot Universal Installer will upgrade the system to Debian (Sid) and install all required T-Pot dependencies.&lt;/p&gt;

&lt;p&gt;Just follow these steps:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/dtag-dev-sec/tpotce
cd tpotce/iso/installer/
./install.sh --type=user
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The installer will now start and guide you through the install process.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;postinstallauto&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;post-install-auto&quot;&gt;Post-Install Auto&lt;/h2&gt;
&lt;p&gt;You can also let the installer run automatically if you provide your own &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tpot.conf&lt;/code&gt;. An example is available in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tpotce/iso/installer/tpot.conf.dist&lt;/code&gt;. This should make things easier in case you want to automate the installation i.e. with &lt;strong&gt;Ansible&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Just follow these steps while adjusting &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tpot.conf&lt;/code&gt; to your needs:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/dtag-dev-sec/tpotce
cd tpotce/iso/installer/
cp tpot.conf.dist tpot.conf
./install.sh --type=auto --conf=tpot.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The installer will start automatically and guide you through the install process.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;firstrun&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;first-run&quot;&gt;First Run&lt;/h2&gt;
&lt;p&gt;The installation requires very little interaction, only a locale and keyboard setting have to be answered for the basic linux installation. The system will reboot and please maintain the active internet connection. The T-Pot installer will start and ask you for an installation type, password for the &lt;strong&gt;tsec&lt;/strong&gt; user and credentials for a &lt;strong&gt;web user&lt;/strong&gt;. Everything else will be configured automatically. All docker images and other componenents will be downloaded. Depending on your network connection and the chosen installation type, the installation may take some time. During our tests (250Mbit down, 40Mbit up), the installation was usually finished within a 15-30 minute timeframe.&lt;/p&gt;

&lt;p&gt;Once the installation is finished, the system will automatically reboot and you will be presented with the T-Pot login screen. On the console you may login with:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;user: &lt;strong&gt;[tsec or user]&lt;/strong&gt; &lt;em&gt;you chose during one of the post install methods&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;pass: &lt;strong&gt;[password]&lt;/strong&gt; &lt;em&gt;you chose during the installation&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All honeypot services are preconfigured and are starting automatically.&lt;/p&gt;

&lt;p&gt;You can login from your browser and access the Admin UI: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://&amp;lt;your.ip&amp;gt;:64294&lt;/code&gt; or via SSH to access the command line: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh -l tsec -p 64295 &amp;lt;your.ip&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;user: &lt;strong&gt;[tsec or user]&lt;/strong&gt; &lt;em&gt;you chose during one of the post install methods&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;pass: &lt;strong&gt;[password]&lt;/strong&gt; &lt;em&gt;you chose during the installation&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can also login from your browser and access the Web UI: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://&amp;lt;your.ip&amp;gt;:64297&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;user: &lt;strong&gt;[user]&lt;/strong&gt; &lt;em&gt;you chose during the installation&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;pass: &lt;strong&gt;[password]&lt;/strong&gt; &lt;em&gt;you chose during the installation&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;placement&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;system-placement&quot;&gt;System Placement&lt;/h1&gt;
&lt;p&gt;Make sure your system is reachable through a network you suspect intruders in / from (i.e. the internet). Otherwise T-Pot will most likely not capture any attacks, other than the ones from your  internal network! We recommend you put it in an unfiltered zone, where all TCP and UDP traffic is forwarded to T-Pot’s network interface. However to avoid fingerprinting you can put T-Pot behind a firewall and forward all TCP / UDP traffic in the port range of 1-64000 to T-Pot while allowing access to ports &amp;gt; 64000 only from trusted IPs.&lt;/p&gt;

&lt;p&gt;A list of all relevant ports is available as part of the &lt;a href=&quot;#concept&quot;&gt;Technical Concept&lt;/a&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Basically, you can forward as many TCP ports as you want, as honeytrap dynamically binds any TCP port that is not covered by the other honeypot daemons.&lt;/p&gt;

&lt;p&gt;In case you need external Admin UI access, forward TCP port 64294 to T-Pot, see below.
In case you need external SSH access, forward TCP port 64295 to T-Pot, see below.
In case you need external Web UI access, forward TCP port 64297 to T-Pot, see below.&lt;/p&gt;

&lt;p&gt;T-Pot requires outgoing git, http, https connections for updates (Debian, Docker, GitHub, PyPi) and attack submission (ewsposter, hpfeeds). Ports and availability may vary based on your geographical location.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;updates&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;updates&quot;&gt;Updates&lt;/h1&gt;
&lt;p&gt;For the ones of you who want to live on the bleeding edge of T-Pot development we introduced an update feature which will allow you to update all T-Pot relevant files to be up to date with the T-Pot master branch.
&lt;strong&gt;If you made any relevant changes to the T-Pot relevant config files make sure to create a backup first.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The Update script will&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;merciless&lt;/strong&gt; overwrite local changes to be in sync with the T-Pot master branch&lt;/li&gt;
  &lt;li&gt;upgrade the system to the packages available in Debian (Sid)&lt;/li&gt;
  &lt;li&gt;update all resources to be in-sync with the T-Pot master branch&lt;/li&gt;
  &lt;li&gt;ensure all T-Pot relevant system files will be patched / copied into the original T-Pot state&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You simply run the update script:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd /opt/tpot/
./update.sh -y
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Despite all our efforts please be reminded that updates sometimes may have unforeseen consequences. Please create a backup of the machine or the files with the most value to your work.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;options&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;options&quot;&gt;Options&lt;/h1&gt;
&lt;p&gt;The system is designed to run without any interaction or maintenance and automatically contributes to the community.&lt;br /&gt;
We know, for some this may not be enough. So here come some ways to further inspect the system and change configuration parameters.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;ssh&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;ssh-and-web-access&quot;&gt;SSH and web access&lt;/h2&gt;
&lt;p&gt;By default, the SSH daemon allows access on &lt;strong&gt;tcp/64295&lt;/strong&gt; with a user / password combination and prevents credential brute forcing attempts using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fail2ban&lt;/code&gt;. This also counts for Admin UI (&lt;strong&gt;tcp/64294&lt;/strong&gt;) and Web UI (&lt;strong&gt;tcp/64297&lt;/strong&gt;) access.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;If you do not have a SSH client at hand and still want to access the machine via command line you can do so by accessing the Admin UI from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://&amp;lt;your.ip&amp;gt;:64294&lt;/code&gt;, enter&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;user: &lt;strong&gt;[tsec or user]&lt;/strong&gt; &lt;em&gt;you chose during one of the post install methods&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;pass: &lt;strong&gt;[password]&lt;/strong&gt; &lt;em&gt;you chose during the installation&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cockpit3.png&quot; alt=&quot;Cockpit Terminal&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;kibana&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;kibana-dashboard&quot;&gt;Kibana Dashboard&lt;/h2&gt;
&lt;p&gt;Just open a web browser and connect to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://&amp;lt;your.ip&amp;gt;:64297&lt;/code&gt;, enter&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;user: &lt;strong&gt;[user]&lt;/strong&gt; &lt;em&gt;you chose during the installation&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;pass: &lt;strong&gt;[password]&lt;/strong&gt; &lt;em&gt;you chose during the installation&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and &lt;strong&gt;Kibana&lt;/strong&gt; will automagically load. The Kibana dashboard can be customized to fit your needs. By default, we haven’t added any filtering, because the filters depend on your setup. E.g. you might want to filter out your incoming administrative ssh connections and connections to update servers.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/kibana.png&quot; alt=&quot;Dashbaord&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;tools&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;tools&quot;&gt;Tools&lt;/h2&gt;
&lt;p&gt;We included some web based management tools to improve and ease up on your daily tasks.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cockpit1.png&quot; alt=&quot;Cockpit Overview&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cockpit2.png&quot; alt=&quot;Cockpit Containers&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cyberchef.png&quot; alt=&quot;Cyberchef&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/spiderfoot.png&quot; alt=&quot;ES Head Plugin&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/spiderfoot.png&quot; alt=&quot;Spiderfoot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;maintenance&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;maintenance&quot;&gt;Maintenance&lt;/h2&gt;
&lt;p&gt;As mentioned before, the system is designed to be low maintenance. Basically, there is nothing you have to do but let it run.&lt;/p&gt;

&lt;p&gt;If you run into any problems, a reboot may fix it :bowtie:&lt;/p&gt;

&lt;p&gt;If new versions of the components involved appear, we will test them and build new docker images. Those new docker images will be pushed to docker hub and downloaded to T-Pot and activated accordingly.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;submission&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;community-data-submission&quot;&gt;Community Data Submission&lt;/h2&gt;
&lt;p&gt;We provide T-Pot in order to make it accessible to all parties interested in honeypot deployment. By default, the captured data is submitted to a community backend. This community backend uses the data to feed &lt;a href=&quot;https://sicherheitstacho.eu&quot;&gt;Sicherheitstacho&lt;/a&gt;.
You may opt out of the submission by removing the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;# Ewsposter service&lt;/code&gt; from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/opt/tpot/etc/tpot.yml&lt;/code&gt;:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Stop T-Pot services: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;systemctl stop tpot&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Remove Ewsposter service: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vi /opt/tpot/etc/tpot.yml&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Remove the following lines, save and exit vi (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:x!&lt;/code&gt;):&lt;br /&gt;
```
    &lt;h1 id=&quot;ewsposter-service&quot;&gt;Ewsposter service&lt;/h1&gt;
    &lt;p&gt;ewsposter:
 container_name: ewsposter
 restart: always
 networks:&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;ewsposter_local
 image: “dtagdevsec/ewsposter:1903”
 volumes:&lt;/li&gt;
      &lt;li&gt;/data:/data&lt;/li&gt;
      &lt;li&gt;/data/ews/conf/ews.ip:/opt/ewsposter/ews.ip
```&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Start T-Pot services: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;systemctl start tpot&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Data is submitted in a structured ews-format, a XML stucture. Hence, you can parse out the information that is relevant to you.&lt;/p&gt;

&lt;p&gt;We encourage you not to disable the data submission as it is the main purpose of the community approach - as you all know &lt;strong&gt;sharing is caring&lt;/strong&gt; 😍&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;hpfeeds-optin&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;opt-in-hpfeeds-data-submission&quot;&gt;Opt-In HPFEEDS Data Submission&lt;/h2&gt;
&lt;p&gt;As an Opt-In it is now possible to also share T-Pot data with 3rd party HPFEEDS brokers, such as &lt;a href=&quot;https://sissden.eu&quot;&gt;SISSDEN&lt;/a&gt;.
If you want to share your T-Pot data you simply have to register an account with a 3rd party broker with its own benefits towards the community. Once registered you will receive your credentials to share events with the broker. In T-Pot you simply run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hpfeeds_optin.sh&lt;/code&gt; which will ask for your credentials, in case of SISSDEN this is just &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ident&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Secret&lt;/code&gt;, everything else is pre-configured. It will automatically update &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/opt/tpot/etc/tpot.yml&lt;/code&gt; to deliver events to your desired broker.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;roadmap&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;roadmap&quot;&gt;Roadmap&lt;/h1&gt;
&lt;p&gt;As with every development there is always room for improvements …&lt;/p&gt;

&lt;p&gt;Some features may be provided with updated docker images, others may require some hands on from your side.&lt;/p&gt;

&lt;p&gt;You are always invited to participate in development on our &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce&quot;&gt;GitHub&lt;/a&gt; page.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;disclaimer&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;disclaimer&quot;&gt;Disclaimer&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;We don’t have access to your system. So we cannot remote-assist when you break your configuration. But you can simply reinstall.&lt;/li&gt;
  &lt;li&gt;The software was designed with best effort security, not to be in stealth mode. Because then, we probably would not be able to provide those kind of honeypot services.&lt;/li&gt;
  &lt;li&gt;You install and you run within your responsibility. Choose your deployment wisely as a system compromise can never be ruled out.&lt;/li&gt;
  &lt;li&gt;Honeypots should - by design - may not host any sensitive data. Make sure you don’t add any.&lt;/li&gt;
  &lt;li&gt;By default, your data is submitted to the community dashboard. You can disable this in the config. But hey, wouldn’t it be better to contribute to the community?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;faq&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;faq&quot;&gt;FAQ&lt;/h1&gt;
&lt;p&gt;Please report any issues or questions on our &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce/issues&quot;&gt;GitHub issue list&lt;/a&gt;, so the community can participate.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;contact&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;contact&quot;&gt;Contact&lt;/h1&gt;
&lt;p&gt;We provide the software &lt;strong&gt;as is&lt;/strong&gt; in a Community Edition format. T-Pot is designed to run out of the box and with zero maintenance involved. &lt;br /&gt;
We hope you understand that we cannot provide support on an individual basis. We will try to address questions, bugs and problems on our &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce/issues&quot;&gt;GitHub issue list&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;licenses&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;licenses&quot;&gt;Licenses&lt;/h1&gt;
&lt;p&gt;The software that T-Pot is built on uses the following licenses.
&lt;br /&gt;GPLv2: &lt;a href=&quot;https://github.com/mushorg/conpot/blob/master/LICENSE.txt&quot;&gt;conpot&lt;/a&gt;, &lt;a href=&quot;https://github.com/DinoTools/dionaea/blob/master/LICENSE&quot;&gt;dionaea&lt;/a&gt;, &lt;a href=&quot;https://github.com/foospidy/HoneyPy/blob/master/LICENSE&quot;&gt;honeypy&lt;/a&gt;, &lt;a href=&quot;https://github.com/armedpot/honeytrap/blob/master/LICENSE&quot;&gt;honeytrap&lt;/a&gt;, &lt;a href=&quot;http://suricata-ids.org/about/open-source/&quot;&gt;suricata&lt;/a&gt;
&lt;br /&gt;GPLv3: &lt;a href=&quot;https://github.com/huuck/ADBHoney&quot;&gt;adbhoney&lt;/a&gt;, &lt;a href=&quot;https://github.com/schmalle/ElasticPot&quot;&gt;elasticpot&lt;/a&gt;, &lt;a href=&quot;https://github.com/dtag-dev-sec/ews/&quot;&gt;ewsposter&lt;/a&gt;, &lt;a href=&quot;https://github.com/glastopf/glastopf/blob/master/GPL&quot;&gt;glastopf&lt;/a&gt;, &lt;a href=&quot;https://github.com/citronneur/rdpy/blob/master/LICENSE&quot;&gt;rdpy&lt;/a&gt;, &lt;a href=&quot;https://github.com/johnnykv/heralding/blob/master/LICENSE.txt&quot;&gt;heralding&lt;/a&gt;, &lt;a href=&quot;https://github.com/mushorg/snare/blob/master/LICENSE&quot;&gt;snare&lt;/a&gt;, &lt;a href=&quot;https://github.com/mushorg/snare/blob/master/LICENSE&quot;&gt;tanner&lt;/a&gt;
&lt;br /&gt;Apache 2 License: &lt;a href=&quot;https://github.com/gchq/CyberChef/blob/master/LICENSE&quot;&gt;cyberchef&lt;/a&gt;, &lt;a href=&quot;https://github.com/elasticsearch/elasticsearch/blob/master/LICENSE.txt&quot;&gt;elasticsearch&lt;/a&gt;, &lt;a href=&quot;https://github.com/elasticsearch/logstash/blob/master/LICENSE&quot;&gt;logstash&lt;/a&gt;, &lt;a href=&quot;https://github.com/elasticsearch/kibana/blob/master/LICENSE.md&quot;&gt;kibana&lt;/a&gt;, &lt;a href=&quot;https://github.com/docker/docker/blob/master/LICENSE&quot;&gt;docker&lt;/a&gt;, &lt;a href=&quot;https://github.com/mobz/elasticsearch-head/blob/master/LICENCE&quot;&gt;elasticsearch-head&lt;/a&gt;
&lt;br /&gt;MIT license: &lt;a href=&quot;https://github.com/Cymmetria/ciscoasa_honeypot/blob/master/LICENSE&quot;&gt;ciscoasa&lt;/a&gt;, &lt;a href=&quot;https://github.com/mushorg/glutton/blob/master/LICENSE&quot;&gt;glutton&lt;/a&gt;
&lt;br /&gt; Other: &lt;a href=&quot;https://github.com/micheloosterhof/cowrie/blob/master/LICENSE.md&quot;&gt;cowrie&lt;/a&gt;, &lt;a href=&quot;https://github.com/awhitehatter/mailoney&quot;&gt;mailoney&lt;/a&gt;, &lt;a href=&quot;https://www.debian.org/legal/licenses/&quot;&gt;Debian licensing&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;credits&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;credits&quot;&gt;Credits&lt;/h1&gt;
&lt;p&gt;Without open source and the fruitful development community (we are proud to be a part of), T-Pot would not have been possible! Our thanks are extended but not limited to the following people and organizations:&lt;/p&gt;

&lt;h3 id=&quot;the-developers-and-development-communities-of&quot;&gt;The developers and development communities of&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/huuck/ADBHoney/graphs/contributors&quot;&gt;adbhoney&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ilikenwf/apt-fast/graphs/contributors&quot;&gt;apt-fast&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/Cymmetria/ciscoasa_honeypot/graphs/contributors&quot;&gt;ciscoasa&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/cockpit-project/cockpit/graphs/contributors&quot;&gt;cockpit&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mushorg/conpot/graphs/contributors&quot;&gt;conpot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/micheloosterhof/cowrie/graphs/contributors&quot;&gt;cowrie&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.debian.org/&quot;&gt;debian&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/DinoTools/dionaea/graphs/contributors&quot;&gt;dionaea&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/docker/docker/graphs/contributors&quot;&gt;docker&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/schmalle/ElasticpotPY/graphs/contributors&quot;&gt;elasticpot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/elastic/elasticsearch/graphs/contributors&quot;&gt;elasticsearch&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mobz/elasticsearch-head/graphs/contributors&quot;&gt;elasticsearch-head&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/armedpot/ewsposter/graphs/contributors&quot;&gt;ewsposter&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mushorg/glastopf/graphs/contributors&quot;&gt;glastopf&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mushorg/glutton/graphs/contributors&quot;&gt;glutton&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/johnnykv/heralding/graphs/contributors&quot;&gt;heralding&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/foospidy/HoneyPy/graphs/contributors&quot;&gt;honeypy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/armedpot/honeytrap/graphs/contributors&quot;&gt;honeytrap&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/elastic/kibana/graphs/contributors&quot;&gt;kibana&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/elastic/logstash/graphs/contributors&quot;&gt;logstash&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/awhitehatter/mailoney&quot;&gt;mailoney&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/schmalle/medpot/graphs/contributors&quot;&gt;medpot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://lcamtuf.coredump.cx/p0f3/&quot;&gt;p0f&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/citronneur/rdpy&quot;&gt;rdpy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/smicallef/spiderfoot&quot;&gt;spiderfoot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mushorg/snare/graphs/contributors&quot;&gt;snare&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mushorg/tanner/graphs/contributors&quot;&gt;tanner&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/inliniac/suricata/graphs/contributors&quot;&gt;suricata&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;the-following-companies-and-organizations&quot;&gt;The following companies and organizations&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.debian.org/&quot;&gt;debian&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.docker.com/&quot;&gt;docker&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/&quot;&gt;elastic.io&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.honeynet.org/&quot;&gt;honeynet project&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.intel.com&quot;&gt;intel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;-and-of-course-you-for-joining-the-community&quot;&gt;… and of course &lt;strong&gt;&lt;em&gt;you&lt;/em&gt;&lt;/strong&gt; for joining the community!&lt;/h3&gt;

&lt;p&gt;&lt;a name=&quot;staytuned&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;stay-tuned-&quot;&gt;Stay tuned …&lt;/h1&gt;
&lt;p&gt;We will be releasing a new version of T-Pot about every 6-12 months.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;testimonial&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;testimonial&quot;&gt;Testimonial&lt;/h1&gt;
&lt;p&gt;One of the greatest feedback we have gotten so far is by one of the Conpot developers:&lt;br /&gt;
&lt;strong&gt;&lt;em&gt;“[…] I highly recommend T-Pot which is … it’s not exactly a swiss army knife .. it’s more like a swiss army soldier, equipped with a swiss army knife. Inside a tank. A swiss tank. […]”&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;funfact&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;fun-fact&quot;&gt;Fun Fact&lt;/h1&gt;

&lt;p&gt;In an effort of saving the environment we are now brewing our own Mate Ice Tea and consumed 73 liters so far for the T-Pot 19.03 development 😇&lt;/p&gt;
</description>
        <pubDate>Mon, 01 Apr 2019 11:37:42 +0200</pubDate>
        <link>http://dtag-dev-sec.github.io//mediator/feature/2019/04/01/tpot-1903.html</link>
        <guid isPermaLink="true">http://dtag-dev-sec.github.io//mediator/feature/2019/04/01/tpot-1903.html</guid>
        
        <category>featured</category>
        
        
        <category>mediator</category>
        
        <category>feature</category>
        
      </item>
    
      <item>
        <title>Potherder</title>
        <description>&lt;h1 id=&quot;potherder&quot;&gt;Potherder.&lt;/h1&gt;

&lt;h3 id=&quot;operating-traps-for-seven-years-dtag&quot;&gt;Operating traps for seven years @DTAG.&lt;/h3&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;It’s been seven years now that I started to contribute to the setup of Deutsche Telekom’s Early Warning System which is running multiple honeypots all over the globe and I would like to share my personal view on the history of the project, its internal goals and its achievements.&lt;/p&gt;

&lt;p&gt;I still remember the first group meeting with my department in November 2010. It was my third day at the new employment in the team “Security of Office and Portals” and I happened to start my new career path all dressed up, because I thought this was the way to go in a large corporation. Turns out I was wrong about this, some people were more technical than I initially thought and it took some time to lose the first impression I made wearing a suit …&lt;/p&gt;

&lt;p&gt;I was really curious when during the meeting one of my new colleagues presented on the current status of their internal web honeypot project, which had been running for the past six months. The four people involved in this next-to-dayjob-research project (@schmalle, @trixam, Lutz and Rainer) were running &lt;a href=&quot;https://github.com/mushorg/glastopf&quot;&gt;glastopf&lt;/a&gt;, a web honeypot to capture attacks like LFIs and php command injection attempts. They were presenting to the group how glastopf worked and the observations they had made within the last 6 months. During my previous employment at the governmental IT security organization, I had already gathered some experience with honeypots as one of my fellow colleagues was the author of a honeypot daemon, honeytrap.  So, I felt this was something fun and asked if I could contribute to this project. And luckily, I was encouraged to do so…&lt;/p&gt;

&lt;p&gt;As DTAG is also a mobile network provider, my first assignment in the beginning of 2011 was to research what kind of network attacks smartphones on our network are exposed to and therefore develop a smartphone honeypot. I already played around a little bit with &lt;a href=&quot;https://github.com/desaster/kippo&quot;&gt;kippo&lt;/a&gt;, a medium interaction honeypot which mimics SSH terminal sessions. It is hilarious to see attackers being trapped and fooled by the honeypot in real time. So, I decided to adapt the code of kippo and the filesystem layout in order to behave like a jailbroken iPhone and a rooted Android phone and see if I could catch any device-specific attacks. After setting it up and connecting it to a 3G business APN (as regular mobile users have a carrier grade NAT), I was ready to capture device-specific attacks on my pretended smartphones. And I did indeed capture some device specific attacks: For example, one attacker who connected with the iPhone specific combination of root:alpine directly navigated to the DCIM folder of the iPhone and tried to steal the photos as well as the address book off the phone. So, there it was, our first mobile specific attack.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/potherder/bens_iphone.png&quot; alt=&quot;Attacker trapped in iPhone honeypot (2011)&quot; /&gt;&lt;/p&gt;

&lt;p&gt;While I was working on the mobile honeypots, my colleagues were busy setting up new honeypot daemons like dionaea or honeytrap and had developed a backend application which served as a central data storage for honeypots data. We implemented an own transmission format, we called ews xml, which was derived from the Intrusion Detection Message Exchange Format, &lt;a href=&quot;https://en.wikipedia.org/wiki/Intrusion_Detection_Message_Exchange_Format&quot;&gt;IDMEF&lt;/a&gt;. For each honeypot, a script would take care of the log-parsing and extraction of information that was of value for us. As an ISP, we were mostly interested in IP addresses of our customers, so we could hand them over to our abuse department, which in return could inform the customers about possible malware infections. The process had to be fully automated, so our backend needed to implement the logic of determining IP addresses belonging to us and adding context information. As a byproduct, we were able to inform other ISPs and partners about malicious traffic from their IP ranges. And for the first time, our small honeypot project was able to contribute statistical information about attacks on the honeypots to DTAG’s cyber security report. That’s when other international DTAG subsidiaries became aware of what we were doing in headquarters.&lt;/p&gt;

&lt;p&gt;This year, I also made first contact with &lt;a href=&quot;https://honeynet.org&quot;&gt;The Honeynet Project&lt;/a&gt;, a non profit organization which drives researches in the field of attack detection using honeypots, by attending to their annual conference in Paris. Although I already knew some of their members, I was able to get in contact with honeypot developers in person, whose software we were using. Very skilled people, what a great experience.&lt;/p&gt;

&lt;p&gt;In the beginning of 2012, we were got the chance to present our honeypot network including the automated attack processing at DTAG’s huge booth at Cebit, Germany’s largest IT fare. I repeatedly presented our system to interested audiences, from students to C-level executives of other companies. It was the first time that we publicly demoed DTAG’s honeypot network. My personal highlight were the five minutes I spent talking to DTAG’s then CEO René Obermann, a very friendly and charismatic person. When he visited our exhibit, he was already briefed by his staff and asked some detailed questions about our processing and our evaluation of the attacks. Apparently, we did a good job and he was excited about the stuff we achieved with such a small team with very limited resources, next to our day job. This meeting granted us a lot of management attention and subsequent backing over the next years.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/potherder/obermann.jpg&quot; alt=&quot;Meetup with DTAG CEO René Obermann @Cebit'2012)&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Back then, we had like 40 honeypot installations, mostly in Germany and around 40.000 attack events per day that we processed. Next to new honeypot technologies, we also played around with mod_security running on productive applications as data source and connected it to our backend. Back then, the backend consisted of a grails application with Elasticsearch and a mongodb as data storage, something we would not touch until fall 2017. We also implemented our first API which would use the information stored in our backend: A blacklist API which returns all IPs that have been maliciously active in our honeypots within a 2 hour timeframe.&lt;/p&gt;

&lt;p&gt;It was also in 2012 when Markus developed his first own honeypot daemon, &lt;a href=&quot;https://github.com/schmalle/MysqlPot&quot;&gt;mysqlpot&lt;/a&gt; which was able to capture attacks on the mysql protocol. You need to know, although he is a vice president at DTAG, he loves to play around with new technologies in his spare time and always creates useful stuff using new technologies.  Also in this year, as the smartphone honeypots were running for quite some time, we evaluated the results and published an article in Germany’s leading IT magazine &lt;a href=&quot;https://www.heise.de/ct/ausgabe/2012-15-Honeypots-zur-Analyse-von-Angriffen-auf-mobile-Endgraete-2343009.html&quot;&gt;c’t&lt;/a&gt;. The experience we gathered was further incorporated in another &lt;a href=&quot;https://arxiv.org/abs/1301.7257&quot;&gt;research paper&lt;/a&gt;, together with scientists researching a similar topic.&lt;/p&gt;

&lt;p&gt;When my wife put a Raspberry Pi in my Advent calendar this year, I was thrilled and immediately played around with it. It was such a small device, capable of being driven by a battery pack, yet powerful enough to run network based services. For fun, during my parental leave, I managed to compile honeytrap on ARM and code a piece of software to drive a serial display which I attached to RPI’s GPIO. I then attached a 3G modem to it and connected it to the mobile internet. Finally, we had our first ARM-based portable honeypot, internally called “semtex” as it looked like some kind of explosive, which had a display on it showing how many attacks it captured and who was the last attacking IP. Again, this device was highly appreciated by the management, because it simply showed the number of attacks against the device. It was easy to comprehend, even for non-techies, and made something virtual like a honeypot into something you could see and grasp.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/potherder/semtex.jpg&quot; alt=&quot;Raspberry Pi honeypot &amp;quot;semtex&amp;quot; (2012)&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We also took the device to Cebit in 2013, to complement what we had developed for the last few months: our security-dashboard http://sicherheitstacho.eu. Meanwhile, we continuously expanded the install base of our honeypots and finally captured up to 800.000 attacks per day. We did not want to sit on the data but do something useful with it. So our backend developer Lutz came up with the idea to visualize the data and put it on a world map. We used &lt;a href=&quot;https://github.com/fw42/honeymap&quot;&gt;honeymap&lt;/a&gt;, a world map framework from the Honeynet project, and visualized our data on it. When we launched it during Cebit, we got incredible public attention, both by the media, as well as the community. While I was attending Cebit with Markus, my other colleagues had to scale up the servers in the backend as they could not hold up against the load from the public.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/potherder/sicherheitstacho.jpg&quot; alt=&quot;Launch of our dashboard sicherheitstacho.eu (2013)&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As much positive feedback as we received, we also got some criticism, which we totally understood. It did lack detailed information on the attacks. However, the map was never intended to be an expert tool for security professionals, it was an awareness tool, an eye-opener, that’s why we showed it at a business fair. We had our own backend application for research and statistics, however not public. But internally, we had many discussions on where to go from there…&lt;/p&gt;

&lt;p&gt;The success of the launch of the sicherheitstacho.eu brought us to showcase at many other locations such as DTAG’s public shareholders meeting and other interesting locations abroad where we could explain what we were doing and show the benefit for DTAG. In addition to public talks at conferences and some TV documentaries on cyber security (yes, it helps to visualize something in an easy to understand manner ;) ), we also got some press coverage on new developments, e.g. on our &lt;a href=&quot;https://www.heise.de/security/meldung/Honeydroid-Android-Handy-wird-zur-Hackerfalle-1980058.html&quot;&gt;honeydroid&lt;/a&gt;, a smartphone honeypot running natively on Android smartphones in the background, a successor to the smartphone honeypots from 2011.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/potherder/honeydroid.jpg&quot; alt=&quot;&amp;quot;Honeydroid&amp;quot; - a native Android smartphone honeypot (2013)&quot; /&gt;&lt;/p&gt;

&lt;p&gt;During Cebit’13, a member of the board requested that we would implement honeypots located at all subsidiaries of Deutsche Telekom. Hence, we had the task to create a scalable solution for honeypot deployment. We immediately thought of the Raspberry Pi solution and followed that path. It was then, when Marco (@t3chn0m4g3), the brainchild of T-Pot, joined our team. Marco and I created a preconfigured SD card, which would bootstrap and register at a puppet server for configuration management. Finally, we assembled and sent out 100 Raspberry Pis to the subsidiaries and asked them to connect them to a public IP. Like this, we had a scalable solution for adding and managing new honeypots. Within a couple of weeks, we could increase our honeypot install base to 180 sensors and had a broader look at the attack landscape on the internet, even more globally distributed.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/potherder/rpi.jpg&quot; alt=&quot;Honeypot assembly line (2013)&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In order to achieve a streamlined attack data submission from all the honeypots to our backend, my other colleague Markus (@trixam) created the data submission tool &lt;a href=&quot;https://github.com/armedpot/ewsposter&quot;&gt;ewsposter&lt;/a&gt;, which extracts the relevant attack information from the log files, normalizes data, formats it as ews xml and submits it to our backend. In the future, we simply expanded this tool to support new honeypot types which saved a lot of time and created comparable attack statistics. In addition, this year other colleagues contributed with a rdp honeypot “rdpdetect” and a first cvemapper plugin for honeytrap and glastopf.  2013 was a very busy year for this small team of enthusiasts.&lt;/p&gt;

&lt;p&gt;In the beginning of 2014 I refined the Raspberry Pi Honeypot “semtex” with a touchscreen display and some fancy looking UI. I built several of these devices and we made sure that every C-level executive at DTAG received one and knew about this small device. My personal highlight was when our new CEO Tim Höttges showed it to our then Minister of the Interior, Thomas DeMaizière, during a visit to our new CERT premises.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/potherder/honeypi.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/assets/images/potherder/minister.jpg&quot; alt=&quot;CEO Tim Höttges and Minister of the Interior Thomas De Maizière looking at things. (2014)&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This year, we did not explicitly show any new stuff at Cebit. But we were present and showed some minor advancements to our sicherheitstacho.eu, which included some more comprehensible statistics and timelines, as well as the new RPI Touchscreen Honeypots, which were a good opener to a conversation. However, in the background we did not stop improving the tools we created.&lt;/p&gt;

&lt;p&gt;Although we had the central management for our new herd of honeypots using puppet in place, the Raspberry Pi-based Honeypots were more care intensive than we initially thought. SD-cards were running out of inodes during operation or simply dying caused by SD-card corruptions, so we had to reevaluate our possibilities running and maintaining our fleet.&lt;/p&gt;

&lt;p&gt;Fortunately, it was then, when docker emerged as the new kid in town for encapsulating and managing microservices. And it seemed to solve many problems we had running and managing our honeypots: Falling back to a safe state, different library dependencies, concurrency and data visualization. We started creating “honeyNUC” because the Intel NUC platform was our hardware replacement for the Raspberry PIs. We started dockerizing the honeypots with their individual software dependencies and were amazed by this technology and the possibilities we had. We could then orchestrate different honeypots, run them in parallel and route traffic from the host to the most suitable honeypot daemon. On top, Marco setup an ELK stack and created some cool visualizations. We got the permission to work on it a day per week, but many, many hours privately spent went into it - especially from Marco. Eventually, the result was &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce&quot;&gt;T-Pot&lt;/a&gt;, which we decided to publish in 2015 as open source to honor all the community work which we depended on. And we made sure you could build your own custom ISO image for installation and run it as VM next to almost any x86_64 hardware.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/potherder/tpot.png&quot; alt=&quot;First T-Pot 15.04 Architecture&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This year, we also got invited to officially join The Honeynet Project. We were and still are honored to be able to contribute to this community.&lt;/p&gt;

&lt;p&gt;So, we presented T-Pot to the public for Cebit’15, when we felt it was mature enough, but we still had a long list of improvements. Next to the initial release of T-Pot 15.03, we created a &lt;a href=&quot;http://dtag-dev-sec.github.io/&quot;&gt;github project webpage&lt;/a&gt; to share our tools and news on the “DTAG Community Honeypot Project”. The response to T-Pot was great. The setup and operation of multiple honeypots can be a complex and time intense task. With T-Pot, we had a solution which worked “out-of-the-box” and had an install time of less than 30 minutes. Our developments even granted us the opportunity to present it at the Annunal Honeynet Conference in &lt;a href=&quot;https://www.youtube.com/watch?v=Hj5f-FezW3Q&quot;&gt;Stavanger&lt;/a&gt;, Norway. I won’t get into the details of T-Pot here, as there are &lt;a href=&quot;http://dtag-dev-sec.github.io/mediator/feature/2017/11/07/t-pot-17.10.html&quot;&gt;extensive posts&lt;/a&gt; available that cover the latest features of each iteration of T-Pot and Marco created very nice videos for the setup etc.&lt;/p&gt;

&lt;p&gt;Back then, the setup of T-Pot required an installation from an ISO, which was based on Ubuntu. In some cases, e.g. for cloud deployments, an ISO installation was not always feasible. So, I derived a script from the T-Pot ISO which would allow T-Pot installations in cloud environments based on Ubuntu such as Amazon EC2 and gave it the boring name &lt;a href=&quot;https://github.com/dtag-dev-sec/t-pot-autoinstall&quot;&gt;T-Pot Autoinstall&lt;/a&gt;. Installing with the autoinstaller was even faster, and turned an Ubuntu cloud instance into T-Pot in less than 10 minutes. Nowadays, whenever there is a new T-Pot release, I try to adapt the autoinstaller to the new T-Pot version, too.&lt;/p&gt;

&lt;p&gt;In 2015 we installed our first internal Honeypots in the DTAG corporate network and developed some new own honeypots like &lt;a href=&quot;https://github.com/msbeiti/eMobility-Honeypot&quot;&gt;e-mobility&lt;/a&gt;, the simulation of a car charging station by our colleague Muhammad (@msbeiti), which is part of T-Pot’s “Industrial Edition”.&lt;/p&gt;

&lt;p&gt;In 2016, T-Pot was updated twice in order to reflect changes in docker orchestration (e.g. move to systemd) and support new honeypots like our own elasticsearch honeypot &lt;a href=&quot;https://github.com/schmalle/ElasticpotPY&quot;&gt;elasticpot&lt;/a&gt;. Frequent feature requests like data persistence were addressed and overall improvements were applied. As Markus (@schmalle) likes to play around with new technologies, he also created some very specific honeypots like nodepot and puppetpot.&lt;/p&gt;

&lt;p&gt;Meanwhile, we had around 3 Mio events per day captured in our honeypots. So, it was time to do some analysis. We handed over a large part of our data to T-Labs, the research branch of Deutsche Telekom, who analyzed the data together with the Ben Gurion Univerity, Tel Aviv, applying some machine learning techniques. The results were very interesting, however too much to cover here. One of the lessons learnt here was, that we needed to improve the normalization of our data and make data of different honeypots more comparable.&lt;/p&gt;

&lt;p&gt;It is also notable that in May 2016, we joined a consortium well-known players to set up a European honeypot network, called &lt;a href=&quot;https://sissden.eu&quot;&gt;SISSDEN&lt;/a&gt;, the “Secure Information Sharing Sensor Delivery Event Network”, funded by European Union’s Horizon 2020 research and innovation program, where Markus, Marco and I now contribute to. We are now half-way through the project and a lot of exciting work is done here, which I cannot spoil. Make sure you keep an eye on the &lt;a href=&quot;https://sissden.eu&quot;&gt;SISSDEN website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The year 2017, again, was a busy year for all of us. We improved Elasticpot, updated ewsposter to support various new honeypots and finally released T-Pot 17.10 with many, many improvements like smaller docker images based on Alpine Linux and new honeypot daemons like &lt;a href=&quot;https://github.com/magisterquis/vnclowpot&quot;&gt;vnclowpot&lt;/a&gt;, &lt;a href=&quot;https://github.com/citronneur/rdpy&quot;&gt;rdpy&lt;/a&gt; and &lt;a href=&quot;https://github.com/awhitehatter/mailoney&quot;&gt;mailoney&lt;/a&gt;. It also featured an improved, faster installation procedure, lower maintenance, an update functionality, docker management tools and incident research capabilities. Overall, this seems to me like the biggest T-Pot release yet.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/potherder/tpot2.png&quot; alt=&quot;Current T-Pot 17.10 Architecture&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As if this wasn’t enough, we tackled a topic we have been neglecting the last years: the backend. As previously mentioned, the backend was initially developed in 2011 and improved until 2014. However, as Lutz, the backend developer was no more available to our project team, we could not modify the backend to great extent, due to the unavailability of a grails developer. We sometimes had to work around the limitations of the backend. So, eventually we decided to rewrite the backend and host it in our own cloud, the &lt;a href=&quot;https://cloud.telekom.de/infrastruktur/open-telekom-cloud/&quot;&gt;Open Telekom Cloud&lt;/a&gt; (OTC).&lt;/p&gt;

&lt;p&gt;I started in summer 2017 implementing a feature equivalent API in python using Flask. Next to our production environment which held the data of our own DTAG honeypots, we had a second index running which contained the data transmitted by the community T-Pots. After Markus implemented the corresponding PUT-API, the endpoint that ewsposter sends its ews xml to, we had reproduced the basic APIs for the community index. One API to retrieve data from Community T-Pots and one to query the data stored.&lt;/p&gt;

&lt;p&gt;At the same time, my colleague Aydin(@aydinchavez), who recently joined the team, redesigned the sicherheitstacho.eu using fancy reactjs client side javascript to query the data available. Initially, he queried the old APIs available, but was very limited in what he could display. So, we changed his endpoints to the newly created API. We talked about what data would make sense for him to display and we agreed on several new APIs he would need to query and I implemented them. As a follow-up, we merged the PUT and GET API in one single backend software component, we now called &lt;a href=&quot;https://github.com/dtag-dev-sec/PEBA&quot;&gt;PEBA&lt;/a&gt;. 
We had a tight schedule and worked day and night trying to match the deadline of the opening of Telekom’s of the new Cyber Defense Center and show our new sicherheitstacho.eu dashboard on a large scale.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/potherder/tacho2.png&quot; alt=&quot;New sicherheitstacho.eu dashboard (2018)&quot; /&gt;&lt;/p&gt;

&lt;p&gt;But the work did not end here. Long story short: After adding a caching mechanism and solving some other technical challenges, we finally switched our own honeypots to the new backend. Just in time for the fresh T-Pot 17.10 release. It was all very agile. I cannot possibly imagine what an open heart surgery is like, but this definitely felt like such an operation, and I am glad to say: the patient is alive. No major complications. :)&lt;/p&gt;

&lt;p&gt;For those interested in operational aspects, we now have an index distributed over six Elasticsearch nodes, the API is currently processing between 5 and 6Mio alerts per day with a pretty low load. Our entire deployment is done via Ansible, so we can dynamically add and remove nodes to our cluster in the Open Telekom Cloud as we need.&lt;/p&gt;

&lt;p&gt;Aydin, Robin (@rverton) and I are currently working on statistic functions and analyses so we can improve our analysis capabilities and Markus implemented the missing notification module. Step by step, we will reproduce the functionality needed and add features. The latest addition is the central storage of dionaea captured malware and honeytrap’s TCP attack payloads collected.&lt;/p&gt;

&lt;p&gt;To sum it up, in the past, many people who ran multiple T-Pots requested some kind of central component. So here it is, &lt;a href=&quot;https://github.com/dtag-dev-sec/PEBA&quot;&gt;PEBA&lt;/a&gt;, our own solution, tailored to our own needs. Feel free to contribute or let us know about your individual requirements. Maybe they would be of value for us, too.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/potherder/esbackend.png&quot; alt=&quot;Our backend cluster (2018)&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Let me finish this post with a short anecdote: Just a couple of weeks ago, I installed ten new honeypots on our Open Telekom Cloud. Our honeypots played a key role during the investigation of a new mirai-variant wave on Dec. 5th. Just one hour after the wave of exploitation attempts was disclosed to us, my team mates Robin and Björn (@justsly) and I were able to identify and retrieve the 0-day Huawei exploit from our honeypots, reverse-engineer the malware and identify the C&amp;amp;C servers. We could then hand everything over to our operational CERT team. We are very proud to confirm that in this case, the Early Warning System using our honeypots worked. Even when we had to sacrifice our team’s Christmas party, it was a lot of fun. :)&lt;/p&gt;

&lt;p&gt;In my opinion, this project is an example of great team spirit and collaboration. It is very agile and the focus shifted multiple times during the project. Initially, we were granted time as a “one-day-a-month” project. However, the efforts greatly exceeded the time given. Many hours of our own spare time went into this project but it was always supported, by our families and friends, as well as our employer. I would like to acknowledge that it would have never been so successful, if it hadn’t been embraced by all layers of our management: our team leads, Markus as vice president and the management levels above up to the board of directors of Deutsche Telekom.&lt;/p&gt;

&lt;p&gt;Thanks to everyone supporting this project and keeping it alive, especially to our pot herders @schmalle, @trixam, @t3chn0m4g3, @aydinchavez, @rverton, Rainer, Daniel, Norbert, Ralf, Lutz, but also to our external supporters like Tillmann, The Honeynet Project, GDATA, Intel, all those I forgot.&lt;/p&gt;

&lt;p&gt;And last but not least you for reading this and showing your interest.&lt;/p&gt;

&lt;p&gt;Cheers // @vorband&lt;/p&gt;

</description>
        <pubDate>Fri, 23 Feb 2018 10:37:42 +0100</pubDate>
        <link>http://dtag-dev-sec.github.io//mediator/feature/2018/02/23/potherder.html</link>
        <guid isPermaLink="true">http://dtag-dev-sec.github.io//mediator/feature/2018/02/23/potherder.html</guid>
        
        <category>featured</category>
        
        
        <category>mediator</category>
        
        <category>feature</category>
        
      </item>
    
      <item>
        <title>T-Pot 17.10 - Multi-Honeypot Platform rEvolution</title>
        <description>&lt;p&gt;In October 2016 we released
&lt;a href=&quot;http://dtag-dev-sec.github.io/mediator/feature/2016/10/31/t-pot-16.10.html&quot;&gt;T-Pot 16.10&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;t-pot-1710&quot;&gt;T-Pot 17.10&lt;/h1&gt;

&lt;p&gt;T-Pot 17.10 runs on the latest 16.04 LTS Ubuntu Server Network Installer image, is based on&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.docker.com/&quot;&gt;docker&lt;/a&gt;, &lt;a href=&quot;https://docs.docker.com/compose/&quot;&gt;docker-compose&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and includes dockerized versions of the following honeypots&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://conpot.org/&quot;&gt;conpot&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.micheloosterhof.com/cowrie/&quot;&gt;cowrie&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/DinoTools/dionaea&quot;&gt;dionaea&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/schmalle/ElasticPot&quot;&gt;elasticpot&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/emobility&quot;&gt;emobility&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://glastopf.org/&quot;&gt;glastopf&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/armedpot/honeytrap/&quot;&gt;honeytrap&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/awhitehatter/mailoney&quot;&gt;mailoney&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/citronneur/rdpy&quot;&gt;rdpy&lt;/a&gt; and&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/magisterquis/vnclowpot&quot;&gt;vnclowpot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Furthermore we use the following tools&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/videos&quot;&gt;ELK stack&lt;/a&gt; to beautifully visualize all the events captured by T-Pot.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mobz.github.io/elasticsearch-head/&quot;&gt;Elasticsearch Head&lt;/a&gt; a web front end for browsing and interacting with an Elastic Search cluster.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://my-netdata.io/&quot;&gt;Netdata&lt;/a&gt; for real-time performance monitoring.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://portainer.io/&quot;&gt;Portainer&lt;/a&gt; a web based UI for docker.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/smicallef/spiderfoot&quot;&gt;Spiderfoot&lt;/a&gt; a open source intelligence automation tool.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://suricata-ids.org/&quot;&gt;Suricata&lt;/a&gt; a Network Security Monitoring engine.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/krishnasrinivas/wetty&quot;&gt;Wetty&lt;/a&gt; a web based SSH client.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;tldr&quot;&gt;TL;DR&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;Meet the &lt;a href=&quot;#requirements&quot;&gt;system requirements&lt;/a&gt;. The T-Pot installation needs at least 4 GB RAM and 64 GB free disk space as well as a working internet connection.&lt;/li&gt;
  &lt;li&gt;Download the T-Pot ISO from &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce/releases&quot;&gt;GitHub&lt;/a&gt; or &lt;a href=&quot;#createiso&quot;&gt;create it yourself&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Install the system in a &lt;a href=&quot;#vm&quot;&gt;VM&lt;/a&gt; or on &lt;a href=&quot;#hw&quot;&gt;physical hardware&lt;/a&gt; with &lt;a href=&quot;#placement&quot;&gt;internet access&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Enjoy your favorite beverage - &lt;a href=&quot;http://sicherheitstacho.eu/?peers=communityPeers&quot;&gt;watch&lt;/a&gt; and &lt;a href=&quot;#kibana&quot;&gt;analyze&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Seeing is believing :bowtie:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://youtu.be/G-_OabDowFU&quot;&gt;&lt;img src=&quot;https://img.youtube.com/vi/G-_OabDowFU/0.jpg&quot; alt=&quot;T-Pot 17.10&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;table-of-contents&quot;&gt;Table of Contents&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#changelog&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#concept&quot;&gt;Technical Concept&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#requirements&quot;&gt;System Requirements&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#installation&quot;&gt;Installation&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#prebuilt&quot;&gt;Prebuilt ISO Image&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#createiso&quot;&gt;Create your own ISO Image&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#vm&quot;&gt;Running in a VM&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#hardware&quot;&gt;Running on Hardware&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#firstrun&quot;&gt;First Run&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#placement&quot;&gt;System Placement&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#options&quot;&gt;Options&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#ssh&quot;&gt;SSH and web access&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#kibana&quot;&gt;Kibana Dashboard&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#tools&quot;&gt;Tools&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#maintenance&quot;&gt;Maintenance&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#submission&quot;&gt;Community Data Submission&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#roadmap&quot;&gt;Roadmap&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#disclaimer&quot;&gt;Disclaimer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#faq&quot;&gt;FAQ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#contact&quot;&gt;Contact&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#licenses&quot;&gt;Licenses&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#credits&quot;&gt;Credits&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#staytuned&quot;&gt;Stay tuned&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#funfact&quot;&gt;Fun Fact&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;background&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;changelog&quot;&gt;Changelog&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Size still matters&lt;/strong&gt; 😅
    &lt;ul&gt;
      &lt;li&gt;All docker images have been rebuilt as micro containers based on Alpine Linux to even further reduce the image size and leading to image sizes (compressed) below the 50 MB mark. The uncompressed size of eMobility and the ELK stack could each be reduced by a whopping 600 MB!&lt;/li&gt;
      &lt;li&gt;A “Everything” installation now takes roughly 1.6 GB download size&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;docker-compose&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;T-Pot containers are now being controlled and monitored through docker-compose and a single configuration file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/opt/tpot/etc/tpot.yml&lt;/code&gt; allowing for greater flexibility and resulting in easier image management (i.e. updated images).&lt;/li&gt;
      &lt;li&gt;As a benefit only a single &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;systemd&lt;/code&gt; script &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/systemd/system/tpot.service&lt;/code&gt; is needed to start &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;systemctl start tpot&lt;/code&gt; and stop &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;systemctl stop tpot&lt;/code&gt; the T-Pot services.&lt;/li&gt;
      &lt;li&gt;There are four pre-configured compose configurations which do reflect the T-Pot editions &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/opt/tpot/etc/compose&lt;/code&gt;. Simply stop the T-Pot services and copy i.e. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cp /opt/tpot/etc/compose/all.yml /opt/tpot/etc/tpot.yml&lt;/code&gt;, restart the T-Pot services and the selcted edition will be running after downloading the required docker images.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Introducing&lt;/strong&gt; &lt;a href=&quot;https://github.com/smicallef/spiderfoot&quot;&gt;Spiderfoot&lt;/a&gt; a open source intelligence automation tool.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Installation&lt;/strong&gt; procedure simplified
    &lt;ul&gt;
      &lt;li&gt;Within the Ubuntu Installer you only have to choose language settings&lt;/li&gt;
      &lt;li&gt;After the first reboot the T-Pot installer checks if internet and required services are reachable before the installation procedure begins&lt;/li&gt;
      &lt;li&gt;T-Pot Installer now uses a “dialog” which looks way better than the old text based installer&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tsec&lt;/code&gt; user &amp;amp; password dialog is now part of the T-Pot Installer&lt;/li&gt;
      &lt;li&gt;The self-signed certificate is now created automatically to reduce unnecessary overhead for novice users&lt;/li&gt;
      &lt;li&gt;New ASCII logo and login screen pointing to web and ssh logins&lt;/li&gt;
      &lt;li&gt;Hostnames are now generated using an offline name generator, which still produces funny and collision free hostnames&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;CVE IDs for Suricata&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Our very own &lt;a href=&quot;https://github.com/dtag-dev-sec/listbot&quot;&gt;Listbot&lt;/a&gt; builds translation maps for Logstash. If Logstash registers a match the events’ CVE ID will be stored alongside the event within Elasticsearch.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;IP Reputations&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/listbot&quot;&gt;Listbot&lt;/a&gt; also builds translation maps for blacklisted IPs&lt;/li&gt;
      &lt;li&gt;Based upon 30+ publicly available IP blacklisting sources listbot creates a logstash translation map matching the events’ source IP addresses against the IPs reputation&lt;/li&gt;
      &lt;li&gt;If the source IP is known to a blacklist service a corresponding tag will be stored with the event&lt;/li&gt;
      &lt;li&gt;Updates occur on every logstash container start; by default every 24h&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Honeypot updates and improvements&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;All honeypots were updated to their latest &amp;amp; stable versions.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;New Honeypots&lt;/strong&gt; were added …
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/awhitehatter/mailoney&quot;&gt;mailoney&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;A low interaction SMTP honeypot&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/citronneur/rdpy&quot;&gt;rdpy&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;A low interaction RDP honeypot&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/magisterquis/vnclowpot&quot;&gt;vnclowpot&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;A low interaction VNC honeypot&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Persistence&lt;/strong&gt; is now enabled by default and will keep honeypot logs and tools data in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/data/&lt;/code&gt; and its sub-folders by default for 30 days. You may change that behavior in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/opt/tpot/etc/logrotate/logrotate.conf&lt;/code&gt;. ELK data however will be kept for 90 days by default. You may change that behavior in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/opt/tpot/etc/curator/actions.yml&lt;/code&gt;. Scripts will be triggered through &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/crontab&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Updates&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Docker&lt;/strong&gt; was updated to the latest &lt;strong&gt;1.12.6&lt;/strong&gt; release within Ubuntu 16.04.x LTS&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;ELK&lt;/strong&gt; was updated to the latest &lt;strong&gt;Kibana 5.6.3&lt;/strong&gt;, &lt;strong&gt;Elasticsearch 5.6.3&lt;/strong&gt; and &lt;strong&gt;Logstash 5.6.3&lt;/strong&gt; releases.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Suricata&lt;/strong&gt; was updated to the latest &lt;strong&gt;4.0.0&lt;/strong&gt; version including the latest &lt;strong&gt;Emerging Threats&lt;/strong&gt; community ruleset.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Dashboards Makeover&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;We now have &lt;strong&gt;160+ Visualizations&lt;/strong&gt; pre-configured and compiled to 14 individual &lt;strong&gt;Kibana Dashboards&lt;/strong&gt; for every honeypot. Monitor all &lt;em&gt;honeypot events&lt;/em&gt; locally on your T-Pot installation. Aside from &lt;em&gt;honeypot events&lt;/em&gt; you can also view &lt;em&gt;Suricata NSM, Syslog and NGINX&lt;/em&gt; events for a quick overview of local host events.&lt;/li&gt;
      &lt;li&gt;View available IP reputation of any source IP address&lt;/li&gt;
      &lt;li&gt;View available CVE ID for events&lt;/li&gt;
      &lt;li&gt;More &lt;strong&gt;Smart links&lt;/strong&gt; are now included.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Update Feature&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;For the ones who like to live on the bleeding edge of T-Pot development there is now a update script available in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/opt/tpot/update.sh&lt;/code&gt;. Just run the script and it will get the latest changes from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;master branch&lt;/code&gt;. For now this feature is experimental and the first step to a true rolling release cycle.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Files &amp;amp; Folders&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;While the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/data&lt;/code&gt; folder is still in its old place, all T-Pot relevant files and folders have been restructured and will now be installed into &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/opt/tpot&lt;/code&gt;. Only a few system relevant files with regard to the installed OS and its services will be copied to locations outside the T-Pot base path.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;concept&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;technical-concept&quot;&gt;Technical Concept&lt;/h1&gt;

&lt;p&gt;T-Pot is based on the network installer of Ubuntu Server 16.04.x LTS.
The honeypot daemons as well as other support components being used have been containerized using &lt;a href=&quot;http://docker.io&quot;&gt;docker&lt;/a&gt;.
This allows us to run multiple honeypot daemons on the same network interface while maintaining a small footprint and constrain each honeypot within its own environment.&lt;/p&gt;

&lt;p&gt;In T-Pot we combine the dockerized honeypots
&lt;a href=&quot;http://conpot.org/&quot;&gt;conpot&lt;/a&gt;,
&lt;a href=&quot;http://www.micheloosterhof.com/cowrie/&quot;&gt;cowrie&lt;/a&gt;,
&lt;a href=&quot;https://github.com/DinoTools/dionaea&quot;&gt;dionaea&lt;/a&gt;,
&lt;a href=&quot;https://github.com/schmalle/ElasticPot&quot;&gt;elasticpot&lt;/a&gt;,
&lt;a href=&quot;https://github.com/dtag-dev-sec/emobility&quot;&gt;emobility&lt;/a&gt;,
&lt;a href=&quot;http://glastopf.org/&quot;&gt;glastopf&lt;/a&gt;,
&lt;a href=&quot;https://github.com/armedpot/honeytrap/&quot;&gt;honeytrap&lt;/a&gt;,
&lt;a href=&quot;https://github.com/awhitehatter/mailoney&quot;&gt;mailoney&lt;/a&gt;,
&lt;a href=&quot;https://github.com/citronneur/rdpy&quot;&gt;rdpy&lt;/a&gt; and
&lt;a href=&quot;https://github.com/magisterquis/vnclowpot&quot;&gt;vnclowpot&lt;/a&gt; with
&lt;a href=&quot;https://www.elastic.co/videos&quot;&gt;ELK stack&lt;/a&gt; to beautifully visualize all the events captured by T-Pot,
&lt;a href=&quot;https://mobz.github.io/elasticsearch-head/&quot;&gt;Elasticsearch Head&lt;/a&gt; a web front end for browsing and interacting with an Elastic Search cluster,
&lt;a href=&quot;http://my-netdata.io/&quot;&gt;Netdata&lt;/a&gt; for real-time performance monitoring,
&lt;a href=&quot;http://portainer.io/&quot;&gt;Portainer&lt;/a&gt; a web based UI for docker,
&lt;a href=&quot;https://github.com/smicallef/spiderfoot&quot;&gt;Spiderfoot&lt;/a&gt; a open source intelligence automation tool,
&lt;a href=&quot;http://suricata-ids.org/&quot;&gt;Suricata&lt;/a&gt; a Network Security Monitoring engine and
&lt;a href=&quot;https://github.com/krishnasrinivas/wetty&quot;&gt;Wetty&lt;/a&gt; a web based SSH client.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dtag-dev-sec/tpotce/master/doc/architecture.png&quot; alt=&quot;Architecture&quot; /&gt;&lt;/p&gt;

&lt;p&gt;While data within docker containers is volatile we do now ensure a default 30 day persistence of all relevant honeypot and tool data in the well known &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/data&lt;/code&gt; folder and sub-folders. The persistence configuration may be adjusted in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/opt/tpot/etc/logrotate/logrotate.conf&lt;/code&gt;. Once a docker container crashes, all other data produced within its environment is erased and a fresh instance is started from the corresponding docker image.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Basically, what happens when the system is booted up is the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;start host system&lt;/li&gt;
  &lt;li&gt;start all the necessary services (i.e. docker-engine, reverse proxy, etc.)&lt;/li&gt;
  &lt;li&gt;start all docker containers via docker-compose (honeypots, nms, elk)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Within the T-Pot project, we provide all the tools and documentation necessary to build your own honeypot system and contribute to our &lt;a href=&quot;http://sicherheitstacho.eu/?peers=communityPeers&quot;&gt;community data view&lt;/a&gt;, a separate channel on our  &lt;a href=&quot;http://sicherheitstacho.eu&quot;&gt;Sicherheitstacho&lt;/a&gt; that is powered by T-Pot community data.&lt;/p&gt;

&lt;p&gt;The source code and configuration files are stored in individual GitHub repositories, which are linked below. The docker images are pre-configured for the T-Pot environment. If you want to run the docker images separately, make sure you study the docker-compose configuration (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/opt/tpot/etc/tpot.yml&lt;/code&gt;) and the T-Pot systemd script (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/systemd/system/tpot.service&lt;/code&gt;), as they provide a good starting point for implementing changes.&lt;/p&gt;

&lt;p&gt;The individual docker configurations are located in the following GitHub repositories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/conpot&quot;&gt;conpot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/cowrie&quot;&gt;cowrie&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/dionaea&quot;&gt;dionaea&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/elasticpot&quot;&gt;elasticpot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/elk&quot;&gt;elk-stack&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/emobility&quot;&gt;emobility&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/ews&quot;&gt;ewsposter&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/glastopf&quot;&gt;glastopf&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/honeytrap&quot;&gt;honeytrap&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/mailoney&quot;&gt;mailoney&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/netdata&quot;&gt;netdata&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/ui-for-docker&quot;&gt;portainer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/rdpy&quot;&gt;rdpy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/spiderfoot&quot;&gt;spiderfoot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/suricata&quot;&gt;suricata &amp;amp; p0f&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/vnclowpot&quot;&gt;vnclowpot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;requirements&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;system-requirements&quot;&gt;System Requirements&lt;/h1&gt;
&lt;p&gt;Depending on your installation type, whether you install on &lt;a href=&quot;#hardware&quot;&gt;real hardware&lt;/a&gt; or in a &lt;a href=&quot;#vm&quot;&gt;virtual machine&lt;/a&gt;, make sure your designated T-Pot system meets the following requirements:&lt;/p&gt;

&lt;h5 id=&quot;t-pot-installation-cowrie-dionaea-elasticpot-glastopf-honeytrap-mailoney-rdpy-vnclowpot-elk-suricatap0f--tools&quot;&gt;T-Pot Installation (Cowrie, Dionaea, ElasticPot, Glastopf, Honeytrap, Mailoney, Rdpy, Vnclowpot, ELK, Suricata+P0f &amp;amp; Tools)&lt;/h5&gt;
&lt;p&gt;When installing the T-Pot ISO image, make sure the target system (physical/virtual) meets the following minimum requirements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;4 GB RAM (6-8 GB recommended)&lt;/li&gt;
  &lt;li&gt;64 GB SSD (128 GB SSD recommended)&lt;/li&gt;
  &lt;li&gt;Network via DHCP&lt;/li&gt;
  &lt;li&gt;A working, non-proxied, internet connection&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;honeypot-installation-cowrie-dionaea-elasticpot-glastopf-honeytrap-mailoney-rdpy-vnclowpot&quot;&gt;Honeypot Installation (Cowrie, Dionaea, ElasticPot, Glastopf, Honeytrap, Mailoney, Rdpy, Vnclowpot)&lt;/h5&gt;
&lt;p&gt;When installing the T-Pot ISO image, make sure the target system (physical/virtual) meets the following minimum requirements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;3 GB RAM (4-6 GB recommended)&lt;/li&gt;
  &lt;li&gt;64 GB SSD (64 GB SSD recommended)&lt;/li&gt;
  &lt;li&gt;Network via DHCP&lt;/li&gt;
  &lt;li&gt;A working, non-proxied, internet connection&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;industrial-installation-conpot-emobility-elk-suricatap0f--tools&quot;&gt;Industrial Installation (ConPot, eMobility, ELK, Suricata+P0f &amp;amp; Tools)&lt;/h5&gt;
&lt;p&gt;When installing the T-Pot ISO image, make sure the target system (physical/virtual) meets the following minimum requirements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;4 GB RAM (8 GB recommended)&lt;/li&gt;
  &lt;li&gt;64 GB SSD (128 GB SSD recommended)&lt;/li&gt;
  &lt;li&gt;Network via DHCP&lt;/li&gt;
  &lt;li&gt;A working, non-proxied, internet connection&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;everything-installation-everything-all-of-the-above&quot;&gt;Everything Installation (Everything, all of the above)&lt;/h5&gt;
&lt;p&gt;When installing the T-Pot ISO image, make sure the target system (physical/virtual) meets the following minimum requirements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;8+ GB RAM&lt;/li&gt;
  &lt;li&gt;128+ GB SSD&lt;/li&gt;
  &lt;li&gt;Network via DHCP&lt;/li&gt;
  &lt;li&gt;A working, non-proxied, internet connection&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;installation&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;installation&quot;&gt;Installation&lt;/h1&gt;
&lt;p&gt;The installation of T-Pot is straight forward and heavily depends on a working, transparent and non-proxied up and running internet connection. Otherwise the installation &lt;strong&gt;will fail!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Firstly, decide if you want to download our prebuilt installation ISO image from &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce/releases&quot;&gt;GitHub&lt;/a&gt; &lt;strong&gt;&lt;em&gt;or&lt;/em&gt;&lt;/strong&gt; &lt;a href=&quot;#createiso&quot;&gt;create it yourself&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Secondly, decide where you want to let the system run: &lt;a href=&quot;#hardware&quot;&gt;real hardware&lt;/a&gt; or in a &lt;a href=&quot;#vm&quot;&gt;virtual machine&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;prebuilt&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;prebuilt-iso-image&quot;&gt;Prebuilt ISO Image&lt;/h2&gt;
&lt;p&gt;We provide an installation ISO image for download (~50MB), which is created using the same &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce&quot;&gt;tool&lt;/a&gt; you can use yourself in order to create your own image. It will basically just save you some time downloading components and creating the ISO image.
You can download the prebuilt installation image from &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce/releases&quot;&gt;GitHub&lt;/a&gt; and jump to the &lt;a href=&quot;#vm&quot;&gt;installation&lt;/a&gt; section.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;createiso&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;create-your-own-iso-image&quot;&gt;Create your own ISO Image&lt;/h2&gt;
&lt;p&gt;For transparency reasons and to give you the ability to customize your install, we provide you the &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce&quot;&gt;ISO Creator&lt;/a&gt; that enables you to create your own ISO installation image.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Requirements to create the ISO image:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Ubuntu 16.04 LTS or newer as host system (others &lt;em&gt;may&lt;/em&gt; work, but remain untested)&lt;/li&gt;
  &lt;li&gt;4GB of free memory&lt;/li&gt;
  &lt;li&gt;32GB of free storage&lt;/li&gt;
  &lt;li&gt;A working internet connection&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;How to create the ISO image:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Clone the repository and enter it.
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/dtag-dev-sec/tpotce
cd tpotce
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Invoke the script that builds the ISO image.
The script will download and install dependencies necessary to build the image on the invoking machine. It will further download the ubuntu network installer image (~50MB) which T-Pot is based on.
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo ./makeiso.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;After a successful build, you will find the ISO image &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tpot.iso&lt;/code&gt; along with a SHA256 checksum &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tpot.sha256&lt;/code&gt; in your directory.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a name=&quot;vm&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;running-in-vm&quot;&gt;Running in VM&lt;/h2&gt;
&lt;p&gt;You may want to run T-Pot in a virtualized environment. The virtual system configuration depends on your virtualization provider.&lt;/p&gt;

&lt;p&gt;We successfully tested T-Pot with &lt;a href=&quot;https://www.virtualbox.org&quot;&gt;VirtualBox&lt;/a&gt; and &lt;a href=&quot;http://www.vmware.com&quot;&gt;VMWare&lt;/a&gt; with just little modifications to the default machine configurations.&lt;/p&gt;

&lt;p&gt;It is important to make sure you meet the &lt;a href=&quot;#requirements&quot;&gt;system requirements&lt;/a&gt; and assign a virtual harddisk &amp;gt;=64 GB, &amp;gt;=4 GB RAM and bridged networking to T-Pot.&lt;/p&gt;

&lt;p&gt;You need to enable promiscuous mode for the network interface for suricata and p0f to work properly. Make sure you enable it during configuration.&lt;/p&gt;

&lt;p&gt;If you want to use a wifi card as primary NIC for T-Pot, please be aware of the fact that not all network interface drivers support all wireless cards. E.g. in VirtualBox, you then have to choose the &lt;em&gt;“MT SERVER”&lt;/em&gt; model of the NIC.&lt;/p&gt;

&lt;p&gt;Lastly, mount the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tpot.iso&lt;/code&gt; ISO to the VM and continue with the installation.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;You can now jump &lt;a href=&quot;#firstrun&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;hardware&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;running-on-hardware&quot;&gt;Running on Hardware&lt;/h2&gt;
&lt;p&gt;If you decide to run T-Pot on dedicated hardware, just follow these steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Burn a CD from the ISO image or make a bootable USB stick using the image. &lt;br /&gt;
Whereas most CD burning tools allow you to burn from ISO images, the procedure to create a bootable USB stick from an ISO image depends on your system. There are various Windows GUI tools available, e.g. &lt;a href=&quot;http://www.ubuntu.com/download/desktop/create-a-usb-stick-on-windows&quot;&gt;this tip&lt;/a&gt; might help you.&lt;br /&gt; On &lt;a href=&quot;http://askubuntu.com/questions/59551/how-to-burn-a-iso-to-a-usb-device&quot;&gt;Linux&lt;/a&gt; or &lt;a href=&quot;http://www.ubuntu.com/download/desktop/create-a-usb-stick-on-mac-osx&quot;&gt;MacOS&lt;/a&gt; you can use the tool &lt;em&gt;dd&lt;/em&gt; or create the USB stick with T-Pot’s &lt;a href=&quot;https://github.com/dtag-dev-sec&quot;&gt;ISO Creator&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Boot from the USB stick and install.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;Please note&lt;/em&gt;: We will ensure the compatibility with the Intel NUC platform, as we really like the form factor, looks and build quality.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;firstrun&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;first-run&quot;&gt;First Run&lt;/h2&gt;
&lt;p&gt;The installation requires very little interaction, only a locale and keyboard setting has to be answered for the basic linux installation. The system will reboot and please maintain an active internet connection. The T-Pot installer will start and ask you for an installation type, password for the &lt;strong&gt;tsec&lt;/strong&gt; user and credentials for a &lt;strong&gt;web user&lt;/strong&gt;. Everything else will be configured automatically. All docker images and other componenents will be downloaded. Depending on your network connection and the chosen installation type, the installation may take some time. During our tests (50Mbit down, 10Mbit up), the installation is usually finished within a 30 minute timeframe.&lt;/p&gt;

&lt;p&gt;Once the installation is finished, the system will automatically reboot and you will be presented with the T-Pot login screen. On the console you may login with the &lt;strong&gt;tsec&lt;/strong&gt; user:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;user: &lt;strong&gt;tsec&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;pass: &lt;strong&gt;password you chose during the installation&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All honeypot services are preconfigured and are starting automatically.&lt;/p&gt;

&lt;p&gt;You can also login from your browser: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://&amp;lt;your.ip&amp;gt;:64297&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;user: &lt;strong&gt;user you chose during the installation&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;pass: &lt;strong&gt;password you chose during the installation&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;placement&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;system-placement&quot;&gt;System Placement&lt;/h1&gt;
&lt;p&gt;Make sure your system is reachable through the internet. Otherwise it will not capture any attacks, other than the ones from your  internal network! We recommend you put it in an unfiltered zone, where all TCP and UDP traffic is forwarded to T-Pot’s network interface.&lt;/p&gt;

&lt;p&gt;A list of all relevant ports is available as part of the &lt;a href=&quot;#concept&quot;&gt;Technical Concept&lt;/a&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Basically, you can forward as many TCP ports as you want, as honeytrap dynamically binds any TCP port that is not covered by the other honeypot daemons.&lt;/p&gt;

&lt;p&gt;In case you need external SSH access, forward TCP port 64295 to T-Pot, see below.
In case you need external web access, forward TCP port 64297 to T-Pot, see below.&lt;/p&gt;

&lt;p&gt;T-Pot requires outgoing git, http, https connections for updates (Ubuntu, Docker, GitHub, PyPi) and attack submission (ewsposter, hpfeeds). Ports and availability may vary based on your geographical location.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;options&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;options&quot;&gt;Options&lt;/h1&gt;
&lt;p&gt;The system is designed to run without any interaction or maintenance and automatically contribute to the community.&lt;br /&gt;
We know, for some this may not be enough. So here come some ways to further inspect the system and change configuration parameters.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;ssh&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;ssh-and-web-access&quot;&gt;SSH and web access&lt;/h2&gt;
&lt;p&gt;By default, the SSH daemon only allows access on &lt;strong&gt;tcp/64295&lt;/strong&gt; with a user / password combination from RFC1918 networks. However, if you want to be able to login remotely via SSH you need to put your SSH keys on the host as described below.&lt;br /&gt;
It is configured to prevent password login from official IP addresses and pubkey-authentication must be used. Copy your SSH keyfile to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/home/tsec/.ssh/authorized_keys&lt;/code&gt; and set the appropriate permissions (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chmod 600 authorized_keys&lt;/code&gt;) as well as the correct ownership (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chown tsec:tsec authorized_keys&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;If you do not have a SSH client at hand and still want to access the machine via SSH you can do so by directing your browser to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://&amp;lt;your.ip&amp;gt;:64297&lt;/code&gt;, enter&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;user: &lt;strong&gt;user you chose during the installation&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;pass: &lt;strong&gt;password you chose during the installation&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and choose &lt;strong&gt;WebTTY&lt;/strong&gt; from the navigation bar. You will be prompted to allow access for this connection and enter the password for the user &lt;strong&gt;tsec&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dtag-dev-sec/tpotce/master/doc/webssh.png&quot; alt=&quot;WebTTY&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;kibana&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;kibana-dashboard&quot;&gt;Kibana Dashboard&lt;/h2&gt;
&lt;p&gt;Just open a web browser and access and connect to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://&amp;lt;your.ip&amp;gt;:64297&lt;/code&gt;, enter&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;user: &lt;strong&gt;user you chose during the installation&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;pass: &lt;strong&gt;password you chose during the installation&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and &lt;strong&gt;Kibana&lt;/strong&gt; will automagically load. The Kibana dashboard can be customized to fit your needs. By default, we haven’t added any filtering, because the filters depend on your setup. E.g. you might want to filter out your incoming administrative ssh connections and connections to update servers.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dtag-dev-sec/tpotce/master/doc/dashboard.png&quot; alt=&quot;Dashbaord&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;tools&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;tools&quot;&gt;Tools&lt;/h2&gt;
&lt;p&gt;We included some web based management tools to improve and ease up on your daily tasks.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dtag-dev-sec/tpotce/master/doc/headplugin.png&quot; alt=&quot;ES Head Plugin&quot; /&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/dtag-dev-sec/tpotce/master/doc/netdata.png&quot; alt=&quot;Netdata&quot; /&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/dtag-dev-sec/tpotce/master/doc/dockerui.png&quot; alt=&quot;Portainer&quot; /&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/dtag-dev-sec/tpotce/master/doc/spiderfoot.png&quot; alt=&quot;Spiderfoot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;maintenance&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;maintenance&quot;&gt;Maintenance&lt;/h2&gt;
&lt;p&gt;As mentioned before, the system was designed to be low maintenance. Basically, there is nothing you have to do but let it run.&lt;/p&gt;

&lt;p&gt;If you run into any problems, a reboot may fix it :bowtie:&lt;/p&gt;

&lt;p&gt;If new versions of the components involved appear, we will test them and build new docker images. Those new docker images will be pushed to docker hub and downloaded to T-Pot and activated accordingly.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;submission&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;community-data-submission&quot;&gt;Community Data Submission&lt;/h2&gt;
&lt;p&gt;We provide T-Pot in order to make it accessible to all parties interested in honeypot deployment. By default, the data captured is submitted to a community backend. This community backend uses the data to feed a &lt;a href=&quot;http://sicherheitstacho.eu/?peers=communityPeers&quot;&gt;community data view&lt;/a&gt;, a separate channel on our own &lt;a href=&quot;http://sicherheitstacho.eu&quot;&gt;Sicherheitstacho&lt;/a&gt;, which is powered by our own set of honeypots.
You may opt out the submission to our community server by removing the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;# Ewsposter service&lt;/code&gt; from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/opt/tpot/etc/tpot.yml&lt;/code&gt;:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Stop T-Pot services: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;systemctl stop tpot&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Remove Ewsposter service: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vi /opt/tpot/etc/tpot.yml&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Remove the following lines, save and exit vi (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:x!&lt;/code&gt;):&lt;br /&gt;
```
    &lt;h1 id=&quot;ewsposter-service&quot;&gt;Ewsposter service&lt;/h1&gt;
    &lt;p&gt;ewsposter:
 container_name: ewsposter
 restart: always
 networks:&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;ewsposter_local
 image: “dtagdevsec/ewsposter:1710”
 volumes:&lt;/li&gt;
      &lt;li&gt;/data:/data&lt;/li&gt;
      &lt;li&gt;/data/ews/conf/ews.ip:/opt/ewsposter/ews.ip
```&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Start T-Pot services: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;systemctl start tpot&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Data is submitted in a structured ews-format, a XML stucture. Hence, you can parse out the information that is relevant to you.&lt;/p&gt;

&lt;p&gt;We encourage you not to disable the data submission as it is the main purpose of the community approach - as you all know &lt;strong&gt;sharing is caring&lt;/strong&gt; 😍&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;roadmap&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;roadmap&quot;&gt;Roadmap&lt;/h1&gt;
&lt;p&gt;As with every development there is always room for improvements …&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Introduce new honeypots&lt;/li&gt;
  &lt;li&gt;Improve automatic updates&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some features may be provided with updated docker images, others may require some hands on from your side.&lt;/p&gt;

&lt;p&gt;You are always invited to participate in development on our &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce&quot;&gt;GitHub&lt;/a&gt; page.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;disclaimer&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;disclaimer&quot;&gt;Disclaimer&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;We don’t have access to your system. So we cannot remote-assist when you break your configuration. But you can simply reinstall.&lt;/li&gt;
  &lt;li&gt;The software was designed with best effort security, not to be in stealth mode. Because then, we probably would not be able to provide those kind of honeypot services.&lt;/li&gt;
  &lt;li&gt;You install and you run within your responsibility. Choose your deployment wisely as a system compromise can never be ruled out.&lt;/li&gt;
  &lt;li&gt;Honeypots should - by design - not host any sensitive data. Make sure you don’t add any.&lt;/li&gt;
  &lt;li&gt;By default, your data is submitted to the community dashboard. You can disable this in the config. But hey, wouldn’t it be better to contribute to the community?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;faq&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;faq&quot;&gt;FAQ&lt;/h1&gt;
&lt;p&gt;Please report any issues or questions on our &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce/issues&quot;&gt;GitHub issue list&lt;/a&gt;, so the community can participate.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;contact&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;contact&quot;&gt;Contact&lt;/h1&gt;
&lt;p&gt;We provide the software &lt;strong&gt;as is&lt;/strong&gt; in a Community Edition format. T-Pot is designed to run out of the box and with zero maintenance involved. &lt;br /&gt;
We hope you understand that we cannot provide support on an individual basis. We will try to address questions, bugs and problems on our &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce/issues&quot;&gt;GitHub issue list&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For general feedback you can write to cert @ telekom.de.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;licenses&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;licenses&quot;&gt;Licenses&lt;/h1&gt;
&lt;p&gt;The software that T-Pot is built on uses the following licenses.
&lt;br /&gt;GPLv2: &lt;a href=&quot;https://github.com/mushorg/conpot/blob/master/LICENSE.txt&quot;&gt;conpot (by Lukas Rist)&lt;/a&gt;, &lt;a href=&quot;https://github.com/DinoTools/dionaea/blob/master/LICENSE&quot;&gt;dionaea&lt;/a&gt;, &lt;a href=&quot;https://github.com/armedpot/honeytrap/blob/master/LICENSE&quot;&gt;honeytrap (by Tillmann Werner)&lt;/a&gt;, &lt;a href=&quot;http://suricata-ids.org/about/open-source/&quot;&gt;suricata&lt;/a&gt;
&lt;br /&gt;GPLv3: &lt;a href=&quot;https://github.com/schmalle/ElasticPot&quot;&gt;elasticpot (by Markus Schmall)&lt;/a&gt;, &lt;a href=&quot;https://github.com/dtag-dev-sec/emobility/blob/master/LICENSE&quot;&gt;emobility (by Mohamad Sbeiti)&lt;/a&gt;, &lt;a href=&quot;https://github.com/dtag-dev-sec/ews/&quot;&gt;ewsposter (by Markus Schroer)&lt;/a&gt;, &lt;a href=&quot;https://github.com/glastopf/glastopf/blob/master/GPL&quot;&gt;glastopf (by Lukas Rist)&lt;/a&gt;, &lt;a href=&quot;https://github.com/citronneur/rdpy/blob/master/LICENSE&quot;&gt;rdpy&lt;/a&gt;, &lt;a href=&quot;https://github.com/firehol/netdata/blob/master/LICENSE.md&quot;&gt;netdata&lt;/a&gt;
&lt;br /&gt;Apache 2 License: &lt;a href=&quot;https://github.com/elasticsearch/elasticsearch/blob/master/LICENSE.txt&quot;&gt;elasticsearch&lt;/a&gt;, &lt;a href=&quot;https://github.com/elasticsearch/logstash/blob/master/LICENSE&quot;&gt;logstash&lt;/a&gt;, &lt;a href=&quot;https://github.com/elasticsearch/kibana/blob/master/LICENSE.md&quot;&gt;kibana&lt;/a&gt;, &lt;a href=&quot;https://github.com/docker/docker/blob/master/LICENSE&quot;&gt;docker&lt;/a&gt;, &lt;a href=&quot;https://github.com/mobz/elasticsearch-head/blob/master/LICENCE&quot;&gt;elasticsearch-head&lt;/a&gt;
&lt;br /&gt;MIT License: &lt;a href=&quot;https://github.com/bcicen/ctop/blob/master/LICENSE&quot;&gt;ctop&lt;/a&gt;, &lt;a href=&quot;https://github.com/krishnasrinivas/wetty/blob/master/LICENSE&quot;&gt;wetty&lt;/a&gt;
&lt;br /&gt;zlib License: &lt;a href=&quot;https://github.com/magisterquis/vnclowpot/blob/master/LICENSE&quot;&gt;vnclowpot&lt;/a&gt;
&lt;br /&gt;&lt;a href=&quot;https://github.com/micheloosterhof/cowrie/blob/master/doc/COPYRIGHT&quot;&gt;cowrie (copyright disclaimer by Upi Tamminen)&lt;/a&gt;
&lt;br /&gt;&lt;a href=&quot;https://github.com/awhitehatter/mailoney&quot;&gt;mailoney&lt;/a&gt;
&lt;br /&gt;&lt;a href=&quot;http://www.ubuntu.com/about/about-ubuntu/licensing&quot;&gt;Ubuntu licensing&lt;/a&gt;
&lt;br /&gt;&lt;a href=&quot;https://github.com/portainer/portainer/blob/develop/LICENSE&quot;&gt;Portainer&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;credits&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;credits&quot;&gt;Credits&lt;/h1&gt;
&lt;p&gt;Without open source and the fruitful development community we are proud to be a part of, T-Pot would not have been possible! Our thanks are extended but not limited to the following people and organizations:&lt;/p&gt;

&lt;h3 id=&quot;the-developers-and-development-communities-of&quot;&gt;The developers and development communities of&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mushorg/conpot/graphs/contributors&quot;&gt;conpot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/micheloosterhof/cowrie/graphs/contributors&quot;&gt;cowrie&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/DinoTools/dionaea/graphs/contributors&quot;&gt;dionaea&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/docker/docker/graphs/contributors&quot;&gt;docker&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/schmalle/ElasticPot/graphs/contributors&quot;&gt;elasticpot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/elastic/elasticsearch/graphs/contributors&quot;&gt;elasticsearch&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mobz/elasticsearch-head/graphs/contributors&quot;&gt;elasticsearch-head&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/emobility/graphs/contributors&quot;&gt;emobility&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/armedpot/ewsposter/graphs/contributors&quot;&gt;ewsposter&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mushorg/glastopf/graphs/contributors&quot;&gt;glastopf&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/armedpot/honeytrap/graphs/contributors&quot;&gt;honeytrap&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/elastic/kibana/graphs/contributors&quot;&gt;kibana&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/elastic/logstash/graphs/contributors&quot;&gt;logstash&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/awhitehatter/mailoney&quot;&gt;mailoney&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/firehol/netdata/graphs/contributors&quot;&gt;netdata&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://lcamtuf.coredump.cx/p0f3/&quot;&gt;p0f&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/portainer/portainer/graphs/contributors&quot;&gt;portainer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/citronneur/rdpy&quot;&gt;rdpy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/smicallef/spiderfoot&quot;&gt;spiderfoot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/inliniac/suricata/graphs/contributors&quot;&gt;suricata&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.ubuntu.com/&quot;&gt;ubuntu&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/magisterquis/vnclowpot&quot;&gt;vnclowpot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/krishnasrinivas/wetty/graphs/contributors&quot;&gt;wetty&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;the-following-companies-and-organizations&quot;&gt;The following companies and organizations&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.canonical.com/&quot;&gt;canonical&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.docker.com/&quot;&gt;docker&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/&quot;&gt;elastic.io&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.honeynet.org/&quot;&gt;honeynet project&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.intel.com&quot;&gt;intel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;-and-of-course-you-for-joining-the-community&quot;&gt;… and of course &lt;strong&gt;&lt;em&gt;you&lt;/em&gt;&lt;/strong&gt; for joining the community!&lt;/h3&gt;

&lt;p&gt;&lt;a name=&quot;staytuned&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;stay-tuned-&quot;&gt;Stay tuned …&lt;/h1&gt;
&lt;p&gt;We will be releasing a new version of T-Pot about every 6-12 months.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;funfact&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;fun-fact&quot;&gt;Fun Fact&lt;/h1&gt;

&lt;p&gt;Coffee just does not cut it anymore which is why we needed a different caffeine source and consumed &lt;em&gt;242&lt;/em&gt; bottles of &lt;a href=&quot;https://de.wikipedia.org/wiki/Club-Mate&quot;&gt;Club Mate&lt;/a&gt; during the development of T-Pot 17.10 😇&lt;/p&gt;
</description>
        <pubDate>Tue, 07 Nov 2017 13:13:37 +0100</pubDate>
        <link>http://dtag-dev-sec.github.io//mediator/feature/2017/11/07/t-pot-17.10.html</link>
        <guid isPermaLink="true">http://dtag-dev-sec.github.io//mediator/feature/2017/11/07/t-pot-17.10.html</guid>
        
        <category>featured</category>
        
        
        <category>mediator</category>
        
        <category>feature</category>
        
      </item>
    
      <item>
        <title>Opensourcing our backend (well, parts of it...)</title>
        <description>&lt;p&gt;The last years we have consistently supported the community by releasing new versions of our multi honeypot platform called T-Pot. This November we are
proud to release a new version of T-Pot with exciting new features and …&lt;/p&gt;

&lt;p&gt;something more.&lt;/p&gt;

&lt;p&gt;For the last years our backend was driven by a very robust Grails code written by our former consultant / developer and friend Lutz Wischmann. The backend itself was running on a bare metal setup in the computing centre of Cronon (thanks for all your support over the years!).&lt;/p&gt;

&lt;p&gt;In middle of 2017 we decided to rewrite the backend, as we needed new features and wanted to be more flexible in handling the data. Initially we had a closer look at Kotlin, the new language from Jetbrains, which is a really cool new language. However, as many of the people within our internal honeypot community are python lovers, we went for Python3 with the Flask framework. As the basis for our backend we now use several instances within our own &lt;a href=&quot;https://cloud.telekom.de/en/infrastructure/open-telekom-cloud/&quot;&gt;Open Telecom Cloud&lt;/a&gt; (all debian 9 based, fully automated installation via ansible, …).&lt;/p&gt;

&lt;p&gt;In this new backend, we collect honeypot events from both our own closed DTAG honeypot network as well as community data contribution from T-Pots running all over the world.&lt;/p&gt;

&lt;p&gt;The data is visualized on our new &lt;a href=&quot;http://community.sicherheitstacho.eu&quot;&gt;sicherheitstacho.eu&lt;/a&gt; website.&lt;/p&gt;

&lt;p&gt;The backend is designed and implemented in the way that it recieves honeypot events from T-Pot via ewsposter. The events are processed and stored in the backend and are available to be queried via an API which delivers live statistics.&lt;/p&gt;

&lt;p&gt;The development is very agile, new features and refinements will be added over time.&lt;/p&gt;

&lt;p&gt;Although the backend is tailored to fullfill our own needs, we think it might be a good starting point for setting up your own centralized honeypot collection plattform.&lt;/p&gt;

&lt;p&gt;You can find the repository &lt;a href=&quot;https://github.com/dtag-dev-sec/PEBA&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Support will be handled same as with T-Pot via Github issues. Please bear in mind that the software is developed in the spare time next to our main job. If you have any contributions you think could be beneficial for the project, feel free to submit pull requests.&lt;/p&gt;

&lt;p&gt;In the future we plan also to publish additional codes from the backend such as admin backend, so stay tuned for updates.&lt;/p&gt;

&lt;h4 id=&quot;thanks&quot;&gt;Thanks&lt;/h4&gt;

&lt;p&gt;We would like the following people and organizations&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;[The Honeynet Project] (https://www.honeynet.org/)&lt;/li&gt;
  &lt;li&gt;Lutz Wischmann (&lt;a href=&quot;http://www.software-architects.de/&quot;&gt;42, The Software architects.&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Our friends at G-Data&lt;/li&gt;
  &lt;li&gt;Robin Verton for a source code review and other valuable input&lt;/li&gt;
  &lt;li&gt;Simon Peters for setting up the monitoring&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 07 Nov 2017 02:13:07 +0100</pubDate>
        <link>http://dtag-dev-sec.github.io//mediator/feature/2017/11/07/backend.html</link>
        <guid isPermaLink="true">http://dtag-dev-sec.github.io//mediator/feature/2017/11/07/backend.html</guid>
        
        <category>featured</category>
        
        
        <category>mediator</category>
        
        <category>feature</category>
        
      </item>
    
      <item>
        <title>T-Pot 16.10 - Multi-Honeypot Platform Redefined</title>
        <description>&lt;p&gt;In March 2016 we released
&lt;a href=&quot;http://dtag-dev-sec.github.io/mediator/feature/2016/03/11/t-pot-16.03.html&quot;&gt;T-Pot 16.03&lt;/a&gt;
and the positive feedback encouraged us to continue development and share all the improvements with the community and are proud to present to you …&lt;/p&gt;

&lt;h1 id=&quot;t-pot-1610&quot;&gt;T-Pot 16.10&lt;/h1&gt;

&lt;p&gt;T-Pot 16.10 now uses Ubuntu Server 16.04 LTS and is based on&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.docker.com/&quot;&gt;docker&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and includes dockerized versions of the following honeypots&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://conpot.org/&quot;&gt;conpot&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.micheloosterhof.com/cowrie/&quot;&gt;cowrie&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/DinoTools/dionaea&quot;&gt;dionaea&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/schmalle/ElasticPot&quot;&gt;elasticpot&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/emobility&quot;&gt;emobility&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://glastopf.org/&quot;&gt;glastopf&lt;/a&gt; and&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/armedpot/honeytrap/&quot;&gt;honeytrap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Furthermore we use the following tools&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/videos&quot;&gt;ELK stack&lt;/a&gt; to beautifully visualize all the events captured by T-Pot.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mobz.github.io/elasticsearch-head/&quot;&gt;Elasticsearch Head&lt;/a&gt; a web front end for browsing and interacting with an Elastic Search cluster.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://my-netdata.io/&quot;&gt;Netdata&lt;/a&gt; for real-time performance monitoring.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://portainer.io/&quot;&gt;Portainer&lt;/a&gt; a web based UI for docker.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://suricata-ids.org/&quot;&gt;Suricata&lt;/a&gt; a Network Security Monitoring engine.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/krishnasrinivas/wetty&quot;&gt;Wetty&lt;/a&gt; a web based SSH client.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;tldr&quot;&gt;TL;DR&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;Meet the &lt;a href=&quot;#requirements&quot;&gt;system requirements&lt;/a&gt;. The T-Pot installation needs at least 4 GB RAM and 64 GB free disk space as well as a working internet connection.&lt;/li&gt;
  &lt;li&gt;Download the T-Pot ISO from &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce/releases&quot;&gt;GitHub&lt;/a&gt; or &lt;a href=&quot;#createiso&quot;&gt;create it yourself&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Install the system in a &lt;a href=&quot;#vm&quot;&gt;VM&lt;/a&gt; or on &lt;a href=&quot;#hw&quot;&gt;physical hardware&lt;/a&gt; with &lt;a href=&quot;#placement&quot;&gt;internet access&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Enjoy your favorite beverage - &lt;a href=&quot;http://sicherheitstacho.eu/?peers=communityPeers&quot;&gt;watch&lt;/a&gt; and &lt;a href=&quot;#kibana&quot;&gt;analyze&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;iframe width=&quot;853&quot; height=&quot;480&quot; src=&quot;https://www.youtube.com/embed/SNo7CkQ7ZWQ&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h1 id=&quot;table-of-contents&quot;&gt;Table of Contents&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#changelog&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#concept&quot;&gt;Technical Concept&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#requirements&quot;&gt;System Requirements&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#installation&quot;&gt;Installation&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#prebuilt&quot;&gt;Prebuilt ISO Image&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#createiso&quot;&gt;Create your own ISO Image&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#vm&quot;&gt;Running in a VM&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#hardware&quot;&gt;Running on Hardware&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#firstrun&quot;&gt;First Run&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#placement&quot;&gt;System Placement&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#options&quot;&gt;Options&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#ssh&quot;&gt;SSH and web access&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#kibana&quot;&gt;Kibana Dashboard&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#tools&quot;&gt;Tools&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#maintenance&quot;&gt;Maintenance&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#submission&quot;&gt;Community Data Submission&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#roadmap&quot;&gt;Roadmap&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#disclaimer&quot;&gt;Disclaimer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#faq&quot;&gt;FAQ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#contact&quot;&gt;Contact&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#licenses&quot;&gt;Licenses&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#credits&quot;&gt;Credits&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#staytuned&quot;&gt;Stay tuned&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#funfact&quot;&gt;Fun Fact&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;background&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;changelog&quot;&gt;Changelog&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Ubuntu 16.04 LTS&lt;/strong&gt; is now being used as T-Pot’s OS base&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Size does matter&lt;/strong&gt; 😅
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tpot.iso&lt;/code&gt; is now based on &lt;strong&gt;Ubuntu’s&lt;/strong&gt; network installer reducing the image download size by 600MB from 650MB to only &lt;strong&gt;50MB&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;All docker images have been rebuilt to reduce the image size at least by 50MB in some cases even 400-600MB&lt;/li&gt;
      &lt;li&gt;A “Everything” installation takes roughly 2GB less download size (counting from initial image download)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Introducing&lt;/strong&gt; new tools making things a lot easier for new users
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://mobz.github.io/elasticsearch-head/&quot;&gt;Elasticsearch Head&lt;/a&gt; a web front end for browsing and interacting with an Elastic Search cluster.&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://my-netdata.io/&quot;&gt;Netdata&lt;/a&gt; for real-time performance monitoring.&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://portainer.io/&quot;&gt;Portainer&lt;/a&gt; a web based UI for docker.&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/krishnasrinivas/wetty&quot;&gt;Wetty&lt;/a&gt; a web based SSH client.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;NGINX&lt;/strong&gt; implemented as HTTPS reverse proxy
    &lt;ul&gt;
      &lt;li&gt;Access Kibana, ES Head plugin, UI-for-Docker, WebSSH and Netdata via browser!&lt;/li&gt;
      &lt;li&gt;Two factor based SSH tunnel is no longer needed!&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Installation&lt;/strong&gt; procedure improved
    &lt;ul&gt;
      &lt;li&gt;Set your own password for the &lt;em&gt;tsec&lt;/em&gt; user&lt;/li&gt;
      &lt;li&gt;Choose your installation type without the need of building your own image&lt;/li&gt;
      &lt;li&gt;Setup a remote user / password for secure web access including a self-signed-certificate&lt;/li&gt;
      &lt;li&gt;Easy to remember hostnames&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;First login&lt;/strong&gt; easy and secure
    &lt;ul&gt;
      &lt;li&gt;Access from console, ssh or web&lt;/li&gt;
      &lt;li&gt;No two-factor-authentication needed for ssh when logging in from RFC1918 networks&lt;/li&gt;
      &lt;li&gt;Enforcing public-key authentication for ssh connections other than RFC1918 networks&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Systemd&lt;/strong&gt; now supersedes &lt;em&gt;upstart&lt;/em&gt; as init system. All upstart scripts were ported to systemd along with the following improvements:
    &lt;ul&gt;
      &lt;li&gt;Improved start / stop handling of containers&lt;/li&gt;
      &lt;li&gt;Set persistence individually per container startup scripts (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/systemd/system&lt;/code&gt;)&lt;/li&gt;
      &lt;li&gt;Set persistence globally (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/usr/bin/clean.sh&lt;/code&gt;)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Honeypot updates and improvements&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Conpot&lt;/strong&gt; now supports &lt;strong&gt;JSON logging&lt;/strong&gt; with many thanks as to making this feature request possible going to:
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://github.com/adepasquale&quot;&gt;Andrea Pasquale&lt;/a&gt;,&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://github.com/danilo-massa&quot;&gt;Danilo Massa&lt;/a&gt; &amp;amp;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://github.com/johnnykv&quot;&gt;Johnny Vestergaard&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Cowrie&lt;/strong&gt; is now supporting &lt;strong&gt;telnet&lt;/strong&gt; which is highly appreciated and thank you
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://github.com/micheloosterhof&quot;&gt;Michel Oosterhof&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Dionaea&lt;/strong&gt; now supports &lt;strong&gt;JSON logging&lt;/strong&gt; with many thanks as to making this feature request possible going to:
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://github.com/phibos&quot;&gt;PhiBo&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Elasticpot&lt;/strong&gt; now supports &lt;strong&gt;logging all queries and requests&lt;/strong&gt; with many thanks as to making this feature request possible going to:
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://github.com/schmalle&quot;&gt;Markus Schmall&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Honeytrap&lt;/strong&gt; now supports &lt;strong&gt;JSON logging&lt;/strong&gt; with many thanks as to making this feature request possible going to:
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://github.com/adepasquale&quot;&gt;Andrea Pasquale&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Updates&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Docker&lt;/strong&gt; was updated to the latest &lt;strong&gt;1.12.2&lt;/strong&gt; release&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;ELK&lt;/strong&gt; was updated to the latest &lt;strong&gt;Kibana 4.6.2&lt;/strong&gt;, &lt;strong&gt;Elasticsearch 2.4.1&lt;/strong&gt; and &lt;strong&gt;Logstash 2.4.0&lt;/strong&gt; releases.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Suricata&lt;/strong&gt; was updated to the latest &lt;strong&gt;3.1.2&lt;/strong&gt; version including the latest &lt;strong&gt;Emerging Threats&lt;/strong&gt; community ruleset.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;We now have &lt;strong&gt;150 Visualizations&lt;/strong&gt; pre-configured and compiled to 14 individual &lt;strong&gt;Kibana Dashboards&lt;/strong&gt; for every honeypot. Monitor all &lt;em&gt;honeypot events&lt;/em&gt; locally on your T-Pot installation. Aside from &lt;em&gt;honeypot events&lt;/em&gt; you can also view &lt;em&gt;Suricata NSM, Syslog and NGINX&lt;/em&gt; events for a quick overview of local host events.&lt;/li&gt;
  &lt;li&gt;More &lt;strong&gt;Smart links&lt;/strong&gt; are now included.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;concept&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;technical-concept&quot;&gt;Technical Concept&lt;/h1&gt;

&lt;p&gt;T-Pot is based on the network installer of Ubuntu Server 16.04 LTS.
The honeypot daemons as well as other support components being used have been paravirtualized using &lt;a href=&quot;http://docker.io&quot;&gt;docker&lt;/a&gt;.
This allows us to run multiple honeypot daemons on the same network interface without problems and thus making the entire system very low maintenance. &lt;br /&gt;The encapsulation of the honeypot daemons in docker provides a good isolation of the runtime environments and easy update mechanisms.&lt;/p&gt;

&lt;p&gt;In T-Pot we combine the dockerized honeypots
&lt;a href=&quot;http://conpot.org/&quot;&gt;conpot&lt;/a&gt;,
&lt;a href=&quot;http://www.micheloosterhof.com/cowrie/&quot;&gt;cowrie&lt;/a&gt;,
&lt;a href=&quot;https://github.com/DinoTools/dionaea&quot;&gt;dionaea&lt;/a&gt;,
&lt;a href=&quot;https://github.com/schmalle/ElasticPot&quot;&gt;elasticpot&lt;/a&gt;,
&lt;a href=&quot;https://github.com/dtag-dev-sec/emobility&quot;&gt;emobility&lt;/a&gt;,
&lt;a href=&quot;http://glastopf.org/&quot;&gt;glastopf&lt;/a&gt; and
&lt;a href=&quot;https://github.com/armedpot/honeytrap/&quot;&gt;honeytrap&lt;/a&gt; with
&lt;a href=&quot;http://suricata-ids.org/&quot;&gt;suricata&lt;/a&gt; a Network Security Monitoring engine and the
&lt;a href=&quot;https://www.elastic.co/videos&quot;&gt;ELK stack&lt;/a&gt; to beautifully visualize all the events captured by T-Pot. Events will be correlated by our own data submission tool &lt;a href=&quot;https://github.com/dtag-dev-sec/ews&quot;&gt;ewsposter&lt;/a&gt; which also supports Honeynet project hpfeeds honeypot data sharing.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dtag-dev-sec/tpotce/master/doc/architecture.png&quot; alt=&quot;Architecture&quot; /&gt;&lt;/p&gt;

&lt;p&gt;All data in docker is volatile. Once a docker container crashes, all data produced within its environment is gone and a fresh instance is restarted. Hence, for some data that needs to be persistent, i.e. config files, we have a persistent storage &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/data/&lt;/code&gt;&lt;/strong&gt; on the host in order to make it available and persistent across container or system restarts.&lt;br /&gt;
Important log data is now also stored outside the container in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/data/&amp;lt;container-name&amp;gt;&lt;/code&gt; allowing easy access to logs from within the host and. The &lt;strong&gt;systemd&lt;/strong&gt; scripts have been adjusted to support storing data on the host either volatile (&lt;em&gt;default&lt;/em&gt;) or persistent (adjust individual systemd scripts in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/systemd/system&lt;/code&gt; or use a global setting in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/usr/bin/clear.sh&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Basically, what happens when the system is booted up is the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;start host system&lt;/li&gt;
  &lt;li&gt;start all the necessary services (i.e. docker-engine, reverse proxy, etc.)&lt;/li&gt;
  &lt;li&gt;start all docker containers (honeypots, nms, elk)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Within the T-Pot project, we provide all the tools and documentation necessary to build your own honeypot system and contribute to our &lt;a href=&quot;http://sicherheitstacho.eu/?peers=communityPeers&quot;&gt;community data view&lt;/a&gt;, a separate channel on our  &lt;a href=&quot;http://sicherheitstacho.eu&quot;&gt;Sicherheitstacho&lt;/a&gt; that is powered by T-Pot community data.&lt;/p&gt;

&lt;p&gt;The source code and configuration files are stored in individual GitHub repositories, which are linked below. The docker images are tailored to be run in this environment. If you want to run the docker images separately, make sure you study the upstart scripts, as they provide an insight on how we configured them.&lt;/p&gt;

&lt;p&gt;The individual docker configurations etc. we used can be found here:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/conpot&quot;&gt;conpot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/cowrie&quot;&gt;cowrie&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/dionaea&quot;&gt;dionaea&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/elasticpot&quot;&gt;elasticpot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/elk&quot;&gt;elk-stack&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/emobility&quot;&gt;emobility&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/glastopf&quot;&gt;glastopf&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/honeytrap&quot;&gt;honeytrap&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/netdata&quot;&gt;netdata&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/ui-for-docker&quot;&gt;portainer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/suricata&quot;&gt;suricata&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;requirements&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;system-requirements&quot;&gt;System Requirements&lt;/h1&gt;
&lt;p&gt;Depending on your installation type, whether you install on &lt;a href=&quot;#hardware&quot;&gt;real hardware&lt;/a&gt; or in a &lt;a href=&quot;#vm&quot;&gt;virtual machine&lt;/a&gt;, make sure your designated T-Pot system meets the following requirements:&lt;/p&gt;

&lt;h5 id=&quot;t-pot-installation-cowrie-dionaea-elasticpot-glastopf-honeytrap-elk-suricatap0f--tools&quot;&gt;T-Pot Installation (Cowrie, Dionaea, ElasticPot, Glastopf, Honeytrap, ELK, Suricata+P0f &amp;amp; Tools)&lt;/h5&gt;
&lt;p&gt;When installing the T-Pot ISO image, make sure the target system (physical/virtual) meets the following minimum requirements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;4 GB RAM (6-8 GB recommended)&lt;/li&gt;
  &lt;li&gt;64 GB disk (128 GB SSD recommended)&lt;/li&gt;
  &lt;li&gt;Network via DHCP&lt;/li&gt;
  &lt;li&gt;A working internet connection&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;sensor-installation-cowrie-dionaea-elasticpot-glastopf-honeytrap&quot;&gt;Sensor Installation (Cowrie, Dionaea, ElasticPot, Glastopf, Honeytrap)&lt;/h5&gt;
&lt;p&gt;When installing the T-Pot ISO image, make sure the target system (physical/virtual) meets the following minimum requirements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;3 GB RAM (4-6 GB recommended)&lt;/li&gt;
  &lt;li&gt;64 GB disk (64 GB SSD recommended)&lt;/li&gt;
  &lt;li&gt;Network via DHCP&lt;/li&gt;
  &lt;li&gt;A working internet connection&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;industrial-installation-conpot-emobility-elk-suricatap0f--tools&quot;&gt;Industrial Installation (ConPot, eMobility, ELK, Suricata+P0f &amp;amp; Tools)&lt;/h5&gt;
&lt;p&gt;When installing the T-Pot ISO image, make sure the target system (physical/virtual) meets the following minimum requirements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;4 GB RAM (8 GB recommended)&lt;/li&gt;
  &lt;li&gt;64 GB disk (128 GB SSD recommended)&lt;/li&gt;
  &lt;li&gt;Network via DHCP&lt;/li&gt;
  &lt;li&gt;A working internet connection&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;everything-installation-everything-all-of-the-above&quot;&gt;Everything Installation (Everything, all of the above)&lt;/h5&gt;
&lt;p&gt;When installing the T-Pot ISO image, make sure the target system (physical/virtual) meets the following minimum requirements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;8 GB RAM&lt;/li&gt;
  &lt;li&gt;128 GB disk or larger (128 GB SSD or larger recommended)&lt;/li&gt;
  &lt;li&gt;Network via DHCP&lt;/li&gt;
  &lt;li&gt;A working internet connection&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;installation&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;installation&quot;&gt;Installation&lt;/h1&gt;
&lt;p&gt;The installation of T-Pot is straight forward. Please be advised that you should have an internet connection up and running as all all the docker images for the chosen installation type need to be pulled from docker hub.&lt;/p&gt;

&lt;p&gt;Firstly, decide if you want to download our prebuilt installation ISO image from &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce/releases&quot;&gt;GitHub&lt;/a&gt; &lt;strong&gt;&lt;em&gt;or&lt;/em&gt;&lt;/strong&gt; &lt;a href=&quot;#createiso&quot;&gt;create it yourself&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Secondly, decide where you want to let the system run: &lt;a href=&quot;#hardware&quot;&gt;real hardware&lt;/a&gt; or in a &lt;a href=&quot;#vm&quot;&gt;virtual machine&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;prebuilt&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;prebuilt-iso-image&quot;&gt;Prebuilt ISO Image&lt;/h2&gt;
&lt;p&gt;We provide an installation ISO image for download (~50MB), which is created using the same &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce&quot;&gt;tool&lt;/a&gt; you can use yourself in order to create your own image. It will basically just save you some time downloading components and creating the ISO image.
You can download the prebuilt installation image from &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce/releases&quot;&gt;GitHub&lt;/a&gt; and jump to the &lt;a href=&quot;#vm&quot;&gt;installation&lt;/a&gt; section.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;createiso&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;create-your-own-iso-image&quot;&gt;Create your own ISO Image&lt;/h2&gt;
&lt;p&gt;For transparency reasons and to give you the ability to customize your install, we provide you the &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce&quot;&gt;ISO Creator&lt;/a&gt; that enables you to create your own ISO installation image.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Requirements to create the ISO image:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Ubuntu 16.04 LTS or newer as host system (others &lt;em&gt;may&lt;/em&gt; work, but remain untested)&lt;/li&gt;
  &lt;li&gt;4GB of free memory&lt;/li&gt;
  &lt;li&gt;32GB of free storage&lt;/li&gt;
  &lt;li&gt;A working internet connection&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;How to create the ISO image:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Clone the repository and enter it.&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; git clone https://github.com/dtag-dev-sec/tpotce.git
 cd tpotce
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Invoke the script that builds the ISO image.
The script will download and install dependencies necessary to build the image on the invoking machine. It will further download the ubuntu network installer image (~50MB) which T-Pot is based on.&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; sudo ./makeiso.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;After a successful build, you will find the ISO image &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tpot.iso&lt;/code&gt; along with a SHA256 checksum &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tpot.sha256&lt;/code&gt;in your directory.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;vm&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;running-in-vm&quot;&gt;Running in VM&lt;/h2&gt;
&lt;p&gt;You may want to run T-Pot in a virtualized environment. The virtual system configuration depends on your virtualization provider.&lt;/p&gt;

&lt;p&gt;We successfully tested T-Pot with &lt;a href=&quot;https://www.virtualbox.org&quot;&gt;VirtualBox&lt;/a&gt; and &lt;a href=&quot;http://www.vmware.com&quot;&gt;VMWare&lt;/a&gt; with just little modifications to the default machine configurations.&lt;/p&gt;

&lt;p&gt;It is important to make sure you meet the &lt;a href=&quot;#requirements&quot;&gt;system requirements&lt;/a&gt; and assign a virtual harddisk &amp;gt;=64 GB, &amp;gt;=4 GB RAM and bridged networking to T-Pot.&lt;/p&gt;

&lt;p&gt;You need to enable promiscuous mode for the network interface for suricata to work properly. Make sure you enable it during configuration.&lt;/p&gt;

&lt;p&gt;If you want to use a wifi card as primary NIC for T-Pot, please remind that not all network interface drivers support all wireless cards. E.g. in VirtualBox, you then have to choose the &lt;em&gt;“MT SERVER”&lt;/em&gt; model of the NIC.&lt;/p&gt;

&lt;p&gt;Lastly, mount the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tpot.iso&lt;/code&gt; ISO to the VM and continue with the installation.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;You can now jump &lt;a href=&quot;#firstrun&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;hardware&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;running-on-hardware&quot;&gt;Running on Hardware&lt;/h2&gt;
&lt;p&gt;If you decide to run T-Pot on dedicated hardware, just follow these steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Burn a CD from the ISO image or make a bootable USB stick using the image. &lt;br /&gt;
Whereas most CD burning tools allow you to burn from ISO images, the procedure to create a bootable USB stick from an ISO image depends on your system. There are various Windows GUI tools available, e.g. &lt;a href=&quot;http://www.ubuntu.com/download/desktop/create-a-usb-stick-on-windows&quot;&gt;this tip&lt;/a&gt; might help you.&lt;br /&gt; On &lt;a href=&quot;http://askubuntu.com/questions/59551/how-to-burn-a-iso-to-a-usb-device&quot;&gt;Linux&lt;/a&gt; or &lt;a href=&quot;http://www.ubuntu.com/download/desktop/create-a-usb-stick-on-mac-osx&quot;&gt;MacOS&lt;/a&gt; you can use the tool &lt;em&gt;dd&lt;/em&gt; or create the USB stick with T-Pot’s &lt;a href=&quot;https://github.com/dtag-dev-sec&quot;&gt;ISO Creator&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Boot from the USB stick and install.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;Please note&lt;/em&gt;: We will ensure the compatibility with the Intel NUC platform, as we really like the form factor, looks and build quality.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;firstrun&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;first-run&quot;&gt;First Run&lt;/h2&gt;
&lt;p&gt;The installation requires very little interaction, only some locales and keyboard settings have to be answered. Everything else will be configured automatically. The system will reboot two times. Make sure it can access the internet as it needs to download the updates and the dockerized honeypot components. Depending on your network connection and the chosen installation type, the installation may take some time. During our tests (50Mbit down, 10Mbit up), the installation is usually finished within &amp;lt;=30 minutes.&lt;/p&gt;

&lt;p&gt;Once the installation is finished, the system will automatically reboot and you will be presented with the T-Pot login screen. The user credentials for the first login are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;user: &lt;strong&gt;tsec&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;pass: &lt;strong&gt;password you chose during the installation&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All honeypot services are preconfigured and are starting automatically.&lt;/p&gt;

&lt;p&gt;You can also login from your browser: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://&amp;lt;your.ip&amp;gt;:64297&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;user: &lt;strong&gt;user you chose during the installation&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;pass: &lt;strong&gt;password you chose during the installation&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;placement&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;system-placement&quot;&gt;System Placement&lt;/h1&gt;
&lt;p&gt;Make sure your system is reachable through the internet. Otherwise it will not capture any attacks, other than the ones from your hostile internal network! We recommend you put it in an unfiltered zone, where all TCP and UDP traffic is forwarded to T-Pot’s network interface.&lt;/p&gt;

&lt;p&gt;If you are behind a NAT gateway (e.g. home router), here is a list of ports that should be forwarded to T-Pot.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Honeypot&lt;/th&gt;
      &lt;th&gt;Transport&lt;/th&gt;
      &lt;th&gt;Forwarded ports&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;conpot&lt;/td&gt;
      &lt;td&gt;TCP&lt;/td&gt;
      &lt;td&gt;1025, 50100&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cowrie&lt;/td&gt;
      &lt;td&gt;TCP&lt;/td&gt;
      &lt;td&gt;22, 23&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;dionaea&lt;/td&gt;
      &lt;td&gt;TCP&lt;/td&gt;
      &lt;td&gt;21, 42, 135, 443, 445, 1433, 1723, 1883, 1900, 3306, 5060, 5061, 8081, 11211&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;dionaea&lt;/td&gt;
      &lt;td&gt;UDP&lt;/td&gt;
      &lt;td&gt;69, 5060&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;elasticpot&lt;/td&gt;
      &lt;td&gt;TCP&lt;/td&gt;
      &lt;td&gt;9200&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;emobility&lt;/td&gt;
      &lt;td&gt;TCP&lt;/td&gt;
      &lt;td&gt;8080&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;glastopf&lt;/td&gt;
      &lt;td&gt;TCP&lt;/td&gt;
      &lt;td&gt;80&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;honeytrap&lt;/td&gt;
      &lt;td&gt;TCP&lt;/td&gt;
      &lt;td&gt;25, 110, 139, 3389, 4444, 4899, 5900, 21000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Basically, you can forward as many TCP ports as you want, as honeytrap dynamically binds any TCP port that is not covered by the other honeypot daemons.&lt;/p&gt;

&lt;p&gt;In case you need external SSH access, forward TCP port 64295 to T-Pot, see below.
In case you need external web access, forward TCP port 64297 to T-Pot, see below.&lt;/p&gt;

&lt;p&gt;T-Pot requires outgoing http and https connections for updates (ubuntu, docker) and attack submission (ewsposter, hpfeeds).&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;options&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;options&quot;&gt;Options&lt;/h1&gt;
&lt;p&gt;The system is designed to run without any interaction or maintenance and automatically contribute to the community.&lt;br /&gt;
We know, for some this may not be enough. So here come some ways to further inspect the system and change configuration parameters.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;ssh&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;ssh-and-web-access&quot;&gt;SSH and web access&lt;/h2&gt;
&lt;p&gt;By default, the SSH daemon only allows access on &lt;strong&gt;tcp/64295&lt;/strong&gt; with a user / password combination from RFC1918 networks. However, if you want to be able to login remotely via SSH you need to put your SSH keys on the host as described below.&lt;br /&gt;
It is configured to prevent password login from official IP addresses and pubkey-authentication must be used. Copy your SSH keyfile to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/home/tsec/.ssh/authorized_keys&lt;/code&gt; and set the appropriate permissions (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chmod 600 authorized_keys&lt;/code&gt;) as well as the correct ownership (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chown tsec:tsec authorized_keys&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;If you do not have a SSH client at hand and still want to access the machine via SSH you can do so by directing your browser to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://&amp;lt;your.ip&amp;gt;:64297&lt;/code&gt;, enter&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;user: &lt;strong&gt;user you chose during the installation&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;pass: &lt;strong&gt;password you chose during the installation&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and choose &lt;strong&gt;WebSSH&lt;/strong&gt; from the navigation bar. You will be prompted to allow access for this connection and enter the password for the user &lt;strong&gt;tsec&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dtag-dev-sec/tpotce/master/doc/webssh.png&quot; alt=&quot;WebSSH&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;kibana&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;kibana-dashboard&quot;&gt;Kibana Dashboard&lt;/h2&gt;
&lt;p&gt;Just open a web browser and access and connect to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://&amp;lt;your.ip&amp;gt;:64297&lt;/code&gt;, enter&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;user: &lt;strong&gt;user you chose during the installation&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;pass: &lt;strong&gt;password you chose during the installation&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and the &lt;strong&gt;Kibana dashboard&lt;/strong&gt; will automagically load. The Kibana dashboard can be customized to fit your needs. By default, we haven’t added any filtering, because the filters depend on your setup. E.g. you might want to filter out your incoming administrative ssh connections and connections to update servers.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dtag-dev-sec/tpotce/master/doc/dashboard.png&quot; alt=&quot;Dashbaord&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;tools&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;tools&quot;&gt;Tools&lt;/h2&gt;
&lt;p&gt;We included some web based management tools to improve and ease up on your daily tasks.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dtag-dev-sec/tpotce/master/doc/headplugin.png&quot; alt=&quot;ES Head Plugin&quot; /&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/dtag-dev-sec/tpotce/master/doc/dockerui.png&quot; alt=&quot;UI-For-Docker&quot; /&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/dtag-dev-sec/tpotce/master/doc/netdata.png&quot; alt=&quot;Netdata&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;maintenance&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;maintenance&quot;&gt;Maintenance&lt;/h2&gt;
&lt;p&gt;As mentioned before, the system was designed to be low maintenance. Basically, there is nothing you have to do but let it run. If one of the dockerized daemon fails, it will restart. If this fails, the regarding upstart job will be restarted.&lt;/p&gt;

&lt;p&gt;If you run into any problems, a reboot may fix it. ;)&lt;/p&gt;

&lt;p&gt;If new versions of the components involved appear, we will test them and build new docker images. Those new docker images will be pushed to docker hub and downloaded to T-Pot and activated accordingly.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;submission&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;community-data-submission&quot;&gt;Community Data Submission&lt;/h2&gt;
&lt;p&gt;We provide T-Pot in order to make it accessible to all parties interested in honeypot deployment. By default, the data captured is submitted to a community backend. This community backend uses the data to feed a &lt;a href=&quot;http://sicherheitstacho.eu/?peers=communityPeers&quot;&gt;community data view&lt;/a&gt;, a separate channel on our own &lt;a href=&quot;http://sicherheitstacho.eu&quot;&gt;Sicherheitstacho&lt;/a&gt;, which is powered by our own set of honeypots.
You may opt out the submission to our community server by disabling it in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[EWS]&lt;/code&gt;-section of the config file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/data/ews/conf/ews.cfg&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Further we support &lt;a href=&quot;https://github.com/rep/hpfeeds&quot;&gt;hpfeeds&lt;/a&gt;. It is disabled by default since you need to supply a channel you want to post to and enter your user credentials. To enable hpfeeds, edit the config file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/data/ews/conf/ews.cfg&lt;/code&gt;, section &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[HPFEED]&lt;/code&gt; and set it to true.&lt;/p&gt;

&lt;p&gt;Data is submitted in a structured ews-format, a XML stucture. Hence, you can parse out the information that is relevant to you.&lt;/p&gt;

&lt;p&gt;We encourage you not to disable the data submission as it is the main purpose of the community approach - as you all know &lt;strong&gt;sharing is caring&lt;/strong&gt; 😍&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/data/ews/conf/ews.cfg&lt;/code&gt;&lt;/em&gt; file contains many configuration parameters required for the system to run. You can - if you want - add an email address, that will be included with your submissions, in order to be able to identify your requests later. Further you can add a proxy.
Please do not change anything other than those settings and only if you absolutely need to. Otherwise, the system may not work as expected.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;roadmap&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;roadmap&quot;&gt;Roadmap&lt;/h1&gt;
&lt;p&gt;As with every development there is always room for improvements …&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Bump ELK-stack to 5.0&lt;/li&gt;
  &lt;li&gt;Move from Glastopf to SNARE&lt;/li&gt;
  &lt;li&gt;Documentation 😎&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some features may be provided with updated docker images, others may require some hands on from your side.&lt;/p&gt;

&lt;p&gt;You are always invited to participate in development on our &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce&quot;&gt;GitHub&lt;/a&gt; page.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;disclaimer&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;disclaimer&quot;&gt;Disclaimer&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;We don’t have access to your system. So we cannot remote-assist when you break your configuration. But you can simply reinstall.&lt;/li&gt;
  &lt;li&gt;The software was designed with best effort security, not to be in stealth mode. Because then, we probably would not be able to provide those kind of honeypot services.&lt;/li&gt;
  &lt;li&gt;You install and you run within your responsibility. Choose your deployment wisely as a system compromise can never be ruled out.&lt;/li&gt;
  &lt;li&gt;Honeypots should - by design - not host any sensitive data. Make sure you don’t add any.&lt;/li&gt;
  &lt;li&gt;By default, your data is submitted to the community dashboard. You can disable this in the config. But hey, wouldn’t it be better to contribute to the community?&lt;/li&gt;
  &lt;li&gt;By default, hpfeeds submission is disabled. You can enable it in the config section for hpfeeds. This is due to the nature of hpfeeds. We do not want to spam any channel, so you can choose where to post your data and who to share it with.&lt;/li&gt;
  &lt;li&gt;Malware submission is enabled by default but malware is currently not processed on the submission backend. This may be added later, but can also be disabled in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ews.cfg&lt;/code&gt; config file.&lt;/li&gt;
  &lt;li&gt;The system restarts the docker containers every night to avoid clutter and reduce disk consumption. &lt;em&gt;All data in the container is then reset.&lt;/em&gt; The data displayed in kibana is kept for &amp;lt;=90 days.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;faq&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;faq&quot;&gt;FAQ&lt;/h1&gt;
&lt;p&gt;Please report any issues or questions on our &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce/issues&quot;&gt;GitHub issue list&lt;/a&gt;, so the community can participate.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;contact&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;contact&quot;&gt;Contact&lt;/h1&gt;
&lt;p&gt;We provide the software &lt;strong&gt;as is&lt;/strong&gt; in a Community Edition format. T-Pot is designed to run out of the box and with zero maintenance involved. &lt;br /&gt;
We hope you understand that we cannot provide support on an individual basis. We will try to address questions, bugs and problems on our &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce/issues&quot;&gt;GitHub issue list&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For general feedback you can write to cert @ telekom.de.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;licenses&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;licenses&quot;&gt;Licenses&lt;/h1&gt;
&lt;p&gt;The software that T-Pot is built on, uses the following licenses.
&lt;br /&gt;GPLv2: &lt;a href=&quot;https://github.com/mushorg/conpot/blob/master/LICENSE.txt&quot;&gt;conpot (by Lukas Rist)&lt;/a&gt;, &lt;a href=&quot;https://github.com/DinoTools/dionaea/blob/master/LICENSE&quot;&gt;dionaea&lt;/a&gt;, &lt;a href=&quot;https://github.com/armedpot/honeytrap/blob/master/LICENSE&quot;&gt;honeytrap (by Tillmann Werner)&lt;/a&gt;, &lt;a href=&quot;http://suricata-ids.org/about/open-source/&quot;&gt;suricata&lt;/a&gt;
&lt;br /&gt;GPLv3: &lt;a href=&quot;https://github.com/schmalle/ElasticPot&quot;&gt;elasticpot (by Markus Schmall)&lt;/a&gt;, &lt;a href=&quot;https://github.com/dtag-dev-sec/emobility/blob/master/LICENSE&quot;&gt;emobility (by Mohamad Sbeiti)&lt;/a&gt;, &lt;a href=&quot;https://github.com/dtag-dev-sec/ews/&quot;&gt;ewsposter (by Markus Schroer)&lt;/a&gt;, &lt;a href=&quot;https://github.com/glastopf/glastopf/blob/master/GPL&quot;&gt;glastopf (by Lukas Rist)&lt;/a&gt;, &lt;a href=&quot;https://github.com/firehol/netdata/blob/master/LICENSE.md&quot;&gt;netdata&lt;/a&gt;
&lt;br /&gt;Apache 2 License: &lt;a href=&quot;https://github.com/elasticsearch/elasticsearch/blob/master/LICENSE.txt&quot;&gt;elasticsearch&lt;/a&gt;, &lt;a href=&quot;https://github.com/elasticsearch/logstash/blob/master/LICENSE&quot;&gt;logstash&lt;/a&gt;, &lt;a href=&quot;https://github.com/elasticsearch/kibana/blob/master/LICENSE.md&quot;&gt;kibana&lt;/a&gt;, [docker] (https://github.com/docker/docker/blob/master/LICENSE), &lt;a href=&quot;https://github.com/mobz/elasticsearch-head/blob/master/LICENCE&quot;&gt;elasticsearch-head&lt;/a&gt;
&lt;br /&gt;MIT License: &lt;a href=&quot;https://github.com/stormpython/tagcloud/blob/master/LICENSE&quot;&gt;tagcloud (by Shelby Sturgis)&lt;/a&gt;, &lt;a href=&quot;https://github.com/stormpython/heatmap/blob/master/LICENSE&quot;&gt;heatmap (by Shelby Sturgis)&lt;/a&gt;, &lt;a href=&quot;https://github.com/krishnasrinivas/wetty/blob/master/LICENSE&quot;&gt;wetty&lt;/a&gt;
&lt;br /&gt;&lt;a href=&quot;https://github.com/micheloosterhof/cowrie/blob/master/doc/COPYRIGHT&quot;&gt;cowrie (copyright disclaimer by Upi Tamminen)&lt;/a&gt;
&lt;br /&gt;&lt;a href=&quot;http://www.ubuntu.com/about/about-ubuntu/licensing&quot;&gt;Ubuntu licensing&lt;/a&gt;
&lt;br /&gt;&lt;a href=&quot;https://github.com/portainer/portainer/blob/develop/LICENSE&quot;&gt;Portainer&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;credits&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;credits&quot;&gt;Credits&lt;/h1&gt;
&lt;p&gt;Without open source and the fruitful development community we are proud to be a part of T-Pot would not have been possible. Our thanks are extended but not limited to the following people and organizations:&lt;/p&gt;

&lt;h3 id=&quot;the-developers-and-development-communities-of&quot;&gt;The developers and development communities of&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mushorg/conpot/graphs/contributors&quot;&gt;conpot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/micheloosterhof/cowrie/graphs/contributors&quot;&gt;cowrie&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/DinoTools/dionaea/graphs/contributors&quot;&gt;dionaea&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/docker/docker/graphs/contributors&quot;&gt;docker&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/schmalle/ElasticPot/graphs/contributors&quot;&gt;elasticpot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/elastic/elasticsearch/graphs/contributors&quot;&gt;elasticsearch&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mobz/elasticsearch-head/graphs/contributors&quot;&gt;elasticsearch-head&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/emobility/graphs/contributors&quot;&gt;emobility&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/armedpot/ewsposter/graphs/contributors&quot;&gt;ewsposter&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mushorg/glastopf/graphs/contributors&quot;&gt;glastopf&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/stormpython/heatmap/graphs/contributors&quot;&gt;heatmap&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/armedpot/honeytrap/graphs/contributors&quot;&gt;honeytrap&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/elastic/kibana/graphs/contributors&quot;&gt;kibana&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/elastic/logstash/graphs/contributors&quot;&gt;logstash&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/firehol/netdata/graphs/contributors&quot;&gt;netdata&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://lcamtuf.coredump.cx/p0f3/&quot;&gt;p0f&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/portainer/portainer/graphs/contributors&quot;&gt;portainer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/inliniac/suricata/graphs/contributors&quot;&gt;suricata&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/stormpython/tagcloud/graphs/contributors&quot;&gt;tagcloud&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.ubuntu.com/&quot;&gt;ubuntu&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/krishnasrinivas/wetty/graphs/contributors&quot;&gt;wetty&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;the-following-companies-and-organizations&quot;&gt;The following companies and organizations&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.canonical.com/&quot;&gt;cannonical&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.docker.com/&quot;&gt;docker&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/&quot;&gt;elastic.io&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.honeynet.org/&quot;&gt;honeynet project&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.intel.com&quot;&gt;intel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;-and-of-course-you-for-joining-the-community&quot;&gt;… and of course &lt;strong&gt;&lt;em&gt;you&lt;/em&gt;&lt;/strong&gt; for joining the community!&lt;/h3&gt;

&lt;p&gt;&lt;a name=&quot;staytuned&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;stay-tuned-&quot;&gt;Stay tuned …&lt;/h1&gt;
&lt;p&gt;We will be releasing a new version of T-Pot about every 6 months.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;funfact&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;fun-fact&quot;&gt;Fun Fact&lt;/h1&gt;

&lt;p&gt;Coffee just does not cut it anymore which is why we needed a different caffeine source and consumed &lt;em&gt;107&lt;/em&gt; bottles of &lt;a href=&quot;https://de.wikipedia.org/wiki/Club-Mate&quot;&gt;Club Mate&lt;/a&gt; during the development of T-Pot 16.10 😇&lt;/p&gt;
</description>
        <pubDate>Mon, 31 Oct 2016 02:33:07 +0100</pubDate>
        <link>http://dtag-dev-sec.github.io//mediator/feature/2016/10/31/t-pot-16.10.html</link>
        <guid isPermaLink="true">http://dtag-dev-sec.github.io//mediator/feature/2016/10/31/t-pot-16.10.html</guid>
        
        <category>featured</category>
        
        
        <category>mediator</category>
        
        <category>feature</category>
        
      </item>
    
      <item>
        <title>T-Pot 16.03 - Enhanced Multi-Honeypot Platform</title>
        <description>&lt;p&gt;Last year we released
&lt;a href=&quot;http://dtag-dev-sec.github.io/mediator/feature/2015/03/17/concept.html&quot;&gt;T-Pot 15.03&lt;/a&gt;
as open source and we received lots of positive feedback and naturally feature requests which encouraged us to continue development and share our work as open source and are proud to present to you …&lt;/p&gt;

&lt;h1 id=&quot;t-pot-1603&quot;&gt;T-Pot 16.03&lt;/h1&gt;

&lt;p&gt;T-Pot 16.03 is based on&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.docker.com/&quot;&gt;docker&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and includes dockerized versions of the following honeypots&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://conpot.org/&quot;&gt;conpot&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.micheloosterhof.com/cowrie/&quot;&gt;cowrie&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/DinoTools/dionaea&quot;&gt;dionaea&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/schmalle/ElasticPot&quot;&gt;elasticpot&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/emobility&quot;&gt;emobility&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://glastopf.org/&quot;&gt;glastopf&lt;/a&gt; and&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/armedpot/honeytrap/&quot;&gt;honeytrap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Furthermore we use the following tools&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://suricata-ids.org/&quot;&gt;suricata&lt;/a&gt; a Network Security Monitoring engine and the&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/videos&quot;&gt;ELK stack&lt;/a&gt; to beautifully visualize all the events captured by T-Pot.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;tldr&quot;&gt;TL;DR&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Meet the &lt;a href=&quot;#requirements&quot;&gt;system requirements&lt;/a&gt;. The T-Pot installation needs at least 4 GB RAM and 64 GB free disk space as well as a working internet connection.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;Download the &lt;a href=&quot;http://community-honeypot.de/tpot.iso&quot;&gt;tpot.iso&lt;/a&gt; or &lt;a href=&quot;#createiso&quot;&gt;create it yourself&lt;/a&gt;.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;Install the system in a &lt;a href=&quot;#vm&quot;&gt;VM&lt;/a&gt; or on &lt;a href=&quot;#hw&quot;&gt;physical hardware&lt;/a&gt; with &lt;a href=&quot;#placement&quot;&gt;internet access&lt;/a&gt;.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;Enjoy your favorite beverage - &lt;a href=&quot;http://sicherheitstacho.eu/?peers=communityPeers&quot;&gt;watch&lt;/a&gt; and &lt;a href=&quot;#kibana&quot;&gt;analyze&lt;/a&gt;.&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;-&lt;/p&gt;

&lt;!--
To Do
We have created a nice [installation video](https://youtu.be/dWbJS_9sFNE) for you in case you run into problems.

In case you already have an Ubuntu 14.04.x running in your datacenter and are unable to install from an ISO image, we have created a [script](http://dtag-dev-sec.github.io/mediator/feature/2015/05/11/t-pot-autoinstall.html) that converts your Ubuntu base install into a full-fledged T-Pot within just a couple of minutes.
--&gt;

&lt;h1 id=&quot;table-of-contents&quot;&gt;Table of Contents&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#changelog&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#concept&quot;&gt;Technical Concept&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#requirements&quot;&gt;System Requirements&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#installation&quot;&gt;Installation&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#prebuilt&quot;&gt;Prebuilt ISO Image&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#createiso&quot;&gt;Create your own ISO Image&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#vm&quot;&gt;Running in a VM&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#hardware&quot;&gt;Running on Hardware&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#firstrun&quot;&gt;First Run&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#placement&quot;&gt;System Placement&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#options&quot;&gt;Options&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#ssh&quot;&gt;Enabling SSH&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#kibana&quot;&gt;Kibana Dashboard&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#maintenance&quot;&gt;Maintenance&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#submission&quot;&gt;Community Data Submission&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#roadmap&quot;&gt;Roadmap&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#disclaimer&quot;&gt;Disclaimer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#faq&quot;&gt;FAQ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#contact&quot;&gt;Contact&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#licenses&quot;&gt;Licenses&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#credits&quot;&gt;Credits&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#staytuned&quot;&gt;Stay tuned&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#funfact&quot;&gt;Fun Fact&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;background&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;changelog&quot;&gt;Changelog&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Docker&lt;/strong&gt; was updated to the latest &lt;strong&gt;1.10.x&lt;/strong&gt; release&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;ELK&lt;/strong&gt; was updated to the latest &lt;strong&gt;Kibana 4.4.x&lt;/strong&gt;, &lt;strong&gt;Elasticsearch 2.2.x&lt;/strong&gt; and &lt;strong&gt;Logstash 2.2.x&lt;/strong&gt; releases.&lt;/li&gt;
  &lt;li&gt;More than &lt;strong&gt;100 Visualizations&lt;/strong&gt; compiled to 12 individual &lt;strong&gt;Dashboards&lt;/strong&gt; for every honeypot now allow you to monitor the &lt;em&gt;honeypot events&lt;/em&gt; captured on your T-Pot installation; a huge improvement over T-Pot 15.03 which was only capable of showing Suricata NSM events.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Thanks to Kibana 4.x SSH port forwarding can now utilize any user defined local port&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  ssh -p 64295 -l tsec -N -L4711:127.0.0.1:64296 &amp;lt;yourHoneypotIPaddress&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;IP to AS Lookups&lt;/strong&gt; are now provided within Kibana dashboard, as well as some smart links to research IP reputation, Suricata Rules or AS information when in Discover mode.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;ElasticSearch&lt;/strong&gt; indexes will now be kept for &amp;lt;=90 days, the time period may be adjusted in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/crontab&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Suricata&lt;/strong&gt; was updated to the latest &lt;strong&gt;3.0&lt;/strong&gt; version including the latest &lt;strong&gt;Emerging Threats&lt;/strong&gt; community ruleset.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;P0f&lt;/strong&gt; is now part of the Suricata container, passively fingerprinting and guessing the involving OS.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Conpot&lt;/strong&gt;, &lt;strong&gt;ElasticPot&lt;/strong&gt; and &lt;strong&gt;eMobility&lt;/strong&gt; are being introduced as new honeypots in T-Pot.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Cowrie&lt;/strong&gt; replaces &lt;strong&gt;Kippo&lt;/strong&gt; as SSH honeypot since it offers huge improvements over Kippo such as &lt;em&gt;(SFTP-support, exec-support, SSH-tunneling, advanced logging, JSON logging, etc.)&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;With &lt;strong&gt;Conpot&lt;/strong&gt; and &lt;strong&gt;eMobility&lt;/strong&gt; we are now offering an experimental &lt;strong&gt;Industrial Installation Option&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;T-Pot Image Creator&lt;/strong&gt; was completely rewritten to offer a more convenient experience for creating your personal T-Pot image (&lt;em&gt;802.1x authentication, proxy support, public key for SSH and pre defined NTP server&lt;/em&gt;). Docker images can be preloaded using the experimental &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;getimages.sh&lt;/code&gt;&lt;/strong&gt; script and will be exported to the installation image.&lt;/li&gt;
  &lt;li&gt;T-Pot itself and all of its containers are now based on &lt;strong&gt;Ubuntu Server 14.04.4 LTS&lt;/strong&gt; and thus automatically benefit from the latest features introduced by Cannonical for Ubuntu Server.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Docker&lt;/strong&gt; containers are now storing important log data outside the container in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/data/&amp;lt;container-name&amp;gt;&lt;/code&gt; allowing easy access from the host and improving container startup and restart speed.&lt;/li&gt;
  &lt;li&gt;The &lt;strong&gt;upstart&lt;/strong&gt; scripts have been rewritten to support storing data on the host either volatile (&lt;em&gt;default&lt;/em&gt;) or persistent (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/data/persistence.on&lt;/code&gt;).&lt;/li&gt;
  &lt;li&gt;Depending on the honeypot &lt;strong&gt;EWS-Poster&lt;/strong&gt; now supports extracting some logging information as JSON.&lt;/li&gt;
  &lt;li&gt;The &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/usr/bin/backup_elk.sh&lt;/code&gt;&lt;/strong&gt; allows you to backup all ElasticSearch indexes including &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.kibana&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;logstash&lt;/code&gt; which contain all information to restore your data on a freshly installed machine simply by entering &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tar xvfz &amp;lt;backup-name&amp;gt;.tgz -C /&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;The &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;enable_ssh.sh&lt;/code&gt;&lt;/strong&gt; script has been removed and is now part of a more convenient &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2fa_enable.sh&lt;/code&gt;&lt;/strong&gt; script.&lt;/li&gt;
  &lt;li&gt;Size limits for the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/data&lt;/code&gt; have been lifted and swap space is now 8 GB.&lt;/li&gt;
  &lt;li&gt;The number of &lt;strong&gt;installation reboots&lt;/strong&gt; has been reduced to &lt;strong&gt;2&lt;/strong&gt;. The first to finish the initial Ubuntu Server installation and the second after setting up T-Pot and its dependencies.&lt;/li&gt;
  &lt;li&gt;Some packages are now be installed directly from the installation image instead of downloading them.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;[Update 20160313]&lt;/strong&gt; - T-Pot host &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/var/log/syslog&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/var/log/auth.log&lt;/code&gt; will now be forwarded to the ELK-stack.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;concept&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;technical-concept&quot;&gt;Technical Concept&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
T-Pot is based on Ubuntu Server 14.04.4 LTS.
The honeypot daemons as well as other support components being used have been paravirtualized using &lt;a href=&quot;http://docker.io&quot;&gt;docker&lt;/a&gt;.
This allowed us to run multiple honeypot daemons on the same network interface without problems make the entire system very low maintenance. &lt;br /&gt;The encapsulation of the honeypot daemons in docker provides a good isolation of the runtime environments and easy update mechanisms.&lt;/p&gt;

&lt;p&gt;In T-Pot we combine the dockerized honeypots
&lt;a href=&quot;http://conpot.org/&quot;&gt;conpot&lt;/a&gt;,
&lt;a href=&quot;http://www.micheloosterhof.com/cowrie/&quot;&gt;cowrie&lt;/a&gt;,
&lt;a href=&quot;https://github.com/DinoTools/dionaea&quot;&gt;dionaea&lt;/a&gt;,
&lt;a href=&quot;https://github.com/schmalle/ElasticPot&quot;&gt;elasticpot&lt;/a&gt;,
&lt;a href=&quot;https://github.com/dtag-dev-sec/emobility&quot;&gt;emobility&lt;/a&gt;,
&lt;a href=&quot;http://glastopf.org/&quot;&gt;glastopf&lt;/a&gt; and
&lt;a href=&quot;https://github.com/armedpot/honeytrap/&quot;&gt;honeytrap&lt;/a&gt; with
&lt;a href=&quot;http://suricata-ids.org/&quot;&gt;suricata&lt;/a&gt; a Network Security Monitoring engine and the
&lt;a href=&quot;https://www.elastic.co/videos&quot;&gt;ELK stack&lt;/a&gt; to beautifully visualize all the events captured by T-Pot. Events will be correlated by our own data submission tool &lt;a href=&quot;https://github.com/dtag-dev-sec/ews&quot;&gt;ewsposter&lt;/a&gt; which also supports Honeynet project hpfeeds honeypot data sharing.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dtag-dev-sec/tpotce/master/doc/architecture.png&quot; alt=&quot;Architecture&quot; /&gt;&lt;/p&gt;

&lt;p&gt;All data in docker is volatile. Once a docker container crashes, all data produced within its environment is gone and a fresh instance is restarted. Hence, for some data that needs to be persistent, i.e. config files, we have a persistent storage &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/data/&lt;/code&gt;&lt;/strong&gt; on the host in order to make it available and persistent across container or system restarts.&lt;br /&gt;
Important log data is now also stored outside the container in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/data/&amp;lt;container-name&amp;gt;&lt;/code&gt; allowing easy access to logs from within the host and. The &lt;strong&gt;upstart&lt;/strong&gt; scripts have been adjusted to support storing data on the host either volatile (&lt;em&gt;default&lt;/em&gt;) or persistent (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/data/persistence.on&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Basically, what happens when the system is booted up is the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;start host system&lt;/li&gt;
  &lt;li&gt;start all the necessary services (i.e. docker-engine)&lt;/li&gt;
  &lt;li&gt;start all docker containers (honeypots, nms, elk)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Within the T-Pot project, we provide all the tools and documentation necessary to build your own honeypot system and contribute to our &lt;a href=&quot;http://sicherheitstacho.eu/?peers=communityPeers&quot;&gt;community data view&lt;/a&gt;, a separate channel on our  &lt;a href=&quot;http://sicherheitstacho.eu&quot;&gt;Sicherheitstacho&lt;/a&gt; that is powered by T-Pot community data.&lt;/p&gt;

&lt;p&gt;The source code and configuration files are stored in individual GitHub repositories, which are linked below. The docker images are tailored to be run in this environment. If you want to run the docker images separately, make sure you study the upstart scripts, as they provide an insight on how we configured them.&lt;/p&gt;

&lt;p&gt;The individual docker configurations etc. we used can be found here:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/conpot&quot;&gt;conpot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/cowrie&quot;&gt;cowrie&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/dionaea&quot;&gt;dionaea&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/elasticpot&quot;&gt;elasticpot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/elk&quot;&gt;elk-stack&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/emobility&quot;&gt;emobility&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/glastopf&quot;&gt;glastopf&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/honeytrap&quot;&gt;honeytrap&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/suricata&quot;&gt;suricata&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;requirements&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;system-requirements&quot;&gt;System Requirements&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
Depending on your installation type, whether you install on &lt;a href=&quot;#hardware&quot;&gt;real hardware&lt;/a&gt; or in a &lt;a href=&quot;#vm&quot;&gt;virtual machine&lt;/a&gt;, make sure your designated T-Pot system meets the following requirements:&lt;/p&gt;

&lt;h5 id=&quot;t-pot-installation-cowrie-dionaea-elasticpot-glastopf-honeytrap-elk-suricatap0f&quot;&gt;T-Pot Installation (Cowrie, Dionaea, ElasticPot, Glastopf, Honeytrap, ELK, Suricata+P0f)&lt;/h5&gt;
&lt;p&gt;When installing the T-Pot ISO image, make sure the target system (physical/virtual) meets the following minimum requirements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;4 GB RAM (6-8 GB recommended)&lt;/li&gt;
  &lt;li&gt;64 GB disk (128 GB SSD recommended)&lt;/li&gt;
  &lt;li&gt;Network via DHCP&lt;/li&gt;
  &lt;li&gt;A working internet connection&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;sensor-installation-cowrie-dionaea-elasticpot-glastopf-honeytrap&quot;&gt;Sensor Installation (Cowrie, Dionaea, ElasticPot, Glastopf, Honeytrap)&lt;/h5&gt;
&lt;p&gt;This installation type is currently only available via &lt;a href=&quot;https://github.com/dtag-dev-sec&quot;&gt;ISO Creator&lt;/a&gt;.
When installing the T-Pot ISO image, make sure the target system (physical/virtual) meets the following minimum requirements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;3 GB RAM (4-6 GB recommended)&lt;/li&gt;
  &lt;li&gt;64 GB disk (64 GB SSD recommended)&lt;/li&gt;
  &lt;li&gt;Network via DHCP&lt;/li&gt;
  &lt;li&gt;A working internet connection&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;industrial-installation-conpot-emobility-elk-suricatap0f&quot;&gt;Industrial Installation (ConPot, eMobility, ELK, Suricata+P0f)&lt;/h5&gt;
&lt;p&gt;This installation type is currently only available via &lt;a href=&quot;https://github.com/dtag-dev-sec&quot;&gt;ISO Creator&lt;/a&gt; and remains experimental.
When installing the T-Pot ISO image, make sure the target system (physical/virtual) meets the following minimum requirements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;4 GB RAM (8 GB recommended)&lt;/li&gt;
  &lt;li&gt;64 GB disk (128 GB SSD recommended)&lt;/li&gt;
  &lt;li&gt;Network via DHCP&lt;/li&gt;
  &lt;li&gt;A working internet connection&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;everything-installation-everything&quot;&gt;Everything Installation (Everything)&lt;/h5&gt;
&lt;p&gt;This installation type is currently only available via &lt;a href=&quot;https://github.com/dtag-dev-sec&quot;&gt;ISO Creator&lt;/a&gt;.
When installing the T-Pot ISO image, make sure the target system (physical/virtual) meets the following minimum requirements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;8 GB RAM&lt;/li&gt;
  &lt;li&gt;128 GB disk or larger (128 GB SSD or larger recommended)&lt;/li&gt;
  &lt;li&gt;Network via DHCP&lt;/li&gt;
  &lt;li&gt;A working internet connection&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;installation&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;installation&quot;&gt;Installation&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
The installation of T-Pot is straight forward. Please be advised that you should have an internet connection up and running as all all the docker images for the chosen installation type need to be pulled from docker hub.&lt;/p&gt;

&lt;p&gt;Firstly, decide if you want to download our prebuilt installation ISO image &lt;a href=&quot;http://community-honeypot.de/tpot.iso&quot;&gt;tpot.iso&lt;/a&gt; &lt;strong&gt;&lt;em&gt;or&lt;/em&gt;&lt;/strong&gt; &lt;a href=&quot;#createiso&quot;&gt;create it yourself&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Secondly, decide where you want to let the system run: &lt;a href=&quot;#hardware&quot;&gt;real hardware&lt;/a&gt; or in a &lt;a href=&quot;#vm&quot;&gt;virtual machine&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;prebuilt&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;prebuilt-iso-image&quot;&gt;Prebuilt ISO Image&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;
We provide an installation ISO image for download (~600MB), which is created using the same &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce&quot;&gt;tool&lt;/a&gt; you can use yourself in order to create your own image. It will basically just save you some time downloading components and creating the ISO image.
You can download the prebuilt installation image &lt;a href=&quot;http://community-honeypot.de/tpot.iso&quot;&gt;here&lt;/a&gt; and jump to the &lt;a href=&quot;#vm&quot;&gt;installation&lt;/a&gt; section. The ISO image is hosted by our friends from &lt;a href=&quot;http://www.strato.de&quot;&gt;Strato&lt;/a&gt; / &lt;a href=&quot;http://www.cronon.de&quot;&gt;Cronon&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;shasum tpot.iso
7f4c5d91ab620866b661fcaa7c1778f473e2a07d tpot.iso
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a name=&quot;createiso&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;create-your-own-iso-image&quot;&gt;Create your own ISO Image&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;
For transparency reasons and to give you the ability to customize your install, we provide you the &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce&quot;&gt;ISO Creator&lt;/a&gt; that enables you to create your own ISO installation image.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Requirements to create the ISO image:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Ubuntu 14.04.4 or newer as host system (others &lt;em&gt;may&lt;/em&gt; work, but remain untested)&lt;/li&gt;
  &lt;li&gt;4GB of free memory&lt;/li&gt;
  &lt;li&gt;32GB of free storage&lt;/li&gt;
  &lt;li&gt;A working internet connection&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;How to create the ISO image:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Clone the repository and enter it.&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; git clone https://github.com/dtag-dev-sec/tpotce.git
 cd tpotce
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Invoke the script that builds the ISO image.
The script will download and install dependencies necessary to build the image on the invoking machine. It will further download the ubuntu base image (~600MB) which T-Pot is based on.&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; sudo ./makeiso.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;After a successful build, you will find the ISO image &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tpot.iso&lt;/code&gt; in your directory.&lt;/p&gt;

&lt;iframe width=&quot;853&quot; height=&quot;480&quot; src=&quot;https://www.youtube.com/embed/0ib7MG28ag0&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a name=&quot;vm&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;running-in-vm&quot;&gt;Running in VM&lt;/h2&gt;
&lt;p&gt;You may want to run T-Pot in a virtualized environment. The virtual system configuration depends on your virtualization provider.&lt;/p&gt;

&lt;p&gt;We successfully tested T-Pot with &lt;a href=&quot;https://www.virtualbox.org&quot;&gt;VirtualBox&lt;/a&gt; and &lt;a href=&quot;http://www.vmware.com&quot;&gt;VMWare&lt;/a&gt; with just little modifications to the default machine configurations.&lt;/p&gt;

&lt;p&gt;It is important to make sure you meet the &lt;a href=&quot;#requirements&quot;&gt;system requirements&lt;/a&gt; and assign a virtual harddisk &amp;gt;=64 GB, &amp;gt;=4 GB RAM and bridged networking to T-Pot.&lt;/p&gt;

&lt;p&gt;You need to enable promiscuous mode for the network interface for suricata to work properly. Make sure you enable it during configuration.&lt;/p&gt;

&lt;p&gt;If you want to use a wifi card as primary NIC for T-Pot, please remind that not all network interface drivers support all wireless cards. E.g. in VirtualBox, you then have to choose the &lt;em&gt;“MT SERVER”&lt;/em&gt; model of the NIC.&lt;/p&gt;

&lt;p&gt;Lastly, mount the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tpot.iso&lt;/code&gt; ISO to the VM and continue with the installation.&lt;br /&gt;&lt;/p&gt;

&lt;iframe width=&quot;853&quot; height=&quot;480&quot; src=&quot;https://www.youtube.com/embed/XpZBXlwrOZg&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;You can now jump &lt;a href=&quot;#firstrun&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;hardware&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;running-on-hardware&quot;&gt;Running on Hardware&lt;/h2&gt;

&lt;p&gt;If you decide to run T-Pot on dedicated hardware, just follow these steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Burn a CD from the ISO image or make a bootable USB stick using the image. &lt;br /&gt;
Whereas most CD burning tools allow you to burn from ISO images, the procedure to create a bootable USB stick from an ISO image depends on your system. There are various Windows GUI tools available, e.g. &lt;a href=&quot;http://www.ubuntu.com/download/desktop/create-a-usb-stick-on-windows&quot;&gt;this tip&lt;/a&gt; might help you.&lt;br /&gt; On &lt;a href=&quot;http://askubuntu.com/questions/59551/how-to-burn-a-iso-to-a-usb-device&quot;&gt;Linux&lt;/a&gt; or &lt;a href=&quot;http://www.ubuntu.com/download/desktop/create-a-usb-stick-on-mac-osx&quot;&gt;MacOS&lt;/a&gt; you can use the tool &lt;em&gt;dd&lt;/em&gt; or create the USB stick with T-Pot’s &lt;a href=&quot;https://github.com/dtag-dev-sec&quot;&gt;ISO Creator&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Boot from the USB stick and install.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;Please note&lt;/em&gt;: We will ensure the compatibility with the Intel NUC platform, as we really like the form factor, looks and build quality.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;firstrun&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;first-run&quot;&gt;First Run&lt;/h2&gt;

&lt;p&gt;The installation requires very little interaction, only some locales and keyboard settings have to be answered. Everything else will be configured automatically. The system will reboot two times. Make sure it can access the internet as it needs to download the updates and the dockerized honeypot components. Depending on your network connection and the chosen installation type, the installation may take some time. During our tests (50Mbit down, 10Mbit up), the installation was usually finished within &amp;lt;=30 minutes.&lt;/p&gt;

&lt;iframe width=&quot;853&quot; height=&quot;480&quot; src=&quot;https://www.youtube.com/embed/oXRvRIPQG1A&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Once the installation is finished, the system will automatically reboot and you will be presented with the T-Pot login screen. The user credentials for the first login are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;user: &lt;em&gt;tsec&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;pass: &lt;em&gt;tsec&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You will need to set a new password after first login.&lt;/p&gt;

&lt;p&gt;All honeypot services are started automatically.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;placement&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;system-placement&quot;&gt;System Placement&lt;/h1&gt;

&lt;p&gt;Make sure your system is reachable through the internet. Otherwise it will not capture any attacks, other than the ones from your hostile internal network! We recommend you put it in an unfiltered zone, where all TCP and UDP traffic is forwarded to T-Pot’s network interface.&lt;/p&gt;

&lt;p&gt;If you are behind a NAT gateway (e.g. home router), here is a list of ports that should be forwarded to T-Pot.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Honeypot&lt;/th&gt;
      &lt;th&gt;Transport&lt;/th&gt;
      &lt;th&gt;Forwarded ports&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;conpot&lt;/td&gt;
      &lt;td&gt;TCP&lt;/td&gt;
      &lt;td&gt;81, 102, 502&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;conpot&lt;/td&gt;
      &lt;td&gt;UDP&lt;/td&gt;
      &lt;td&gt;161&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cowrie&lt;/td&gt;
      &lt;td&gt;TCP&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;dionaea&lt;/td&gt;
      &lt;td&gt;TCP&lt;/td&gt;
      &lt;td&gt;21, 42, 135, 443, 445, 1433, 3306, 5060, 5061, 8081&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;dionaea&lt;/td&gt;
      &lt;td&gt;UDP&lt;/td&gt;
      &lt;td&gt;69, 5060&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;elasticpot&lt;/td&gt;
      &lt;td&gt;TCP&lt;/td&gt;
      &lt;td&gt;9200&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;emobility&lt;/td&gt;
      &lt;td&gt;TCP&lt;/td&gt;
      &lt;td&gt;8080&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;glastopf&lt;/td&gt;
      &lt;td&gt;TCP&lt;/td&gt;
      &lt;td&gt;80&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;honeytrap&lt;/td&gt;
      &lt;td&gt;TCP&lt;/td&gt;
      &lt;td&gt;25, 110, 139, 3389, 4444, 4899, 5900, 21000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Basically, you can forward as many TCP ports as you want, as honeytrap dynamically binds any TCP port that is not covered by the other honeypot daemons.&lt;/p&gt;

&lt;p&gt;In case you need external SSH access, forward TCP port 64295 to T-Pot, see below.&lt;/p&gt;

&lt;p&gt;T-Pot requires outgoing http and https connections for updates (ubuntu, docker) and attack submission (ewsposter, hpfeeds).&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;options&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;options&quot;&gt;Options&lt;/h1&gt;

&lt;p&gt;The system is designed to run without any interaction or maintenance and automatically contribute to the community.&lt;br /&gt;
We know, for some this may not be enough. So here come some ways to further inspect the system and change configuration parameters.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;ssh&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;enabling-2fa--ssh&quot;&gt;Enabling 2FA &amp;amp; SSH&lt;/h2&gt;

&lt;p&gt;By default, the SSH daemon is disabled. However, if you want to be able to login remotely via SSH and / or enable two-factor authentication (2fa) by using an authenticator app i.e. &lt;a href=&quot;https://support.google.com/accounts/answer/1066447?hl=en&quot;&gt;Google Authenticator&lt;/a&gt; just run the following script as the user &lt;em&gt;tsec&lt;/em&gt;. &lt;strong&gt;&lt;em&gt;Do not run it as root or via sudo&lt;/em&gt;&lt;/strong&gt;. Otherwise the setup of the two factor authentication will be bound to the user root who is not permitted to login remotely.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~/2fa_enable.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Afterwards you can login via SSH using the password you set for the user &lt;em&gt;tsec&lt;/em&gt; and use the authenticator token as the second authentication factor.&lt;/p&gt;

&lt;p&gt;The script will also enable the SSH daemon on &lt;strong&gt;tcp/64295&lt;/strong&gt;. It is configured to prevent password login and use pubkey-authentication or challenge-response instead. We recommend using pubkey-authentication; just copy your SSH keyfile to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/home/tsec/.ssh/authorized_keys&lt;/code&gt; and set the appropriate permissions (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chmod 600 authorized_keys&lt;/code&gt;) as well as the correct ownership (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chown tsec:tsec authorized_keys&lt;/code&gt;).&lt;/p&gt;

&lt;iframe width=&quot;853&quot; height=&quot;480&quot; src=&quot;https://www.youtube.com/embed/6GmIxVJ6eAQ&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a name=&quot;kibana&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;kibana-dashboard&quot;&gt;Kibana Dashboard&lt;/h2&gt;

&lt;p&gt;To access the kibana dashboard, ensure you have &lt;a href=&quot;#ssh&quot;&gt;enabled SSH&lt;/a&gt; on T-Pot. If you have you can use &lt;a href=&quot;http://explainshell.com/explain?cmd=ssh+-p+64295+-l+tsec+-N+-L8080%3A127.0.0.1%3A64296+yourHoneypotIPaddress&quot;&gt;SSH port forwarding&lt;/a&gt;  to access the kibana dashboard (make sure you leave the terminal open).&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh -p 64295 -l tsec -N -L8080:127.0.0.1:64296 &amp;lt;yourHoneypotIPaddress&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;iframe width=&quot;853&quot; height=&quot;480&quot; src=&quot;https://www.youtube.com/embed/A3LF63os17k&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Finally, open a web browser and access &lt;a href=&quot;http://127.0.0.1:8080&quot;&gt;http://127.0.0.1:8080&lt;/a&gt;. The kibana dashboard can be customized to fit your needs. By default, we haven’t added any filtering, because the filters depend on your setup. E.g. you might want to filter out your incoming administrative ssh connections and connections to update servers.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dtag-dev-sec/tpotce/master/doc/dashboard.png&quot; alt=&quot;Dashbaord&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;iframe width=&quot;853&quot; height=&quot;480&quot; src=&quot;https://www.youtube.com/embed/bJ2Yg-ArGbk&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;maintenance&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;maintenance&quot;&gt;Maintenance&lt;/h2&gt;

&lt;p&gt;As mentioned before, the system was designed to be low maintenance. Basically, there is nothing you have to do but let it run. If one of the dockerized daemon fails, it will restart. If this fails, the regarding upstart job will be restarted.&lt;/p&gt;

&lt;p&gt;If you run into any problems, a reboot may fix it. ;)&lt;/p&gt;

&lt;p&gt;If new versions of the components involved appear, we will test them and build new docker images. Those new docker images will be pushed to docker hub and downloaded to T-Pot and activated accordingly.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;submission&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;community-data-submission&quot;&gt;Community Data Submission&lt;/h2&gt;

&lt;p&gt;We provide T-Pot in order to make it accessible to all parties interested in honeypot deployment. By default, the data captured is submitted to a community backend. This community backend uses the data to feed a &lt;a href=&quot;http://sicherheitstacho.eu/?peers=communityPeers&quot;&gt;community data view&lt;/a&gt;, a separate channel on our own &lt;a href=&quot;http://sicherheitstacho.eu&quot;&gt;Sicherheitstacho&lt;/a&gt;, which is powered by our own set of honeypots.
You may opt out the submission to our community server by disabling it in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[EWS]&lt;/code&gt;-section of the config file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/data/ews/conf/ews.cfg&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Further we support &lt;a href=&quot;https://github.com/rep/hpfeeds&quot;&gt;hpfeeds&lt;/a&gt;. It is disabled by default since you need to supply a channel you want to post to and enter your user credentials. To enable hpfeeds, edit the config file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/data/ews/conf/ews.cfg&lt;/code&gt;, section &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[HPFEED]&lt;/code&gt; and set it to true.&lt;/p&gt;

&lt;p&gt;Data is submitted in a structured ews-format, a XML stucture. Hence, you can parse out the information that is relevant to you.&lt;/p&gt;

&lt;p&gt;We encourage you not to disable the data submission as it is the main purpose of the community approach - as you all know &lt;strong&gt;sharing is caring&lt;/strong&gt; 😍&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/data/ews/conf/ews.cfg&lt;/code&gt;&lt;/em&gt; file contains many configuration parameters required for the system to run. You can - if you want - add an email address, that will be included with your submissions, in order to be able to identify your requests later. Further you can add a proxy.
Please do not change anything other than those settings and only if you absolutely need to. Otherwise, the system may not work as expected.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;roadmap&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;roadmap&quot;&gt;Roadmap&lt;/h1&gt;

&lt;p&gt;As with every development there is always room for improvements …&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Move to Ubuntu Server 16.04 LTS&lt;/li&gt;
  &lt;li&gt;Further improve on JSON logging&lt;/li&gt;
  &lt;li&gt;Move from upstart to systemd (only if necessary)&lt;/li&gt;
  &lt;li&gt;Bump ELK-stack to 5.0&lt;/li&gt;
  &lt;li&gt;Move from Glastopf to SNARE&lt;/li&gt;
  &lt;li&gt;Work on a upgrade strategy&lt;/li&gt;
  &lt;li&gt;Improve backup script, include restore script&lt;/li&gt;
  &lt;li&gt;Tweaking 😎&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some features may be provided with updated docker images, others may require some hands on from your side.&lt;/p&gt;

&lt;p&gt;You are always invited to participate in development on our &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce&quot;&gt;GitHub&lt;/a&gt; page.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;disclaimer&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;disclaimer&quot;&gt;Disclaimer&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;We don’t have access to your system. So we cannot remote-assist when you break your configuration. But you can simply reinstall.&lt;/li&gt;
  &lt;li&gt;The software was designed with best effort security, not to be in stealth mode. Because then, we probably would not be able to provide those kind of honeypot services.&lt;/li&gt;
  &lt;li&gt;You install and you run within your responsibility. Choose your deployment wisely as a system compromise can never be ruled out.&lt;/li&gt;
  &lt;li&gt;Honeypots should - by design - not host any sensitive data. Make sure you don’t add any.&lt;/li&gt;
  &lt;li&gt;By default, your data is submitted to the community dashboard. You can disable this in the config. But hey, wouldn’t it be better to contribute to the community?&lt;/li&gt;
  &lt;li&gt;By default, hpfeeds submission is disabled. You can enable it in the config section for hpfeeds. This is due to the nature of hpfeeds. We do not want to spam any channel, so you can choose where to post your data and who to share it with.&lt;/li&gt;
  &lt;li&gt;Malware submission is enabled by default but malware is currently not processed on the submission backend. This may be added later, but can also be disabled in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ews.cfg&lt;/code&gt; config file.&lt;/li&gt;
  &lt;li&gt;The system restarts the docker containers every night to avoid clutter and reduce disk consumption. &lt;em&gt;All data in the container is then reset.&lt;/em&gt; The data displayed in kibana is kept for &amp;lt;=90 days.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;faq&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;faq&quot;&gt;FAQ&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
Please report any issues or questions on our &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce/issues&quot;&gt;GitHub issue list&lt;/a&gt;, so the community can participate.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;contact&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;contact&quot;&gt;Contact&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
We provide the software &lt;strong&gt;as is&lt;/strong&gt; in a Community Edition format. T-Pot is designed to run out of the box and with zero maintenance involved. &lt;br /&gt;
Please understand that we cannot provide support on an individual basis. We will try to address questions, bugs and problems on our &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce/issues&quot;&gt;GitHub issue list&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;licenses&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;licenses&quot;&gt;Licenses&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
The software that T-Pot is built on, uses the following licenses.
&lt;br /&gt;GPLv2: &lt;a href=&quot;https://github.com/mushorg/conpot/blob/master/LICENSE.txt&quot;&gt;conpot (by Lukas Rist)&lt;/a&gt;, &lt;a href=&quot;https://github.com/DinoTools/dionaea/blob/master/LICENSE&quot;&gt;dionaea&lt;/a&gt;, &lt;a href=&quot;https://github.com/armedpot/honeytrap/blob/master/LICENSE&quot;&gt;honeytrap (by Tillmann Werner)&lt;/a&gt;, &lt;a href=&quot;http://suricata-ids.org/about/open-source/&quot;&gt;suricata&lt;/a&gt;
&lt;br /&gt;GPLv3: &lt;a href=&quot;https://github.com/schmalle/ElasticPot&quot;&gt;elasticpot (by Markus Schmall)&lt;/a&gt;, &lt;a href=&quot;https://github.com/dtag-dev-sec/emobility/blob/master/LICENSE&quot;&gt;emobility (by Mohamad Sbeiti)&lt;/a&gt;, &lt;a href=&quot;https://github.com/dtag-dev-sec/ews/&quot;&gt;ewsposter (by Markus Schroer)&lt;/a&gt;, &lt;a href=&quot;https://github.com/glastopf/glastopf/blob/master/GPL&quot;&gt;glastopf (by Lukas Rist)&lt;/a&gt;
&lt;br /&gt;Apache 2 License: &lt;a href=&quot;https://github.com/elasticsearch/elasticsearch/blob/master/LICENSE.txt&quot;&gt;elasticsearch&lt;/a&gt;, &lt;a href=&quot;https://github.com/elasticsearch/logstash/blob/master/LICENSE&quot;&gt;logstash&lt;/a&gt;, &lt;a href=&quot;https://github.com/elasticsearch/kibana/blob/master/LICENSE.md&quot;&gt;kibana&lt;/a&gt;, [docker] (https://github.com/docker/docker/blob/master/LICENSE)
&lt;br /&gt;MIT License: &lt;a href=&quot;https://github.com/stormpython/tagcloud/blob/master/LICENSE&quot;&gt;tagcloud (by Shelby Sturgis)&lt;/a&gt;, &lt;a href=&quot;https://github.com/stormpython/heatmap/blob/master/LICENSE&quot;&gt;heatmap (by Shelby Sturgis)&lt;/a&gt;
&lt;br /&gt;&lt;a href=&quot;https://github.com/micheloosterhof/cowrie/blob/master/doc/COPYRIGHT&quot;&gt;cowrie (copyright disclaimer by Upi Tamminen)&lt;/a&gt;
&lt;br /&gt;&lt;a href=&quot;http://www.ubuntu.com/about/about-ubuntu/licensing&quot;&gt;Ubuntu licensing&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;credits&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;credits&quot;&gt;Credits&lt;/h1&gt;
&lt;p&gt;Without open source and the fruitful development community we are proud to be a part of T-Pot would not have been possible. Our thanks are extended but not limited to the following people and organizations:&lt;/p&gt;

&lt;h3 id=&quot;the-developers-and-development-communities-of&quot;&gt;The developers and development communities of&lt;br /&gt;&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mushorg/conpot/graphs/contributors&quot;&gt;conpot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/micheloosterhof/cowrie/graphs/contributors&quot;&gt;cowrie&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/DinoTools/dionaea/graphs/contributors&quot;&gt;dionaea&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/docker/docker/graphs/contributors&quot;&gt;docker&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/schmalle/ElasticPot/graphs/contributors&quot;&gt;elasticpot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/elastic/elasticsearch/graphs/contributors&quot;&gt;elasticsearch&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/emobility/graphs/contributors&quot;&gt;emobility&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/armedpot/ewsposter/graphs/contributors&quot;&gt;ewsposter&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mushorg/glastopf/graphs/contributors&quot;&gt;glastopf&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/stormpython/heatmap/graphs/contributors&quot;&gt;heatmap&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/armedpot/honeytrap/graphs/contributors&quot;&gt;honeytrap&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/elastic/kibana/graphs/contributors&quot;&gt;kibana&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/elastic/logstash/graphs/contributors&quot;&gt;logstash&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://lcamtuf.coredump.cx/p0f3/&quot;&gt;p0f&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/inliniac/suricata/graphs/contributors&quot;&gt;suricata&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/stormpython/tagcloud/graphs/contributors&quot;&gt;tagcloud&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.ubuntu.com/&quot;&gt;ubuntu&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;the-following-companies-and-organizations&quot;&gt;The following companies and organizations&lt;br /&gt;&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.canonical.com/&quot;&gt;cannonical&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.docker.com/&quot;&gt;docker&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/&quot;&gt;elastic.io&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.honeynet.org/&quot;&gt;honeynet project&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.intel.de/content/www/de/de/homepage.html&quot;&gt;intel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;-and-of-course-you-for-joining-the-community&quot;&gt;… and of course &lt;strong&gt;&lt;em&gt;you&lt;/em&gt;&lt;/strong&gt; for joining the community!&lt;/h3&gt;

&lt;p&gt;&lt;a name=&quot;staytuned&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;stay-tuned-&quot;&gt;Stay tuned …&lt;/h1&gt;

&lt;p&gt;We will be releasing a new version of T-Pot about every 6 months.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;funfact&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;fun-fact&quot;&gt;Fun Fact&lt;/h1&gt;

&lt;p&gt;Coffee just does not cut it anymore which is why we needed a different caffeine source and consumed &lt;em&gt;203&lt;/em&gt; bottles of &lt;a href=&quot;https://de.wikipedia.org/wiki/Club-Mate&quot;&gt;Club Mate&lt;/a&gt; during the development of T-Pot 16.03 😇&lt;/p&gt;
</description>
        <pubDate>Fri, 11 Mar 2016 04:37:00 +0100</pubDate>
        <link>http://dtag-dev-sec.github.io//mediator/feature/2016/03/11/t-pot-16.03.html</link>
        <guid isPermaLink="true">http://dtag-dev-sec.github.io//mediator/feature/2016/03/11/t-pot-16.03.html</guid>
        
        <category>featured</category>
        
        
        <category>mediator</category>
        
        <category>feature</category>
        
      </item>
    
      <item>
        <title>T-Pot - Important Update Notification (docker 1.10) </title>
        <description>&lt;p&gt;Yesterday Docker released version 1.10 (http://blog.docker.com/2016/02/docker-1-10/). While this release will
improve on security and bring lots of useful features the automatic upgrade within T-Pot (http://dtag-dev-sec.github.io/feature/2015/10/23/updated-docker.html) will hang.&lt;/p&gt;

&lt;p&gt;You have to manually upgrade Docker to the latest version in order for your T-Pot installation to work properly.&lt;/p&gt;

&lt;p&gt;Please login to T-Pot and run the following commands:&lt;/p&gt;

&lt;p&gt;sudo apt-get update -y&lt;/p&gt;

&lt;p&gt;sudo apt-get upgrade -y&lt;/p&gt;

&lt;p&gt;sudo apt-get upgrade docker-engine -y&lt;/p&gt;

&lt;p&gt;Please answer the following question with (N)o for T-Pot to work correctly:&lt;/p&gt;

&lt;p&gt;Configuration file ‘/etc/default/docker’&lt;/p&gt;

&lt;p&gt;==&amp;gt; Modified (by you or by a script) since installation.&lt;/p&gt;

&lt;p&gt;==&amp;gt; Package distributor has shipped an updated version.&lt;/p&gt;

&lt;p&gt;What would you like to do about it ?  Your options are:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Y or I  : install the package maintainer's version

N or O  : keep your currently-installed version

  D     : show the differences between the versions

  Z     : start a shell to examine the situation
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The default action is to keep your current version.&lt;/p&gt;

&lt;p&gt;*** docker (Y/I/N/O/D/Z) [default=N] ? N&lt;/p&gt;

&lt;p&gt;Installing new version of config file /etc/bash_completion.d/docker …&lt;/p&gt;

&lt;p&gt;docker start/running, process 92746&lt;/p&gt;

&lt;p&gt;Processing triggers for libc-bin (2.19-0ubuntu6.6) …&lt;/p&gt;

&lt;p&gt;Processing triggers for ureadahead (0.100.0-16) …&lt;/p&gt;

&lt;p&gt;If everything worked Docker will calculate SHA256 checksums for docker related data (https://docs.docker.com/engine/migration/). Depending on your hardware this might take some time during which the containers will not be available. Please wait until all containers are up and running again before you reboot your machine.&lt;/p&gt;

&lt;p&gt;If you are in doubt please run “sudo cat /etc/default/docker” and if the configs are identical:&lt;/p&gt;

&lt;p&gt;’’’# Docker Upstart and SysVinit configuration file&lt;/p&gt;

&lt;p&gt;#Customize location of Docker binary (especially for development testing).&lt;/p&gt;

&lt;p&gt;#DOCKER=”/usr/local/bin/docker”&lt;/p&gt;

&lt;h1 id=&quot;use-docker_opts-to-modify-the-daemon-startup-options&quot;&gt;Use DOCKER_OPTS to modify the daemon startup options.&lt;/h1&gt;

&lt;p&gt;#DOCKER_OPTS=”–dns 8.8.8.8 –dns 8.8.4.4”&lt;/p&gt;

&lt;h1 id=&quot;if-you-need-docker-to-use-an-http-proxy-it-can-also-be-specified-here&quot;&gt;If you need Docker to use an HTTP proxy, it can also be specified here.&lt;/h1&gt;

&lt;p&gt;#export http_proxy=”http://127.0.0.1:3128/”&lt;/p&gt;

&lt;h1 id=&quot;this-is-also-a-handy-place-to-tweak-where-dockers-temporary-files-go&quot;&gt;This is also a handy place to tweak where Docker’s temporary files go.&lt;/h1&gt;

&lt;p&gt;#export TMPDIR=”/mnt/bigdrive/docker-tmp”&lt;/p&gt;

&lt;p&gt;DOCKER_OPTS=”-r=false”’’’&lt;/p&gt;
</description>
        <pubDate>Fri, 05 Feb 2016 14:37:42 +0100</pubDate>
        <link>http://dtag-dev-sec.github.io//feature/2016/02/05/docker.1.10.html</link>
        <guid isPermaLink="true">http://dtag-dev-sec.github.io//feature/2016/02/05/docker.1.10.html</guid>
        
        <category>featured</category>
        
        
        <category>feature</category>
        
      </item>
    
      <item>
        <title>T-Pot - Important Update Notification </title>
        <description>&lt;p&gt;Last spring we released T-Pot and ever since, Docker evolved rapidly with new versions, new features, and eventually a new repository. With regards to early releases of T-Pot and the fast development of Docker, we manually pinned the Docker versions used to the 1.5.x and 1.6.x branches. Now, with the latest Docker releases and Dockers’ switch to a new repository for Ubuntu (and deprecating the one we have been using), we updated the T-Pot ISO and the GitHub project accordingly.&lt;/p&gt;

&lt;p&gt;So, from now on, we will stick to the latest Docker version.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;But, why is this important to you?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Well, Docker deprecated their old versions and will no longer serve images to old versions. So you will have to update in order to keep the system fully functional.&lt;/p&gt;

&lt;p&gt;If you want to upgrade your existing installation you can download &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce/blob/master/upgrade.sh&quot;&gt;this upgrade script&lt;/a&gt;:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Login to your T-Pot as &lt;em&gt;tsec&lt;/em&gt; and execute the following commands, &lt;strong&gt;but only run the script once&lt;/strong&gt;!&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/dtag-dev-sec/tpotce.git
sudo tpotce/./upgrade.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If everything worked fine the machine will reboot.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Check if your containers are running correctly by either by pressing CTRL+F2 or by logging in as &lt;em&gt;tsec&lt;/em&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo status.sh&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Otherwise, if you wish to perform a new installation you can download the new ISO &lt;a href=&quot;http://community-honeypot.de/tpotce.iso&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In case you encounter any problems, feel free to post an issue &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce/issues&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Fri, 23 Oct 2015 15:37:42 +0200</pubDate>
        <link>http://dtag-dev-sec.github.io//feature/2015/10/23/updated-docker.html</link>
        <guid isPermaLink="true">http://dtag-dev-sec.github.io//feature/2015/10/23/updated-docker.html</guid>
        
        <category>featured</category>
        
        
        <category>feature</category>
        
      </item>
    
      <item>
        <title>T-Pot: A Multi-Honeypot Platform</title>
        <description>&lt;p&gt;We created a honeypot platform, which is based on the well-established honeypots &lt;a href=&quot;http://glastopf.org/&quot;&gt;glastopf&lt;/a&gt;, &lt;a href=&quot;https://github.com/desaster/kippo&quot;&gt;kippo&lt;/a&gt;, &lt;a href=&quot;http://honeytrap.carnivore.it/&quot;&gt;honeytrap&lt;/a&gt; and &lt;a href=&quot;http://dionaea.carnivore.it/&quot;&gt;dionaea&lt;/a&gt;, the network IDS/IPS &lt;a href=&quot;http://suricata-ids.org/&quot;&gt;suricata&lt;/a&gt;, &lt;a href=&quot;http://www.elasticsearch.org/overview/&quot;&gt;elasticsearch-logstash-kibana&lt;/a&gt;, &lt;a href=&quot;https://github.com/dtag-dev-sec/ews&quot;&gt;ewsposter&lt;/a&gt; and some
&lt;a href=&quot;https://www.docker.com/&quot;&gt;docker&lt;/a&gt; magic. We want to make this technology available to everyone who is interested and release it as a Community Edition. We want to encourage you to participate.&lt;/p&gt;

&lt;h1 id=&quot;tldr&quot;&gt;TL;DR&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;Meet the &lt;a href=&quot;#requirements&quot;&gt;system requirements&lt;/a&gt;. Use at least 2GB RAM and 40GB disk space as well as a working internet connection.&lt;/li&gt;
  &lt;li&gt;Download the &lt;a href=&quot;http://community-honeypot.de/tpotce.iso&quot;&gt;tpotce.iso&lt;/a&gt; or &lt;a href=&quot;#createiso&quot;&gt;create it yourself&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Install the system in a &lt;a href=&quot;#vm&quot;&gt;VM&lt;/a&gt; or on &lt;a href=&quot;#hw&quot;&gt;physical hardware&lt;/a&gt; with &lt;a href=&quot;#placement&quot;&gt;internet access&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Sit tight - &lt;a href=&quot;http://sicherheitstacho.eu/?peers=communityPeers&quot;&gt;watch&lt;/a&gt; and &lt;a href=&quot;#kibana&quot;&gt;analyze&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We have created a nice &lt;a href=&quot;https://youtu.be/dWbJS_9sFNE&quot;&gt;installation video&lt;/a&gt; for you in case you run into problems. Please
be advised, that one CPU is fully sufficient to run T-Pot.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Update:&lt;/em&gt; In case you already have an Ubuntu 14.04.x running in your datacenter and are unable to install from an ISO image, we have created a &lt;a href=&quot;http://dtag-dev-sec.github.io/mediator/feature/2015/05/11/t-pot-autoinstall.html&quot;&gt;script&lt;/a&gt; that converts your Ubuntu base install into a full-fledged T-Pot within just a couple of minutes.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Please note&lt;/em&gt;: We will ensure the compatibility to the Intel NUC platform, as we really like this handy format.&lt;/p&gt;

&lt;h1 id=&quot;documentation&quot;&gt;Documentation&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#background&quot;&gt;Background&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#t-pot&quot;&gt;T-Pot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#concept&quot;&gt;Technical Concept&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#requirements&quot;&gt;System Requirements&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#installation&quot;&gt;Installation&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#prebuilt&quot;&gt;Prebuilt ISO Image&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#createiso&quot;&gt;Create your own ISO Image&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#vm&quot;&gt;Running in a VM&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#hardware&quot;&gt;Running on Hardware&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#firstrun&quot;&gt;First Run&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#placement&quot;&gt;System Placement&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#options&quot;&gt;Options&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#ssh&quot;&gt;Enabling SSH&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#kibana&quot;&gt;Kibana Dashboard&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#maintenance&quot;&gt;Maintenance&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#submission&quot;&gt;Community Data Submission&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#roadmap&quot;&gt;Roadmap&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#considerations&quot;&gt;Considerations&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#qa&quot;&gt;Q&amp;amp;A&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#contact&quot;&gt;Contact&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#licenses&quot;&gt;Licenses&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;background&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;background&quot;&gt;Background&lt;/h1&gt;
&lt;p&gt;In the last couple of years, we at Deutsche Telekom’s honeypot project have setup several honeypots in our home networks, Telekom’s access networks and at partner locations all around the globe. The data gathered by those honeypots is a core component for our Early Warning System and feeds the data for the &lt;a href=&quot;http://sicherheitstacho.eu&quot;&gt;Sicherheitstacho / “Securitydashboard”&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Our experience in setting up honeypot systems at several locations showed that many people were interested in running some kind of honeypot sensor, but were a bit overwhelmed by the setup procedure and maintenance. In the past, we have gathered some experience with configuration management and finally decided to create a honeypot system that is easy to deploy, low maintenance and combines some of the best honeypot technologies in one system.&lt;/p&gt;

&lt;p&gt;Lucky for us, a new technology called &lt;a href=&quot;https://docker.com&quot;&gt;docker&lt;/a&gt; emerged and we thought we’d give it a try…&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;t-pot&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;t-pot&quot;&gt;T-Pot&lt;/h1&gt;
&lt;p&gt;Fast forward a couple of months: We finally created a multi-honeypot platform, that we want to make available as a &lt;em&gt;public beta&lt;/em&gt; in order to foster a community and make this technology available to all people interested.
Aside from this, we also want to motivate people to contribute to security research and maybe take a first step towards cooperation and data exchange.&lt;/p&gt;

&lt;p&gt;Our solution is no silver bullet to security, no intrusion prevention system and it’s no fancy, cutting edge APT detection tool… &lt;br /&gt;&lt;br /&gt;
But let’s focus on what it is: Some of the best honeypot technologies available, easy to deploy and simple use. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;T-Pot is based on well-established honeypot daemons, IDS and tools for attack submission. &lt;br /&gt;
The idea behind T-Pot is to create a system, whose entire TCP network range as well as some important UDP services act as honeypot, and to forward all incoming attack traffic to the best suited honeypot daemons in order to respond and process it.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;concept&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;technical-concept&quot;&gt;Technical Concept&lt;/h1&gt;

&lt;p&gt;T-Pot is based on a vanilla Ubuntu 14.04.02 ISO image. 
The honeypot daemons as well as other support components we used have been paravirtualized using &lt;a href=&quot;http://docker.io&quot;&gt;docker&lt;/a&gt;.
This allowed us to run multiple honeypot daemons on the same network interface without problems make the entire system very low maintenance. &lt;br /&gt;The encapsulation of the honeypot daemons in docker provides a good isolation of the runtime environments and easy update mechanisms.&lt;/p&gt;

&lt;p&gt;In T-Pot we combine existing honeypots (&lt;a href=&quot;http://glastopf.org/&quot;&gt;glastopf&lt;/a&gt;, &lt;a href=&quot;https://github.com/desaster/kippo&quot;&gt;kippo&lt;/a&gt;, &lt;a href=&quot;http://honeytrap.carnivore.it/&quot;&gt;honeytrap&lt;/a&gt; and &lt;a href=&quot;http://dionaea.carnivore.it/&quot;&gt;dionaea&lt;/a&gt;) with the network IDS/IPS &lt;a href=&quot;http://suricata-ids.org/&quot;&gt;suricata&lt;/a&gt;, the data monitoring and visualization triple &lt;a href=&quot;http://www.elasticsearch.org/overview/&quot;&gt;elasticsearch-logstash-kibana&lt;/a&gt;, and our own data submission &lt;a href=&quot;https://github.com/dtag-dev-sec/ews&quot;&gt;ewsposter&lt;/a&gt; which now also supports hpfeeds honeypot data sharing.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/images/tpot.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/assets/images/tpot.png&quot; alt=&quot;Architecture&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;All data in docker is volatile. Once a docker container crashes, all data produced within its environment is gone and a fresh instance is restarted. Hence, for some data that needs to be persistent, like config files etc., we have a persistent data storage (mounted to /data/ on the host) in order to make it available and persistent across container or system restarts.&lt;/p&gt;

&lt;p&gt;Basically, what happens when the system is booted up is the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;start host system&lt;/li&gt;
  &lt;li&gt;start all docker containers (honeypots, IDS, elk, ewsposter)&lt;/li&gt;
  &lt;li&gt;ewsposter periodically checks the honeypot containers for new attacks and submits data to our community backend&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Within the T-Pot project, we provide all the tools and documentation necessary to build your own honeypot system and contribute to our &lt;a href=&quot;http://sicherheitstacho.eu/?peers=communityPeers&quot;&gt;community data view&lt;/a&gt;, a separate channel on our  &lt;a href=&quot;http://sicherheitstacho.eu&quot;&gt;Sicherheitstacho&lt;/a&gt; that is powered by this community data.&lt;/p&gt;

&lt;p&gt;The source code and configuration files are stored in individual github repositories, which are linked below. The docker images are tailored to be run in this environment. If you want to run the docker images separately, make sure you study the upstart scripts, as they provide an insight in how we configured them.&lt;/p&gt;

&lt;p&gt;The individual docker configurations etc. we used can be found here:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/ews&quot;&gt;ewsposter&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/elk&quot;&gt;elasticsearch / logstash / kibana&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/suricata&quot;&gt;suricata&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/honeytrap&quot;&gt;honeytrap&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/kippo&quot;&gt;kippo&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/glastopf&quot;&gt;glastopf&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/dionaea&quot;&gt;dionaea&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;requirements&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;system-requirements&quot;&gt;System Requirements&lt;/h1&gt;
&lt;p&gt;Whether you install it on &lt;a href=&quot;#hardware&quot;&gt;real hardware&lt;/a&gt; or in a &lt;a href=&quot;#vm&quot;&gt;virtual machine&lt;/a&gt;, make sure your designated T-Pot system meets the following minimum system requirements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;2 GB RAM (4 GB recommended)&lt;/li&gt;
  &lt;li&gt;40 GB disk (64 GB SSD recommended)&lt;/li&gt;
  &lt;li&gt;Working internet connection / network via DHCP&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;installation&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;installation&quot;&gt;Installation&lt;/h1&gt;
&lt;p&gt;The installation of T-Pot is simple. Please be advised that you should have an internet connection up and running
as even the installation iso file will need the basic docker containers to be pulled from docker hub.&lt;/p&gt;

&lt;p&gt;First, decide if you want to download our prebuilt installation ISO image &lt;a href=&quot;http://community-honeypot.de/tpotce.iso&quot;&gt;tpotce.iso&lt;/a&gt; &lt;strong&gt;&lt;em&gt;or&lt;/em&gt;&lt;/strong&gt; &lt;a href=&quot;#createiso&quot;&gt;create it yourself&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Second, decide where you want to let the system run: &lt;a href=&quot;#hardware&quot;&gt;real hardware&lt;/a&gt; or in a &lt;a href=&quot;#vm&quot;&gt;virtual machine&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;prebuilt&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;prebuilt-iso-image&quot;&gt;Prebuilt ISO Image&lt;/h2&gt;
&lt;p&gt;We provide an installation ISO image for download (~610MB), which is created using the same &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce&quot;&gt;tool&lt;/a&gt; you can use yourself in order to create your own image. It will basically just save you some time downloading components and creating the ISO image. 
You can download the prebuilt installation image &lt;a href=&quot;http://community-honeypot.de/tpotce.iso&quot;&gt;here&lt;/a&gt; and jump to the &lt;a href=&quot;#vm&quot;&gt;installation&lt;/a&gt; section. The ISO image is hosted by our friends from &lt;a href=&quot;http://www.strato.de&quot;&gt;Strato&lt;/a&gt; / &lt;a href=&quot;http://www.cronon.de&quot;&gt;Cronon&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;shasum tpotce.iso
3b8f15eba2a478b106b202726661ce75c8fe7acc tpotce.iso
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a name=&quot;createiso&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;create-your-own-iso-image&quot;&gt;Create your own ISO Image&lt;/h2&gt;
&lt;p&gt;For transparency reasons and to give you the ability to customize your install, we provide you the &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce&quot;&gt;tool&lt;/a&gt; that enables you to create your own ISO installation image.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Requirements to create the ISO image:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ubuntu 14.04.2 or 14.10 as host system (others &lt;em&gt;may&lt;/em&gt; work, but remain untested)&lt;/li&gt;
  &lt;li&gt;2GB of free memory&lt;/li&gt;
  &lt;li&gt;4GB of free storage&lt;/li&gt;
  &lt;li&gt;A working internet connection&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;How to create the ISO image:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Clone the repository and enter it.&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; git clone https://github.com/dtag-dev-sec/tpotce.git
 cd tpotce
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Invoke the script that builds the ISO image. 
The script will download and install dependencies necessary to build the image on the invoking machine. It will further download the Ubuntu base image (~625MB) which T-Pot is based on.&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; sudo ./makeiso.sh After successful build, you will find the ISO image `tpotce.iso` in your directory. 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a name=&quot;vm&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;running-in-vm&quot;&gt;Running in VM&lt;/h2&gt;
&lt;p&gt;You may want to run T-Pot in a virtualized environment. The virtual system configuration depends on your virtualization provider.&lt;/p&gt;

&lt;p&gt;We successfully tested T-Pot with &lt;a href=&quot;https://www.virtualbox.org&quot;&gt;VirtualBox&lt;/a&gt; and &lt;a href=&quot;http://www.vmware.com&quot;&gt;VMWare&lt;/a&gt; with just little modifications to the default machine configurations.&lt;/p&gt;

&lt;p&gt;It is important to make sure you meet the &lt;a href=&quot;#requirements&quot;&gt;system requirements&lt;/a&gt; and assign a virtual harddisk &amp;gt;=40GB, &amp;gt;=2GB RAM and bridged networking to T-Pot.&lt;/p&gt;

&lt;p&gt;You need to enable promiscuous mode for the network interface for suricata to work properly. Make sure you enable it during configuration.&lt;/p&gt;

&lt;p&gt;If you want to use a wifi card as primary NIC for T-Pot (which we do not recommend, but in some cases, it might be necessary), mind that not all network interface drivers support all wireless cards. E.g. in VirtualBox, you then have to choose the &lt;em&gt;“MT SERVER”&lt;/em&gt; model of the NIC.&lt;/p&gt;

&lt;p&gt;Last, mount the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tpotce.iso&lt;/code&gt; ISO to the VM and and continue with the installation. You can now jump &lt;a href=&quot;#firstrun&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;hardware&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;running-on-hardware&quot;&gt;Running on Hardware&lt;/h2&gt;
&lt;p&gt;If you decided to run T-Pot on dedicated hardware, just follow these steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Burn a CD from the ISO image or make a bootable USB stick using the image. &lt;br /&gt;Whereas most CD burning tools allow you to burn from ISO images, the procedure to create a bootable USB stick from an ISO image depends on your system. There are various Windows GUI tools available, e.g. &lt;a href=&quot;http://www.ubuntu.com/download/desktop/create-a-usb-stick-on-windows&quot;&gt;this tip&lt;/a&gt; might help you.&lt;br /&gt; On &lt;a href=&quot;http://askubuntu.com/questions/59551/how-to-burn-a-iso-to-a-usb-device&quot;&gt;Linux&lt;/a&gt; or &lt;a href=&quot;http://www.ubuntu.com/download/desktop/create-a-usb-stick-on-mac-osx&quot;&gt;MacOS&lt;/a&gt; you can use the tool &lt;em&gt;dd&lt;/em&gt; or google for GUI tools.&lt;/li&gt;
  &lt;li&gt;Boot from the USB stick and install.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a name=&quot;firstrun&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;first-run&quot;&gt;First Run&lt;/h2&gt;
&lt;p&gt;The installation requires very little interaction, only some locales and keyboard settings have to be answered. Most other things should be configured automatically. The system will reboot a couple of times. Make sure it can access the internet as it needs to download the dockerized honeypot components. Depending on your network connection, the installation may take some time. During our tests, the installation was finished within 30 minutes.&lt;/p&gt;

&lt;p&gt;Once the installation is finished, the system will automatically reboot and you will be presented with the T-Pot login screen. The user credentials for the first login are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;user: &lt;em&gt;tsec&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;pass: &lt;em&gt;tsec&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You will need to set a new password after first login.&lt;/p&gt;

&lt;p&gt;All honeypot services are started automatically.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;placement&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;system-placement&quot;&gt;System Placement&lt;/h1&gt;
&lt;p&gt;Make sure your system is reachable through the internet. Otherwise it will not capture any attacks, other than the ones from your hostile internal network! We recommend you put it in an unfiltered zone, where all TCP and UDP traffic is forwarded to T-Pot’s network interface.&lt;/p&gt;

&lt;p&gt;If you are behind a NAT gateway (e.g. home router), here is a list of ports that should be forwarded to T-Pot.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Resonding Honeypot       &lt;/th&gt;
      &lt;th&gt;Transport        &lt;/th&gt;
      &lt;th&gt;Port(s) to forward&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;dionaea&lt;/td&gt;
      &lt;td&gt;TCP&lt;/td&gt;
      &lt;td&gt;21, 42, 135, 443, 445, 1433, 3306, 5060, 5061, 8080&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;dionaea&lt;/td&gt;
      &lt;td&gt;UDP&lt;/td&gt;
      &lt;td&gt;69, 5060&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;kippo&lt;/td&gt;
      &lt;td&gt;TCP&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;honeytrap&lt;/td&gt;
      &lt;td&gt;TCP&lt;/td&gt;
      &lt;td&gt;25, 110, 139, 3389, 4444, 4899, 5900, 21000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;glastopf&lt;/td&gt;
      &lt;td&gt;TCP&lt;/td&gt;
      &lt;td&gt;80&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Basically, you can forward as many TCP ports as you want, as honeytrap dynamically binds any TCP port that is not covered by the other honeypot daemons.&lt;/p&gt;

&lt;p&gt;In case you want external SSH access, forward TCP port 64295 to T-Pot, see below.&lt;/p&gt;

&lt;p&gt;T-Pot requires outgoing http and https connections for updates (ubuntu, docker) and attack submission (ewsposter, hpfeeds).&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;options&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;options&quot;&gt;Options&lt;/h1&gt;
&lt;p&gt;The system is designed to run without any interaction or maintenance and contribute to the community.
As we know, for some this may not be enough. So here come some ways to further inspect the system and change configuration parameters.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;ssh&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;enabling-ssh&quot;&gt;Enabling SSH&lt;/h2&gt;
&lt;p&gt;By default, the ssh daemon is disabled. However, if you want to be able to login via SSH, make sure you enable it like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~/.ssh_enable.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This will start the SSH daemon on port &lt;strong&gt;64295&lt;/strong&gt;. It is configured to prevent password login and use pubkey-authentication instead, so make sure you get your key on the system. Just copy it to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/home/tsec/.ssh/authorized_keys&lt;/code&gt; and set the appropriate permissions (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chmod 600 authorized_keys&lt;/code&gt;) as well as the right ownership (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chown tsec:tsec authorized_keys&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;In addition to this - and maybe easier than getting a pubkey on the system - you can enable two-factor authentication (2fa) and use an app like &lt;a href=&quot;https://support.google.com/accounts/answer/1066447?hl=en&quot;&gt;Google Authenticator&lt;/a&gt; as a second authentication factor.&lt;/p&gt;

&lt;p&gt;Make sure that you invoke the following script as the user &lt;em&gt;tsec&lt;/em&gt;. &lt;strong&gt;&lt;em&gt;Do not run it as root or via sudo&lt;/em&gt;&lt;/strong&gt;. Otherwise the setup of two factor authentication will fail.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~/2fa_enable.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Don’t forget to enable ssh, if you haven’t done this before. If you already have enabled ssh, restart the ssh daemon &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo service ssh restart&lt;/code&gt; to make sure that the changes are active. &lt;br /&gt;
You can then login using the password you set for the user &lt;em&gt;tsec&lt;/em&gt; and use the app as the second authentication factor.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;kibana&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;kibana-dashboard&quot;&gt;Kibana Dashboard&lt;/h2&gt;
&lt;p&gt;To access the kibana dashboard, make sure you have &lt;a href=&quot;#ssh&quot;&gt;enabled SSH&lt;/a&gt; on T-Pot, then create a &lt;a href=&quot;http://explainshell.com/explain?cmd=ssh+-p+64295+-l+tsec+-N+-L8080%3A127.0.0.1%3A64296+yourHoneypotsPublicIPaddress&quot;&gt;port forward&lt;/a&gt;  and make sure you leave the terminal open.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh -p 64295 -l tsec -N -L8080:127.0.0.1:64296 &amp;lt;yourHoneypotsPublicIPaddress&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Finally, open a web browser and access &lt;a href=&quot;http://127.0.0.1:8080&quot;&gt;http://127.0.0.1:8080&lt;/a&gt;. The kibana dashboard can be customized to fit your needs. By default, we haven’t added any filtering other than outgoing ewsposter submission, because the filters depend on your setup. E.g. you might want to filter out your incoming administrative ssh connections and connections to update servers.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;maintenance&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;maintenance&quot;&gt;Maintenance&lt;/h2&gt;
&lt;p&gt;As mentioned before, the system was designed to be low maintenance. Basically, there is nothing you have to do but let it run. If one of the dockerized daemon fails, it will restart. If this fails, all docker container will be restarted.&lt;/p&gt;

&lt;p&gt;If you run into any problems, a reboot may fix it. ;)&lt;/p&gt;

&lt;p&gt;If new versions of the components involved appear, we will test them and build new docker images. Those new docker images will be pushed to the system and get restarted.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;submission&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;community-data-submission&quot;&gt;Community Data Submission&lt;/h2&gt;
&lt;p&gt;We provide T-Pot in order to make it accessible to all people who are interested in honeypot deployment. By default, the data captured is submitted to a community backend. This community backend uses the data to feed a &lt;a href=&quot;http://sicherheitstacho.eu/?peers=communityPeers&quot;&gt;community data view&lt;/a&gt;, a separate channel on our own &lt;a href=&quot;http://sicherheitstacho.eu&quot;&gt;Sicherheitstacho&lt;/a&gt;, which is powered by our own set of honeypots.
You may opt out the submission to our community server by disabling it in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[EWS]&lt;/code&gt;-section of the config file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/data/ews/conf/ews.cfg&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Further we support &lt;a href=&quot;https://github.com/rep/hpfeeds&quot;&gt;hpfeeds&lt;/a&gt;. It is disabled by default as you need to supply a  channel you want to post to and enter your user credentials. To enable hpfeeds, edit the config file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/data/ews/conf/ews.cfg&lt;/code&gt;, section &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[HPFEED]&lt;/code&gt; and set it to true.&lt;/p&gt;

&lt;p&gt;Data is submitted in structured ews-format, a XML stucture. Hence, you can parse out the information that is relevant to you.&lt;/p&gt;

&lt;p&gt;We encourage you not to disable the data submission as the main purpose of the community is sharing.&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;ews.cfg&lt;/em&gt; file contains many configuration parameters required for the system to run. You can - if you want - add an email address, that is sent within your submissions, in order to be able to identify your requests later. Further you can add a proxy.
Please do not change anything other than those settings and only if you absolutely need to. Otherwise, the system may not work as expected.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;roadmap&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;roadmap&quot;&gt;Roadmap&lt;/h1&gt;
&lt;p&gt;We planned a couple of features we haven’t been able to implement yet. Those features will most likely be added through automatic updates of the docker containers.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Import ews json log into kibana dashboard in order to visualize captured attack data&lt;/li&gt;
  &lt;li&gt;Filter out false positives in kibana dashboard (e.g. update connections)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;considerations&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;considerations&quot;&gt;Considerations&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;We don’t have access to your system. So we cannot remote-assist when you break your configuration. But you can simply reinstall.&lt;/li&gt;
  &lt;li&gt;The software was designed with best effort security, not to be in stealth mode. Because then, we probably would not be able to provide those kind of honeypot services.&lt;/li&gt;
  &lt;li&gt;You install and you run within your responsibility. Choose your deployment wisely as a system compromise can never be ruled out.&lt;/li&gt;
  &lt;li&gt;Honeypots should - by design - not host any sensitive data. Make sure you don’t add any.&lt;/li&gt;
  &lt;li&gt;By default, your data is submitted to the community dashboard. You can disable this in the config. But hey, wouldn’t it be better to contribute to the community?&lt;/li&gt;
  &lt;li&gt;By default, hpfeeds submission is disabled. You can enable it in the config section for hpfeeds. This is due to the nature of hpfeeds. We do not want to spam any channel, so you can choose where to post your data and who to share it with.&lt;/li&gt;
  &lt;li&gt;Malware submission is enabled by default but malware is currently not processed on the submission backend. This may be added later, but can also be disabled in the ews.cfg config file.&lt;/li&gt;
  &lt;li&gt;The system restarts the docker containers every night to avoid clutter and reduce disk consumption. &lt;em&gt;All data in the container is then reset.&lt;/em&gt; The data displayed in kibana is kept for the last 30 days.&lt;/li&gt;
  &lt;li&gt;This software is in &lt;em&gt;beta status&lt;/em&gt;, so it may contain bugs.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;qa&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;qa&quot;&gt;Q&amp;amp;A&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Q&lt;/strong&gt; : &lt;strong&gt;&lt;em&gt;How do I enable SSH?&lt;/em&gt;&lt;/strong&gt; &lt;br /&gt; &lt;strong&gt;A&lt;/strong&gt; : Run the &lt;em&gt;ssh_enable.sh&lt;/em&gt; script in tsec’s home directory. More &lt;a href=&quot;#ssh&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Q&lt;/strong&gt; : &lt;strong&gt;&lt;em&gt;On what port is the SSH daemon listening?&lt;/em&gt;&lt;/strong&gt; &lt;br /&gt;&lt;strong&gt;A&lt;/strong&gt;: OpenSSH is listening on port 64295. More &lt;a href=&quot;#ssh&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Q&lt;/strong&gt; : &lt;strong&gt;&lt;em&gt;Why didn’t you add honeypot XYZ?&lt;/em&gt;&lt;/strong&gt; &lt;br /&gt;&lt;strong&gt;A&lt;/strong&gt; : We added the honeypot daemons which we thought were most suitable and we have good experience with. If you think a crucial honeypot daemon is missing, let us &lt;a href=&quot;#contact&quot;&gt;know&lt;/a&gt;. Maybe someday we will add it.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Q&lt;/strong&gt; : &lt;strong&gt;&lt;em&gt;Why is my installation failing?&lt;/em&gt;&lt;/strong&gt; &lt;br /&gt;&lt;strong&gt;A&lt;/strong&gt; : Some people have tried to install it in VirtualBox using the default disk size of 8GB. This is not enough storage and the installation will fail. Same applies to VMWare’s Easy Install. Make sure you meet the &lt;a href=&quot;#requirements&quot;&gt;system requirements&lt;/a&gt;. T-Pot requires at least 2GB RAM and 40GB disk space. And make sure that a working internet connection is available.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Q&lt;/strong&gt; : &lt;strong&gt;&lt;em&gt;I try to login via ssh but my ssh key gets rejected?&lt;/em&gt;&lt;/strong&gt; &lt;br /&gt;&lt;strong&gt;A&lt;/strong&gt;: Are you sure you are connecting to the right port? The SSH honeypot &lt;em&gt;kippo&lt;/em&gt; is listening on port 22. &lt;em&gt;OpenSSH&lt;/em&gt; is listening on port 64295. More &lt;a href=&quot;#ssh&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Q&lt;/strong&gt; : &lt;strong&gt;&lt;em&gt;I enabled two-factor authentication, but all I get is a password prompt and it does not accept my password. What happened?&lt;/em&gt;&lt;/strong&gt; &lt;br /&gt;&lt;strong&gt;A&lt;/strong&gt; : You probably invoked the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2fa_enable.sh&lt;/code&gt; script (a) as &lt;em&gt;root&lt;/em&gt; or (b) via &lt;em&gt;sudo&lt;/em&gt;, and you should have invoked it as the user &lt;em&gt;tsec&lt;/em&gt;.&lt;br /&gt;Fix for (a):&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  sudo mv /root/.google_authenticator /home/tsec/.google_authenticator
  sudo chown tsec:tsec /home/tsec/.google_authenticator &amp;lt;br&amp;gt;Fix for (b): 

  sudo chown tsec:tsec /home/tsec/.google_authenticator
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Q&lt;/strong&gt; : &lt;strong&gt;&lt;em&gt;I cannot expose T-Pot to full internet access, but I still want to participate. Can you tell me which ports should be forwarded to T-Pot?&lt;/em&gt;&lt;/strong&gt; &lt;br /&gt;&lt;strong&gt;A&lt;/strong&gt; : T-Pot works best when exposed to the unfiltered internet. If you are unable to place it in that way, &lt;a href=&quot;#placement&quot;&gt;here&lt;/a&gt; is a list of ports that should be forwarded to T-Pot.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;…  to  be extended depending on feedback.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;contact&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;contact&quot;&gt;Contact&lt;/h1&gt;
&lt;p&gt;We provide the software as it is as a Community Edition. T-Pot is designed to run out of the box and with no maintenance effort. &lt;br /&gt;
We hope you understand that we are unable to provide support on an individual basis. We will try to answer common  questions and problems in the Q&amp;amp;A section.&lt;/p&gt;

&lt;p&gt;Please understand that we cannot provide support on an individual basis. We will try to address questions, bugs and problems on our &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce/issues&quot;&gt;GitHub issue list&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;licenses&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;licenses&quot;&gt;Licenses&lt;/h1&gt;
&lt;p&gt;The software that T-Pot is built on, uses the following licenses.
&lt;br /&gt;GPLv2: &lt;a href=&quot;http://src.carnivore.it/dionaea/tree/LICENSE&quot;&gt;dionaea&lt;/a&gt;, &lt;a href=&quot;http://src.carnivore.it/honeytrap/tree/LICENSE&quot;&gt;honeytrap (by Tillmann Werner)&lt;/a&gt;, &lt;a href=&quot;http://suricata-ids.org/about/open-source/&quot;&gt;suricata&lt;/a&gt;
&lt;br /&gt;GPLv3: &lt;a href=&quot;https://github.com/dtag-dev-sec/ews/blob/master/GPL&quot;&gt;ewsposter (by Markus Schroer)&lt;/a&gt;, &lt;a href=&quot;https://github.com/glastopf/glastopf/blob/master/GPL&quot;&gt;glastopf (by Lukas Rist)&lt;/a&gt;
&lt;br /&gt;Apache 2 License: &lt;a href=&quot;https://github.com/elasticsearch/elasticsearch/blob/master/LICENSE.txt&quot;&gt;elasticsearch&lt;/a&gt;, &lt;a href=&quot;https://github.com/elasticsearch/logstash/blob/master/LICENSE&quot;&gt;logstash&lt;/a&gt;, &lt;a href=&quot;https://github.com/elasticsearch/kibana/blob/master/LICENSE.md&quot;&gt;kibana&lt;/a&gt;, [docker] (https://github.com/docker/docker/blob/master/LICENSE)
&lt;br /&gt;&lt;a href=&quot;https://github.com/desaster/kippo/blob/master/doc/COPYRIGHT&quot;&gt;kippo copyright disclaimer (by Upi Tamminen)&lt;/a&gt; 
&lt;br /&gt;&lt;a href=&quot;http://www.ubuntu.com/about/about-ubuntu/licensing&quot;&gt;Ubuntu licensing&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 17 Mar 2015 10:29:25 +0100</pubDate>
        <link>http://dtag-dev-sec.github.io//mediator/feature/2015/03/17/concept.html</link>
        <guid isPermaLink="true">http://dtag-dev-sec.github.io//mediator/feature/2015/03/17/concept.html</guid>
        
        <category>featured</category>
        
        
        <category>mediator</category>
        
        <category>feature</category>
        
      </item>
    
  </channel>
</rss>
